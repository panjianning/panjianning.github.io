var t=Math.pow,e=(t,e,n)=>new Promise(((i,r)=>{var a=t=>{try{o(n.next(t))}catch(e){r(e)}},s=t=>{try{o(n.throw(t))}catch(e){r(e)}},o=t=>t.done?i(t.value):Promise.resolve(t.value).then(a,s);o((n=n.apply(t,e)).next())}));import{l as n,u as i,m as r,as as a,p as s,av as o,q as l,b4 as c,b1 as h,o as u,g as d,b as p,w as f,e as m,x as g,y as v,z as _,aC as x,F as S,B as y,A as M,H as b,c as E,b5 as T,aL as w,aM as A,aY as C,aZ as R,aX as P,aI as U,C as L,I as W,D as N,E as I,a as O}from"./main.b6b55ba2.js";import{F as D,_ as F,I as k,c as z,S as B,R as G,a as V,P as H,b as X,C as q}from"./fontName.8bef4f9a.js";import{_ as j,H as J,a as K}from"./lang.vue_vue_type_script_setup_true_name_lang_lang.f483aed5.js";import{_ as Q,I as Z}from"./axios.133e388e.js";function Y(t,e){for(var n=0;n<e.length;n++){const i=e[n];if("string"!=typeof i&&!Array.isArray(i))for(const e in i)if("default"!==e&&!(e in t)){const n=Object.getOwnPropertyDescriptor(i,e);n&&Object.defineProperty(t,e,n.get?n:{enumerable:!0,get:()=>i[e]})}}return Object.freeze(Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}))}var $={},tt={},et={parse:function(t){var e=et._bin,n=new Uint8Array(t);if("ttcf"==e.readASCII(n,0,4)){var i=4;e.readUshort(n,i),i+=2,e.readUshort(n,i),i+=2;var r=e.readUint(n,i);i+=4;for(var a=[],s=0;s<r;s++){var o=e.readUint(n,i);i+=4,a.push(et._readFont(n,o))}return a}return[et._readFont(n,0)]},_readFont:function(t,e){var n=et._bin,i=e;n.readFixed(t,e),e+=4;var r=n.readUshort(t,e);e+=2,n.readUshort(t,e),e+=2,n.readUshort(t,e),e+=2,n.readUshort(t,e),e+=2;for(var a=["cmap","head","hhea","maxp","hmtx","name","OS/2","post","loca","glyf","kern","CFF ","GPOS","GSUB","SVG "],s={_data:t,_offset:i},o={},l=0;l<r;l++){var c=n.readASCII(t,e,4);e+=4,n.readUint(t,e),e+=4;var h=n.readUint(t,e);e+=4;var u=n.readUint(t,e);e+=4,o[c]={offset:h,length:u}}for(l=0;l<a.length;l++){var d=a[l];o[d]&&(s[d.trim()]=et[d.trim()].parse(t,o[d].offset,o[d].length,s))}return s},_tabOffset:function(t,e,n){for(var i=et._bin,r=i.readUshort(t,n+4),a=n+12,s=0;s<r;s++){var o=i.readASCII(t,a,4);a+=4,i.readUint(t,a),a+=4;var l=i.readUint(t,a);if(a+=4,i.readUint(t,a),a+=4,o==e)return l}return 0}};et._bin={readFixed:function(t,e){return(t[e]<<8|t[e+1])+(t[e+2]<<8|t[e+3])/65540},readF2dot14:function(t,e){return et._bin.readShort(t,e)/16384},readInt:function(t,e){return et._bin._view(t).getInt32(e)},readInt8:function(t,e){return et._bin._view(t).getInt8(e)},readShort:function(t,e){return et._bin._view(t).getInt16(e)},readUshort:function(t,e){return et._bin._view(t).getUint16(e)},readUshorts:function(t,e,n){for(var i=[],r=0;r<n;r++)i.push(et._bin.readUshort(t,e+2*r));return i},readUint:function(t,e){return et._bin._view(t).getUint32(e)},readUint64:function(t,e){return 4294967296*et._bin.readUint(t,e)+et._bin.readUint(t,e+4)},readASCII:function(t,e,n){for(var i="",r=0;r<n;r++)i+=String.fromCharCode(t[e+r]);return i},readUnicode:function(t,e,n){for(var i="",r=0;r<n;r++){var a=t[e++]<<8|t[e++];i+=String.fromCharCode(a)}return i},_tdec:"undefined"!=typeof window&&window.TextDecoder?new window.TextDecoder:null,readUTF8:function(t,e,n){var i=et._bin._tdec;return i&&0==e&&n==t.length?i.decode(t):et._bin.readASCII(t,e,n)},readBytes:function(t,e,n){for(var i=[],r=0;r<n;r++)i.push(t[e+r]);return i},readASCIIArray:function(t,e,n){for(var i=[],r=0;r<n;r++)i.push(String.fromCharCode(t[e+r]));return i},_view:function(t){return t._dataView||(t._dataView=t.buffer?new DataView(t.buffer,t.byteOffset,t.byteLength):new DataView(new Uint8Array(t).buffer))}},et._lctf={},et._lctf.parse=function(t,e,n,i,r){var a=et._bin,s={},o=e;a.readFixed(t,e),e+=4;var l=a.readUshort(t,e);e+=2;var c=a.readUshort(t,e);e+=2;var h=a.readUshort(t,e);return e+=2,s.scriptList=et._lctf.readScriptList(t,o+l),s.featureList=et._lctf.readFeatureList(t,o+c),s.lookupList=et._lctf.readLookupList(t,o+h,r),s},et._lctf.readLookupList=function(t,e,n){var i=et._bin,r=e,a=[],s=i.readUshort(t,e);e+=2;for(var o=0;o<s;o++){var l=i.readUshort(t,e);e+=2;var c=et._lctf.readLookupTable(t,r+l,n);a.push(c)}return a},et._lctf.readLookupTable=function(t,e,n){var i=et._bin,r=e,a={tabs:[]};a.ltype=i.readUshort(t,e),e+=2,a.flag=i.readUshort(t,e),e+=2;var s=i.readUshort(t,e);e+=2;for(var o=a.ltype,l=0;l<s;l++){var c=i.readUshort(t,e);e+=2;var h=n(t,o,r+c,a);a.tabs.push(h)}return a},et._lctf.numOfOnes=function(t){for(var e=0,n=0;n<32;n++)0!=(t>>>n&1)&&e++;return e},et._lctf.readClassDef=function(t,e){var n=et._bin,i=[],r=n.readUshort(t,e);if(e+=2,1==r){var a=n.readUshort(t,e);e+=2;var s=n.readUshort(t,e);e+=2;for(var o=0;o<s;o++)i.push(a+o),i.push(a+o),i.push(n.readUshort(t,e)),e+=2}if(2==r){var l=n.readUshort(t,e);e+=2;for(o=0;o<l;o++)i.push(n.readUshort(t,e)),e+=2,i.push(n.readUshort(t,e)),e+=2,i.push(n.readUshort(t,e)),e+=2}return i},et._lctf.getInterval=function(t,e){for(var n=0;n<t.length;n+=3){var i=t[n],r=t[n+1];if(t[n+2],i<=e&&e<=r)return n}return-1},et._lctf.readCoverage=function(t,e){var n=et._bin,i={};i.fmt=n.readUshort(t,e),e+=2;var r=n.readUshort(t,e);return e+=2,1==i.fmt&&(i.tab=n.readUshorts(t,e,r)),2==i.fmt&&(i.tab=n.readUshorts(t,e,3*r)),i},et._lctf.coverageIndex=function(t,e){var n=t.tab;if(1==t.fmt)return n.indexOf(e);if(2==t.fmt){var i=et._lctf.getInterval(n,e);if(-1!=i)return n[i+2]+(e-n[i])}return-1},et._lctf.readFeatureList=function(t,e){var n=et._bin,i=e,r=[],a=n.readUshort(t,e);e+=2;for(var s=0;s<a;s++){var o=n.readASCII(t,e,4);e+=4;var l=n.readUshort(t,e);e+=2;var c=et._lctf.readFeatureTable(t,i+l);c.tag=o.trim(),r.push(c)}return r},et._lctf.readFeatureTable=function(t,e){var n=et._bin,i=e,r={},a=n.readUshort(t,e);e+=2,a>0&&(r.featureParams=i+a);var s=n.readUshort(t,e);e+=2,r.tab=[];for(var o=0;o<s;o++)r.tab.push(n.readUshort(t,e+2*o));return r},et._lctf.readScriptList=function(t,e){var n=et._bin,i=e,r={},a=n.readUshort(t,e);e+=2;for(var s=0;s<a;s++){var o=n.readASCII(t,e,4);e+=4;var l=n.readUshort(t,e);e+=2,r[o.trim()]=et._lctf.readScriptTable(t,i+l)}return r},et._lctf.readScriptTable=function(t,e){var n=et._bin,i=e,r={},a=n.readUshort(t,e);e+=2,a>0&&(r.default=et._lctf.readLangSysTable(t,i+a));var s=n.readUshort(t,e);e+=2;for(var o=0;o<s;o++){var l=n.readASCII(t,e,4);e+=4;var c=n.readUshort(t,e);e+=2,r[l.trim()]=et._lctf.readLangSysTable(t,i+c)}return r},et._lctf.readLangSysTable=function(t,e){var n=et._bin,i={};n.readUshort(t,e),e+=2,i.reqFeature=n.readUshort(t,e),e+=2;var r=n.readUshort(t,e);return e+=2,i.features=n.readUshorts(t,e,r),i},et.CFF={},et.CFF.parse=function(t,e,n){var i=et._bin;(t=new Uint8Array(t.buffer,e,n))[e=0],t[++e],t[++e],t[++e],e++;var r=[];e=et.CFF.readIndex(t,e,r);for(var a=[],s=0;s<r.length-1;s++)a.push(i.readASCII(t,e+r[s],r[s+1]-r[s]));e+=r[r.length-1];var o=[];e=et.CFF.readIndex(t,e,o);var l=[];for(s=0;s<o.length-1;s++)l.push(et.CFF.readDict(t,e+o[s],e+o[s+1]));e+=o[o.length-1];var c=l[0],h=[];e=et.CFF.readIndex(t,e,h);var u=[];for(s=0;s<h.length-1;s++)u.push(i.readASCII(t,e+h[s],h[s+1]-h[s]));if(e+=h[h.length-1],et.CFF.readSubrs(t,e,c),c.CharStrings){e=c.CharStrings;h=[];e=et.CFF.readIndex(t,e,h);var d=[];for(s=0;s<h.length-1;s++)d.push(i.readBytes(t,e+h[s],h[s+1]-h[s]));c.CharStrings=d}if(c.ROS){e=c.FDArray;var p=[];e=et.CFF.readIndex(t,e,p),c.FDArray=[];for(s=0;s<p.length-1;s++){var f=et.CFF.readDict(t,e+p[s],e+p[s+1]);et.CFF._readFDict(t,f,u),c.FDArray.push(f)}e+=p[p.length-1],e=c.FDSelect,c.FDSelect=[];var m=t[e];if(e++,3!=m)throw m;var g=i.readUshort(t,e);e+=2;for(s=0;s<g+1;s++)c.FDSelect.push(i.readUshort(t,e),t[e+2]),e+=3}return c.Encoding&&(c.Encoding=et.CFF.readEncoding(t,c.Encoding,c.CharStrings.length)),c.charset&&(c.charset=et.CFF.readCharset(t,c.charset,c.CharStrings.length)),et.CFF._readFDict(t,c,u),c},et.CFF._readFDict=function(t,e,n){var i;for(var r in e.Private&&(i=e.Private[1],e.Private=et.CFF.readDict(t,i,i+e.Private[0]),e.Private.Subrs&&et.CFF.readSubrs(t,i+e.Private.Subrs,e.Private)),e)-1!=["FamilyName","FontName","FullName","Notice","version","Copyright"].indexOf(r)&&(e[r]=n[e[r]-426+35])},et.CFF.readSubrs=function(t,e,n){var i=et._bin,r=[];e=et.CFF.readIndex(t,e,r);var a,s=r.length;a=s<1240?107:s<33900?1131:32768,n.Bias=a,n.Subrs=[];for(var o=0;o<r.length-1;o++)n.Subrs.push(i.readBytes(t,e+r[o],r[o+1]-r[o]))},et.CFF.tableSE=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,0,111,112,113,114,0,115,116,117,118,119,120,121,122,0,123,0,124,125,126,127,128,129,130,131,0,132,133,0,134,135,136,137,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,138,0,139,0,0,0,0,140,141,142,143,0,0,0,0,0,144,0,0,0,145,0,0,146,147,148,149,0,0,0,0],et.CFF.glyphByUnicode=function(t,e){for(var n=0;n<t.charset.length;n++)if(t.charset[n]==e)return n;return-1},et.CFF.glyphBySE=function(t,e){return e<0||e>255?-1:et.CFF.glyphByUnicode(t,et.CFF.tableSE[e])},et.CFF.readEncoding=function(t,e,n){et._bin;var i=[".notdef"],r=t[e];if(e++,0!=r)throw"error: unknown encoding format: "+r;var a=t[e];e++;for(var s=0;s<a;s++)i.push(t[e+s]);return i},et.CFF.readCharset=function(t,e,n){var i=et._bin,r=[".notdef"],a=t[e];if(e++,0==a)for(var s=0;s<n;s++){var o=i.readUshort(t,e);e+=2,r.push(o)}else{if(1!=a&&2!=a)throw"error: format: "+a;for(;r.length<n;){o=i.readUshort(t,e);e+=2;var l=0;1==a?(l=t[e],e++):(l=i.readUshort(t,e),e+=2);for(s=0;s<=l;s++)r.push(o),o++}}return r},et.CFF.readIndex=function(t,e,n){var i=et._bin,r=i.readUshort(t,e)+1,a=t[e+=2];if(e++,1==a)for(var s=0;s<r;s++)n.push(t[e+s]);else if(2==a)for(s=0;s<r;s++)n.push(i.readUshort(t,e+2*s));else if(3==a)for(s=0;s<r;s++)n.push(16777215&i.readUint(t,e+3*s-1));else if(1!=r)throw"unsupported offset size: "+a+", count: "+r;return(e+=r*a)-1},et.CFF.getCharString=function(t,e,n){var i=et._bin,r=t[e],a=t[e+1];t[e+2],t[e+3],t[e+4];var s=1,o=null,l=null;r<=20&&(o=r,s=1),12==r&&(o=100*r+a,s=2),21<=r&&r<=27&&(o=r,s=1),28==r&&(l=i.readShort(t,e+1),s=3),29<=r&&r<=31&&(o=r,s=1),32<=r&&r<=246&&(l=r-139,s=1),247<=r&&r<=250&&(l=256*(r-247)+a+108,s=2),251<=r&&r<=254&&(l=256*-(r-251)-a-108,s=2),255==r&&(l=i.readInt(t,e+1)/65535,s=5),n.val=null!=l?l:"o"+o,n.size=s},et.CFF.readCharString=function(t,e,n){for(var i=e+n,r=et._bin,a=[];e<i;){var s=t[e],o=t[e+1];t[e+2],t[e+3],t[e+4];var l=1,c=null,h=null;s<=20&&(c=s,l=1),12==s&&(c=100*s+o,l=2),19!=s&&20!=s||(c=s,l=2),21<=s&&s<=27&&(c=s,l=1),28==s&&(h=r.readShort(t,e+1),l=3),29<=s&&s<=31&&(c=s,l=1),32<=s&&s<=246&&(h=s-139,l=1),247<=s&&s<=250&&(h=256*(s-247)+o+108,l=2),251<=s&&s<=254&&(h=256*-(s-251)-o-108,l=2),255==s&&(h=r.readInt(t,e+1)/65535,l=5),a.push(null!=h?h:"o"+c),e+=l}return a},et.CFF.readDict=function(t,e,n){for(var i=et._bin,r={},a=[];e<n;){var s=t[e],o=t[e+1];t[e+2],t[e+3],t[e+4];var l=1,c=null,h=null;if(28==s&&(h=i.readShort(t,e+1),l=3),29==s&&(h=i.readInt(t,e+1),l=5),32<=s&&s<=246&&(h=s-139,l=1),247<=s&&s<=250&&(h=256*(s-247)+o+108,l=2),251<=s&&s<=254&&(h=256*-(s-251)-o-108,l=2),255==s)throw h=i.readInt(t,e+1)/65535,l=5,"unknown number";if(30==s){var u=[];for(l=1;;){var d=t[e+l];l++;var p=d>>4,f=15&d;if(15!=p&&u.push(p),15!=f&&u.push(f),15==f)break}for(var m="",g=[0,1,2,3,4,5,6,7,8,9,".","e","e-","reserved","-","endOfNumber"],v=0;v<u.length;v++)m+=g[u[v]];h=parseFloat(m)}if(s<=21)if(c=["version","Notice","FullName","FamilyName","Weight","FontBBox","BlueValues","OtherBlues","FamilyBlues","FamilyOtherBlues","StdHW","StdVW","escape","UniqueID","XUID","charset","Encoding","CharStrings","Private","Subrs","defaultWidthX","nominalWidthX"][s],l=1,12==s)c=["Copyright","isFixedPitch","ItalicAngle","UnderlinePosition","UnderlineThickness","PaintType","CharstringType","FontMatrix","StrokeWidth","BlueScale","BlueShift","BlueFuzz","StemSnapH","StemSnapV","ForceBold",0,0,"LanguageGroup","ExpansionFactor","initialRandomSeed","SyntheticBase","PostScript","BaseFontName","BaseFontBlend",0,0,0,0,0,0,"ROS","CIDFontVersion","CIDFontRevision","CIDFontType","CIDCount","UIDBase","FDArray","FDSelect","FontName"][o],l=2;null!=c?(r[c]=1==a.length?a[0]:a,a=[]):a.push(h),e+=l}return r},et.cmap={},et.cmap.parse=function(t,e,n){t=new Uint8Array(t.buffer,e,n),e=0;var i=et._bin,r={};i.readUshort(t,e),e+=2;var a=i.readUshort(t,e);e+=2;var s=[];r.tables=[];for(var o=0;o<a;o++){var l=i.readUshort(t,e);e+=2;var c=i.readUshort(t,e);e+=2;var h=i.readUint(t,e);e+=4;var u="p"+l+"e"+c,d=s.indexOf(h);if(-1==d){var p;d=r.tables.length,s.push(h);var f=i.readUshort(t,h);0==f?p=et.cmap.parse0(t,h):4==f?p=et.cmap.parse4(t,h):6==f?p=et.cmap.parse6(t,h):12==f&&(p=et.cmap.parse12(t,h)),r.tables.push(p)}if(null!=r[u])throw"multiple tables for one platform+encoding";r[u]=d}return r},et.cmap.parse0=function(t,e){var n=et._bin,i={};i.format=n.readUshort(t,e),e+=2;var r=n.readUshort(t,e);e+=2,n.readUshort(t,e),e+=2,i.map=[];for(var a=0;a<r-6;a++)i.map.push(t[e+a]);return i},et.cmap.parse4=function(t,e){var n=et._bin,i=e,r={};r.format=n.readUshort(t,e),e+=2;var a=n.readUshort(t,e);e+=2,n.readUshort(t,e),e+=2;var s=n.readUshort(t,e);e+=2;var o=s/2;r.searchRange=n.readUshort(t,e),e+=2,r.entrySelector=n.readUshort(t,e),e+=2,r.rangeShift=n.readUshort(t,e),e+=2,r.endCount=n.readUshorts(t,e,o),e+=2*o,e+=2,r.startCount=n.readUshorts(t,e,o),e+=2*o,r.idDelta=[];for(var l=0;l<o;l++)r.idDelta.push(n.readShort(t,e)),e+=2;for(r.idRangeOffset=n.readUshorts(t,e,o),e+=2*o,r.glyphIdArray=[];e<i+a;)r.glyphIdArray.push(n.readUshort(t,e)),e+=2;return r},et.cmap.parse6=function(t,e){var n=et._bin,i={};i.format=n.readUshort(t,e),e+=2,n.readUshort(t,e),e+=2,n.readUshort(t,e),e+=2,i.firstCode=n.readUshort(t,e),e+=2;var r=n.readUshort(t,e);e+=2,i.glyphIdArray=[];for(var a=0;a<r;a++)i.glyphIdArray.push(n.readUshort(t,e)),e+=2;return i},et.cmap.parse12=function(t,e){var n=et._bin,i={};i.format=n.readUshort(t,e),e+=2,e+=2,n.readUint(t,e),e+=4,n.readUint(t,e),e+=4;var r=n.readUint(t,e);e+=4,i.groups=[];for(var a=0;a<r;a++){var s=e+12*a,o=n.readUint(t,s+0),l=n.readUint(t,s+4),c=n.readUint(t,s+8);i.groups.push([o,l,c])}return i},et.glyf={},et.glyf.parse=function(t,e,n,i){for(var r=[],a=0;a<i.maxp.numGlyphs;a++)r.push(null);return r},et.glyf._parseGlyf=function(t,e){var n=et._bin,i=t._data,r=et._tabOffset(i,"glyf",t._offset)+t.loca[e];if(t.loca[e]==t.loca[e+1])return null;var a={};if(a.noc=n.readShort(i,r),r+=2,a.xMin=n.readShort(i,r),r+=2,a.yMin=n.readShort(i,r),r+=2,a.xMax=n.readShort(i,r),r+=2,a.yMax=n.readShort(i,r),r+=2,a.xMin>=a.xMax||a.yMin>=a.yMax)return null;if(a.noc>0){a.endPts=[];for(var s=0;s<a.noc;s++)a.endPts.push(n.readUshort(i,r)),r+=2;var o=n.readUshort(i,r);if(r+=2,i.length-r<o)return null;a.instructions=n.readBytes(i,r,o),r+=o;var l=a.endPts[a.noc-1]+1;a.flags=[];for(s=0;s<l;s++){var c=i[r];if(r++,a.flags.push(c),0!=(8&c)){var h=i[r];r++;for(var u=0;u<h;u++)a.flags.push(c),s++}}a.xs=[];for(s=0;s<l;s++){var d=0!=(2&a.flags[s]),p=0!=(16&a.flags[s]);d?(a.xs.push(p?i[r]:-i[r]),r++):p?a.xs.push(0):(a.xs.push(n.readShort(i,r)),r+=2)}a.ys=[];for(s=0;s<l;s++){d=0!=(4&a.flags[s]),p=0!=(32&a.flags[s]);d?(a.ys.push(p?i[r]:-i[r]),r++):p?a.ys.push(0):(a.ys.push(n.readShort(i,r)),r+=2)}var f=0,m=0;for(s=0;s<l;s++)f+=a.xs[s],m+=a.ys[s],a.xs[s]=f,a.ys[s]=m}else{var g;a.parts=[];do{g=n.readUshort(i,r),r+=2;var v={m:{a:1,b:0,c:0,d:1,tx:0,ty:0},p1:-1,p2:-1};if(a.parts.push(v),v.glyphIndex=n.readUshort(i,r),r+=2,1&g){var _=n.readShort(i,r);r+=2;var x=n.readShort(i,r);r+=2}else{_=n.readInt8(i,r);r++;x=n.readInt8(i,r);r++}2&g?(v.m.tx=_,v.m.ty=x):(v.p1=_,v.p2=x),8&g?(v.m.a=v.m.d=n.readF2dot14(i,r),r+=2):64&g?(v.m.a=n.readF2dot14(i,r),r+=2,v.m.d=n.readF2dot14(i,r),r+=2):128&g&&(v.m.a=n.readF2dot14(i,r),r+=2,v.m.b=n.readF2dot14(i,r),r+=2,v.m.c=n.readF2dot14(i,r),r+=2,v.m.d=n.readF2dot14(i,r),r+=2)}while(32&g);if(256&g){var S=n.readUshort(i,r);r+=2,a.instr=[];for(s=0;s<S;s++)a.instr.push(i[r]),r++}}return a},et.GPOS={},et.GPOS.parse=function(t,e,n,i){return et._lctf.parse(t,e,n,i,et.GPOS.subt)},et.GPOS.subt=function(t,e,n,i){var r=et._bin,a=n,s={};if(s.fmt=r.readUshort(t,n),n+=2,1==e||2==e||3==e||7==e||8==e&&s.fmt<=2){var o=r.readUshort(t,n);n+=2,s.coverage=et._lctf.readCoverage(t,o+a)}if(1==e&&1==s.fmt){var l=r.readUshort(t,n);n+=2;var c=et._lctf.numOfOnes(l);0!=l&&(s.pos=et.GPOS.readValueRecord(t,n,l))}else if(2==e&&s.fmt>=1&&s.fmt<=2){l=r.readUshort(t,n);n+=2;var h=r.readUshort(t,n);n+=2;c=et._lctf.numOfOnes(l);var u=et._lctf.numOfOnes(h);if(1==s.fmt){s.pairsets=[];var d=r.readUshort(t,n);n+=2;for(var p=0;p<d;p++){var f=a+r.readUshort(t,n);n+=2;var m=r.readUshort(t,f);f+=2;for(var g=[],v=0;v<m;v++){var _=r.readUshort(t,f);f+=2,0!=l&&(E=et.GPOS.readValueRecord(t,f,l),f+=2*c),0!=h&&(T=et.GPOS.readValueRecord(t,f,h),f+=2*u),g.push({gid2:_,val1:E,val2:T})}s.pairsets.push(g)}}if(2==s.fmt){var x=r.readUshort(t,n);n+=2;var S=r.readUshort(t,n);n+=2;var y=r.readUshort(t,n);n+=2;var M=r.readUshort(t,n);n+=2,s.classDef1=et._lctf.readClassDef(t,a+x),s.classDef2=et._lctf.readClassDef(t,a+S),s.matrix=[];for(p=0;p<y;p++){var b=[];for(v=0;v<M;v++){var E=null,T=null;0!=l&&(E=et.GPOS.readValueRecord(t,n,l),n+=2*c),0!=h&&(T=et.GPOS.readValueRecord(t,n,h),n+=2*u),b.push({val1:E,val2:T})}s.matrix.push(b)}}}else if(9==e&&1==s.fmt){var w=r.readUshort(t,n);n+=2;var A=r.readUint(t,n);if(n+=4,9==i.ltype)i.ltype=w;else if(i.ltype!=w)throw"invalid extension substitution";return et.GPOS.subt(t,i.ltype,a+A)}return s},et.GPOS.readValueRecord=function(t,e,n){var i=et._bin,r=[];return r.push(1&n?i.readShort(t,e):0),e+=1&n?2:0,r.push(2&n?i.readShort(t,e):0),e+=2&n?2:0,r.push(4&n?i.readShort(t,e):0),e+=4&n?2:0,r.push(8&n?i.readShort(t,e):0),e+=8&n?2:0,r},et.GSUB={},et.GSUB.parse=function(t,e,n,i){return et._lctf.parse(t,e,n,i,et.GSUB.subt)},et.GSUB.subt=function(t,e,n,i){var r=et._bin,a=n,s={};if(s.fmt=r.readUshort(t,n),n+=2,1!=e&&4!=e&&5!=e&&6!=e)return null;if(1==e||4==e||5==e&&s.fmt<=2||6==e&&s.fmt<=2){var o=r.readUshort(t,n);n+=2,s.coverage=et._lctf.readCoverage(t,a+o)}if(1==e&&s.fmt>=1&&s.fmt<=2){if(1==s.fmt)s.delta=r.readShort(t,n),n+=2;else if(2==s.fmt){var l=r.readUshort(t,n);n+=2,s.newg=r.readUshorts(t,n,l),n+=2*s.newg.length}}else if(4==e){s.vals=[];l=r.readUshort(t,n);n+=2;for(var c=0;c<l;c++){var h=r.readUshort(t,n);n+=2,s.vals.push(et.GSUB.readLigatureSet(t,a+h))}}else if(5==e&&2==s.fmt){if(2==s.fmt){var u=r.readUshort(t,n);n+=2,s.cDef=et._lctf.readClassDef(t,a+u),s.scset=[];var d=r.readUshort(t,n);n+=2;for(c=0;c<d;c++){var p=r.readUshort(t,n);n+=2,s.scset.push(0==p?null:et.GSUB.readSubClassSet(t,a+p))}}}else if(6==e&&3==s.fmt){if(3==s.fmt){for(c=0;c<3;c++){l=r.readUshort(t,n);n+=2;for(var f=[],m=0;m<l;m++)f.push(et._lctf.readCoverage(t,a+r.readUshort(t,n+2*m)));n+=2*l,0==c&&(s.backCvg=f),1==c&&(s.inptCvg=f),2==c&&(s.ahedCvg=f)}l=r.readUshort(t,n);n+=2,s.lookupRec=et.GSUB.readSubstLookupRecords(t,n,l)}}else if(7==e&&1==s.fmt){var g=r.readUshort(t,n);n+=2;var v=r.readUint(t,n);if(n+=4,9==i.ltype)i.ltype=g;else if(i.ltype!=g)throw"invalid extension substitution";return et.GSUB.subt(t,i.ltype,a+v)}return s},et.GSUB.readSubClassSet=function(t,e){var n=et._bin.readUshort,i=e,r=[],a=n(t,e);e+=2;for(var s=0;s<a;s++){var o=n(t,e);e+=2,r.push(et.GSUB.readSubClassRule(t,i+o))}return r},et.GSUB.readSubClassRule=function(t,e){var n=et._bin.readUshort,i={},r=n(t,e),a=n(t,e+=2);e+=2,i.input=[];for(var s=0;s<r-1;s++)i.input.push(n(t,e)),e+=2;return i.substLookupRecords=et.GSUB.readSubstLookupRecords(t,e,a),i},et.GSUB.readSubstLookupRecords=function(t,e,n){for(var i=et._bin.readUshort,r=[],a=0;a<n;a++)r.push(i(t,e),i(t,e+2)),e+=4;return r},et.GSUB.readChainSubClassSet=function(t,e){var n=et._bin,i=e,r=[],a=n.readUshort(t,e);e+=2;for(var s=0;s<a;s++){var o=n.readUshort(t,e);e+=2,r.push(et.GSUB.readChainSubClassRule(t,i+o))}return r},et.GSUB.readChainSubClassRule=function(t,e){for(var n=et._bin,i={},r=["backtrack","input","lookahead"],a=0;a<r.length;a++){var s=n.readUshort(t,e);e+=2,1==a&&s--,i[r[a]]=n.readUshorts(t,e,s),e+=2*i[r[a]].length}s=n.readUshort(t,e);return e+=2,i.subst=n.readUshorts(t,e,2*s),e+=2*i.subst.length,i},et.GSUB.readLigatureSet=function(t,e){var n=et._bin,i=e,r=[],a=n.readUshort(t,e);e+=2;for(var s=0;s<a;s++){var o=n.readUshort(t,e);e+=2,r.push(et.GSUB.readLigature(t,i+o))}return r},et.GSUB.readLigature=function(t,e){var n=et._bin,i={chain:[]};i.nglyph=n.readUshort(t,e),e+=2;var r=n.readUshort(t,e);e+=2;for(var a=0;a<r-1;a++)i.chain.push(n.readUshort(t,e)),e+=2;return i},et.head={},et.head.parse=function(t,e,n){var i=et._bin,r={};return i.readFixed(t,e),e+=4,r.fontRevision=i.readFixed(t,e),e+=4,i.readUint(t,e),e+=4,i.readUint(t,e),e+=4,r.flags=i.readUshort(t,e),e+=2,r.unitsPerEm=i.readUshort(t,e),e+=2,r.created=i.readUint64(t,e),e+=8,r.modified=i.readUint64(t,e),e+=8,r.xMin=i.readShort(t,e),e+=2,r.yMin=i.readShort(t,e),e+=2,r.xMax=i.readShort(t,e),e+=2,r.yMax=i.readShort(t,e),e+=2,r.macStyle=i.readUshort(t,e),e+=2,r.lowestRecPPEM=i.readUshort(t,e),e+=2,r.fontDirectionHint=i.readShort(t,e),e+=2,r.indexToLocFormat=i.readShort(t,e),e+=2,r.glyphDataFormat=i.readShort(t,e),e+=2,r},et.hhea={},et.hhea.parse=function(t,e,n){var i=et._bin,r={};return i.readFixed(t,e),e+=4,r.ascender=i.readShort(t,e),e+=2,r.descender=i.readShort(t,e),e+=2,r.lineGap=i.readShort(t,e),e+=2,r.advanceWidthMax=i.readUshort(t,e),e+=2,r.minLeftSideBearing=i.readShort(t,e),e+=2,r.minRightSideBearing=i.readShort(t,e),e+=2,r.xMaxExtent=i.readShort(t,e),e+=2,r.caretSlopeRise=i.readShort(t,e),e+=2,r.caretSlopeRun=i.readShort(t,e),e+=2,r.caretOffset=i.readShort(t,e),e+=2,e+=8,r.metricDataFormat=i.readShort(t,e),e+=2,r.numberOfHMetrics=i.readUshort(t,e),e+=2,r},et.hmtx={},et.hmtx.parse=function(t,e,n,i){for(var r=et._bin,a={aWidth:[],lsBearing:[]},s=0,o=0,l=0;l<i.maxp.numGlyphs;l++)l<i.hhea.numberOfHMetrics&&(s=r.readUshort(t,e),e+=2,o=r.readShort(t,e),e+=2),a.aWidth.push(s),a.lsBearing.push(o);return a},et.kern={},et.kern.parse=function(t,e,n,i){var r=et._bin,a=r.readUshort(t,e);if(e+=2,1==a)return et.kern.parseV1(t,e-2,n,i);var s=r.readUshort(t,e);e+=2;for(var o={glyph1:[],rval:[]},l=0;l<s;l++){e+=2;n=r.readUshort(t,e);e+=2;var c=r.readUshort(t,e);e+=2;var h=c>>>8;if(0!=(h&=15))throw"unknown kern table format: "+h;e=et.kern.readFormat0(t,e,o)}return o},et.kern.parseV1=function(t,e,n,i){var r=et._bin;r.readFixed(t,e),e+=4;var a=r.readUint(t,e);e+=4;for(var s={glyph1:[],rval:[]},o=0;o<a;o++){r.readUint(t,e),e+=4;var l=r.readUshort(t,e);e+=2,r.readUshort(t,e),e+=2;var c=l>>>8;if(0!=(c&=15))throw"unknown kern table format: "+c;e=et.kern.readFormat0(t,e,s)}return s},et.kern.readFormat0=function(t,e,n){var i=et._bin,r=-1,a=i.readUshort(t,e);e+=2,i.readUshort(t,e),e+=2,i.readUshort(t,e),e+=2,i.readUshort(t,e),e+=2;for(var s=0;s<a;s++){var o=i.readUshort(t,e);e+=2;var l=i.readUshort(t,e);e+=2;var c=i.readShort(t,e);e+=2,o!=r&&(n.glyph1.push(o),n.rval.push({glyph2:[],vals:[]}));var h=n.rval[n.rval.length-1];h.glyph2.push(l),h.vals.push(c),r=o}return e},et.loca={},et.loca.parse=function(t,e,n,i){var r=et._bin,a=[],s=i.head.indexToLocFormat,o=i.maxp.numGlyphs+1;if(0==s)for(var l=0;l<o;l++)a.push(r.readUshort(t,e+(l<<1))<<1);if(1==s)for(l=0;l<o;l++)a.push(r.readUint(t,e+(l<<2)));return a},et.maxp={},et.maxp.parse=function(t,e,n){var i=et._bin,r={},a=i.readUint(t,e);return e+=4,r.numGlyphs=i.readUshort(t,e),e+=2,65536==a&&(r.maxPoints=i.readUshort(t,e),e+=2,r.maxContours=i.readUshort(t,e),e+=2,r.maxCompositePoints=i.readUshort(t,e),e+=2,r.maxCompositeContours=i.readUshort(t,e),e+=2,r.maxZones=i.readUshort(t,e),e+=2,r.maxTwilightPoints=i.readUshort(t,e),e+=2,r.maxStorage=i.readUshort(t,e),e+=2,r.maxFunctionDefs=i.readUshort(t,e),e+=2,r.maxInstructionDefs=i.readUshort(t,e),e+=2,r.maxStackElements=i.readUshort(t,e),e+=2,r.maxSizeOfInstructions=i.readUshort(t,e),e+=2,r.maxComponentElements=i.readUshort(t,e),e+=2,r.maxComponentDepth=i.readUshort(t,e),e+=2),r},et.name={},et.name.parse=function(t,e,n){var i=et._bin,r={};i.readUshort(t,e),e+=2;var a=i.readUshort(t,e);e+=2,i.readUshort(t,e);for(var s,o=["copyright","fontFamily","fontSubfamily","ID","fullName","version","postScriptName","trademark","manufacturer","designer","description","urlVendor","urlDesigner","licence","licenceURL","---","typoFamilyName","typoSubfamilyName","compatibleFull","sampleText","postScriptCID","wwsFamilyName","wwsSubfamilyName","lightPalette","darkPalette"],l=e+=2,c=0;c<a;c++){var h=i.readUshort(t,e);e+=2;var u=i.readUshort(t,e);e+=2;var d=i.readUshort(t,e);e+=2;var p=i.readUshort(t,e);e+=2;var f=i.readUshort(t,e);e+=2;var m=i.readUshort(t,e);e+=2;var g,v=o[p],_=l+12*a+m;if(0==h)g=i.readUnicode(t,_,f/2);else if(3==h&&0==u)g=i.readUnicode(t,_,f/2);else if(0==u)g=i.readASCII(t,_,f);else if(1==u)g=i.readUnicode(t,_,f/2);else if(3==u)g=i.readUnicode(t,_,f/2);else{if(1!=h)throw"unknown encoding "+u+", platformID: "+h;g=i.readASCII(t,_,f)}var x="p"+h+","+d.toString(16);null==r[x]&&(r[x]={}),r[x][void 0!==v?v:p]=g,r[x]._lang=d}for(var S in r)if(null!=r[S].postScriptName&&1033==r[S]._lang)return r[S];for(var S in r)if(null!=r[S].postScriptName&&0==r[S]._lang)return r[S];for(var S in r)if(null!=r[S].postScriptName&&3084==r[S]._lang)return r[S];for(var S in r)if(null!=r[S].postScriptName)return r[S];for(var S in r){s=S;break}return r[s]},et["OS/2"]={},et["OS/2"].parse=function(t,e,n){var i=et._bin.readUshort(t,e);e+=2;var r={};if(0==i)et["OS/2"].version0(t,e,r);else if(1==i)et["OS/2"].version1(t,e,r);else if(2==i||3==i||4==i)et["OS/2"].version2(t,e,r);else{if(5!=i)throw"unknown OS/2 table version: "+i;et["OS/2"].version5(t,e,r)}return r},et["OS/2"].version0=function(t,e,n){var i=et._bin;return n.xAvgCharWidth=i.readShort(t,e),e+=2,n.usWeightClass=i.readUshort(t,e),e+=2,n.usWidthClass=i.readUshort(t,e),e+=2,n.fsType=i.readUshort(t,e),e+=2,n.ySubscriptXSize=i.readShort(t,e),e+=2,n.ySubscriptYSize=i.readShort(t,e),e+=2,n.ySubscriptXOffset=i.readShort(t,e),e+=2,n.ySubscriptYOffset=i.readShort(t,e),e+=2,n.ySuperscriptXSize=i.readShort(t,e),e+=2,n.ySuperscriptYSize=i.readShort(t,e),e+=2,n.ySuperscriptXOffset=i.readShort(t,e),e+=2,n.ySuperscriptYOffset=i.readShort(t,e),e+=2,n.yStrikeoutSize=i.readShort(t,e),e+=2,n.yStrikeoutPosition=i.readShort(t,e),e+=2,n.sFamilyClass=i.readShort(t,e),e+=2,n.panose=i.readBytes(t,e,10),e+=10,n.ulUnicodeRange1=i.readUint(t,e),e+=4,n.ulUnicodeRange2=i.readUint(t,e),e+=4,n.ulUnicodeRange3=i.readUint(t,e),e+=4,n.ulUnicodeRange4=i.readUint(t,e),e+=4,n.achVendID=[i.readInt8(t,e),i.readInt8(t,e+1),i.readInt8(t,e+2),i.readInt8(t,e+3)],e+=4,n.fsSelection=i.readUshort(t,e),e+=2,n.usFirstCharIndex=i.readUshort(t,e),e+=2,n.usLastCharIndex=i.readUshort(t,e),e+=2,n.sTypoAscender=i.readShort(t,e),e+=2,n.sTypoDescender=i.readShort(t,e),e+=2,n.sTypoLineGap=i.readShort(t,e),e+=2,n.usWinAscent=i.readUshort(t,e),e+=2,n.usWinDescent=i.readUshort(t,e),e+=2},et["OS/2"].version1=function(t,e,n){var i=et._bin;return e=et["OS/2"].version0(t,e,n),n.ulCodePageRange1=i.readUint(t,e),e+=4,n.ulCodePageRange2=i.readUint(t,e),e+=4},et["OS/2"].version2=function(t,e,n){var i=et._bin;return e=et["OS/2"].version1(t,e,n),n.sxHeight=i.readShort(t,e),e+=2,n.sCapHeight=i.readShort(t,e),e+=2,n.usDefault=i.readUshort(t,e),e+=2,n.usBreak=i.readUshort(t,e),e+=2,n.usMaxContext=i.readUshort(t,e),e+=2},et["OS/2"].version5=function(t,e,n){var i=et._bin;return e=et["OS/2"].version2(t,e,n),n.usLowerOpticalPointSize=i.readUshort(t,e),e+=2,n.usUpperOpticalPointSize=i.readUshort(t,e),e+=2},et.post={},et.post.parse=function(t,e,n){var i=et._bin,r={};return r.version=i.readFixed(t,e),e+=4,r.italicAngle=i.readFixed(t,e),e+=4,r.underlinePosition=i.readShort(t,e),e+=2,r.underlineThickness=i.readShort(t,e),e+=2,r},et.SVG={},et.SVG.parse=function(t,e,n){var i=et._bin,r={entries:[]},a=e;i.readUshort(t,e),e+=2;var s=i.readUint(t,e);e+=4,i.readUint(t,e),e+=4,e=s+a;var o=i.readUshort(t,e);e+=2;for(var l=0;l<o;l++){var c=i.readUshort(t,e);e+=2;var h=i.readUshort(t,e);e+=2;var u=i.readUint(t,e);e+=4;var d=i.readUint(t,e);e+=4;for(var p=new Uint8Array(t.buffer,a+u+s,d),f=i.readUTF8(p,0,p.length),m=c;m<=h;m++)r.entries[m]=f}return r},et.SVG.toPath=function(t){var e={cmds:[],crds:[]};if(null==t)return e;for(var n=(new DOMParser).parseFromString(t,"image/svg+xml").firstChild;"svg"!=n.tagName;)n=n.nextSibling;var i=n.getAttribute("viewBox");i=i?i.trim().split(" ").map(parseFloat):[0,0,1e3,1e3],et.SVG._toPath(n.children,e);for(var r=0;r<e.crds.length;r+=2){var a=e.crds[r],s=e.crds[r+1];a-=i[0],s=-(s-=i[1]),e.crds[r]=a,e.crds[r+1]=s}return e},et.SVG._toPath=function(t,e,n){for(var i=0;i<t.length;i++){var r=t[i],a=r.tagName,s=r.getAttribute("fill");if(null==s&&(s=n),"g"==a)et.SVG._toPath(r.children,e,s);else if("path"==a){e.cmds.push(s||"#000000");var o=r.getAttribute("d"),l=et.SVG._tokens(o);et.SVG._toksToPath(l,e),e.cmds.push("X")}}},et.SVG._tokens=function(t){for(var e=[],n=0,i=!1,r="";n<t.length;){var a=t.charCodeAt(n),s=t.charAt(n);n++;var o=48<=a&&a<=57||"."==s||"-"==s;i?"-"==s?(e.push(parseFloat(r)),r=s):o?r+=s:(e.push(parseFloat(r)),","!=s&&" "!=s&&e.push(s),i=!1):o?(r=s,i=!0):","!=s&&" "!=s&&e.push(s)}return i&&e.push(parseFloat(r)),e},et.SVG._toksToPath=function(t,e){for(var n=0,i=0,r=0,a=0,s=0,o={M:2,L:2,H:1,V:1,S:4,C:6},l=e.cmds,c=e.crds;n<t.length;){var h=t[n];if(n++,"z"==h)l.push("Z"),i=a,r=s;else for(var u=h.toUpperCase(),d=o[u],p=et.SVG._reps(t,n,d),f=0;f<p;f++){var m=0,g=0;if(h!=u&&(m=i,g=r),"M"==u)i=m+t[n++],r=g+t[n++],l.push("M"),c.push(i,r),a=i,s=r;else if("L"==u)i=m+t[n++],r=g+t[n++],l.push("L"),c.push(i,r);else if("H"==u)i=m+t[n++],l.push("L"),c.push(i,r);else if("V"==u)r=g+t[n++],l.push("L"),c.push(i,r);else if("C"==u){var v=m+t[n++],_=g+t[n++],x=m+t[n++],S=g+t[n++],y=m+t[n++],M=g+t[n++];l.push("C"),c.push(v,_,x,S,y,M),i=y,r=M}else if("S"==u){var b=Math.max(c.length-4,0);v=i+i-c[b],_=r+r-c[b+1],x=m+t[n++],S=g+t[n++],y=m+t[n++],M=g+t[n++];l.push("C"),c.push(v,_,x,S,y,M),i=y,r=M}}}},et.SVG._reps=function(t,e,n){for(var i=e;i<t.length&&"string"!=typeof t[i];)i+=n;return(i-e)/n},null==et&&(et={}),null==et.U&&(et.U={}),et.U.codeToGlyph=function(t,e){var n=t.cmap,i=-1;if(null!=n.p0e4?i=n.p0e4:null!=n.p3e1?i=n.p3e1:null!=n.p1e0?i=n.p1e0:null!=n.p0e3&&(i=n.p0e3),-1==i)throw"no familiar platform and encoding!";var r=n.tables[i];if(0==r.format)return e>=r.map.length?0:r.map[e];if(4==r.format){for(var a=-1,s=0;s<r.endCount.length;s++)if(e<=r.endCount[s]){a=s;break}if(-1==a)return 0;if(r.startCount[a]>e)return 0;return 65535&(0!=r.idRangeOffset[a]?r.glyphIdArray[e-r.startCount[a]+(r.idRangeOffset[a]>>1)-(r.idRangeOffset.length-a)]:e+r.idDelta[a])}if(12==r.format){if(e>r.groups[r.groups.length-1][1])return 0;for(s=0;s<r.groups.length;s++){var o=r.groups[s];if(o[0]<=e&&e<=o[1])return o[2]+(e-o[0])}return 0}throw"unknown cmap table format "+r.format},et.U.glyphToPath=function(t,e){var n={cmds:[],crds:[]};if(t.SVG&&t.SVG.entries[e]){var i=t.SVG.entries[e];return null==i?n:("string"==typeof i&&(i=et.SVG.toPath(i),t.SVG.entries[e]=i),i)}if(t.CFF){var r={x:0,y:0,stack:[],nStems:0,haveWidth:!1,width:t.CFF.Private?t.CFF.Private.defaultWidthX:0,open:!1},a=t.CFF,s=t.CFF.Private;if(a.ROS){for(var o=0;a.FDSelect[o+2]<=e;)o+=2;s=a.FDArray[a.FDSelect[o+1]].Private}et.U._drawCFF(t.CFF.CharStrings[e],r,a,s,n)}else t.glyf&&et.U._drawGlyf(e,t,n);return n},et.U._drawGlyf=function(t,e,n){var i=e.glyf[t];null==i&&(i=e.glyf[t]=et.glyf._parseGlyf(e,t)),null!=i&&(i.noc>-1?et.U._simpleGlyph(i,n):et.U._compoGlyph(i,e,n))},et.U._simpleGlyph=function(t,e){for(var n=0;n<t.noc;n++){for(var i=0==n?0:t.endPts[n-1]+1,r=t.endPts[n],a=i;a<=r;a++){var s=a==i?r:a-1,o=a==r?i:a+1,l=1&t.flags[a],c=1&t.flags[s],h=1&t.flags[o],u=t.xs[a],d=t.ys[a];if(a==i)if(l){if(!c){et.U.P.moveTo(e,u,d);continue}et.U.P.moveTo(e,t.xs[s],t.ys[s])}else c?et.U.P.moveTo(e,t.xs[s],t.ys[s]):et.U.P.moveTo(e,(t.xs[s]+u)/2,(t.ys[s]+d)/2);l?c&&et.U.P.lineTo(e,u,d):h?et.U.P.qcurveTo(e,u,d,t.xs[o],t.ys[o]):et.U.P.qcurveTo(e,u,d,(u+t.xs[o])/2,(d+t.ys[o])/2)}et.U.P.closePath(e)}},et.U._compoGlyph=function(t,e,n){for(var i=0;i<t.parts.length;i++){var r={cmds:[],crds:[]},a=t.parts[i];et.U._drawGlyf(a.glyphIndex,e,r);for(var s=a.m,o=0;o<r.crds.length;o+=2){var l=r.crds[o],c=r.crds[o+1];n.crds.push(l*s.a+c*s.b+s.tx),n.crds.push(l*s.c+c*s.d+s.ty)}for(o=0;o<r.cmds.length;o++)n.cmds.push(r.cmds[o])}},et.U._getGlyphClass=function(t,e){var n=et._lctf.getInterval(e,t);return-1==n?0:e[n+2]},et.U.getPairAdjustment=function(t,e,n){var i=!1;if(t.GPOS)for(var r=t.GPOS,a=r.lookupList,s=r.featureList,o=[],l=0;l<s.length;l++){var c=s[l];if("kern"==c.tag){i=!0;for(var h=0;h<c.tab.length;h++)if(!o[c.tab[h]]){o[c.tab[h]]=!0;for(var u=a[c.tab[h]],d=0;d<u.tabs.length;d++)if(null!=u.tabs[d]){var p,f=u.tabs[d];if(!f.coverage||-1!=(p=et._lctf.coverageIndex(f.coverage,e)))if(1==u.ltype);else if(2==u.ltype){var m=null;if(1==f.fmt){var g=f.pairsets[p];for(l=0;l<g.length;l++)g[l].gid2==n&&(m=g[l])}else if(2==f.fmt){var v=et.U._getGlyphClass(e,f.classDef1),_=et.U._getGlyphClass(n,f.classDef2);m=f.matrix[v][_]}if(m){var x=0;return m.val1&&m.val1[2]&&(x+=m.val1[2]),m.val2&&m.val2[0]&&(x+=m.val2[0]),x}}}}}}if(t.kern&&!i){var S=t.kern.glyph1.indexOf(e);if(-1!=S){var y=t.kern.rval[S].glyph2.indexOf(n);if(-1!=y)return t.kern.rval[S].vals[y]}}return 0},et.U.stringToGlyphs=function(t,e){for(var n=[],i=0;i<e.length;i++){(r=e.codePointAt(i))>65535&&i++,n.push(et.U.codeToGlyph(t,r))}for(i=0;i<e.length;i++){var r;if(2367==(r=e.codePointAt(i))){var a=n[i-1];n[i-1]=n[i],n[i]=a}r>65535&&i++}var s=t.GSUB;if(null==s)return n;for(var o=s.lookupList,l=s.featureList,c=["rlig","liga","mset","isol","init","fina","medi","half","pres","blws"],h=[],u=0;u<l.length;u++){var d=l[u];if(-1!=c.indexOf(d.tag))for(var p=0;p<d.tab.length;p++)if(!h[d.tab[p]]){h[d.tab[p]]=!0;for(var f=o[d.tab[p]],m=0;m<n.length;m++){var g=et.U._getWPfeature(e,m);-1!="isol,init,fina,medi".indexOf(d.tag)&&d.tag!=g||et.U._applySubs(n,m,f,o)}}}return n},et.U._getWPfeature=function(t,e){var n='\n\t" ,.:;!?()  ،',i="آأؤإاةدذرزوٱٲٳٵٶٷڈډڊڋڌڍڎڏڐڑڒړڔڕږڗژڙۀۃۄۅۆۇۈۉۊۋۍۏےۓەۮۯܐܕܖܗܘܙܞܨܪܬܯݍݙݚݛݫݬݱݳݴݸݹࡀࡆࡇࡉࡔࡧࡩࡪࢪࢫࢬࢮࢱࢲࢹૅેૉ૊૎૏ૐ૑૒૝ૡ૤૯஁ஃ஄அஉ஌எஏ஑னப஫஬",r=0==e||-1!=n.indexOf(t[e-1]),a=e==t.length-1||-1!=n.indexOf(t[e+1]);r||-1==i.indexOf(t[e-1])||(r=!0),a||-1==i.indexOf(t[e])||(a=!0),a||-1=="ꡲ્૗".indexOf(t[e+1])||(a=!0),r||-1=="ꡲ્૗".indexOf(t[e])||(r=!0);return r?a?"isol":"init":a?"fina":"medi"},et.U._applySubs=function(t,e,n,i){for(var r=t.length-e-1,a=0;a<n.tabs.length;a++)if(null!=n.tabs[a]){var s,o=n.tabs[a];if(!o.coverage||-1!=(s=et._lctf.coverageIndex(o.coverage,t[e])))if(1==n.ltype)t[e],1==o.fmt?t[e]=t[e]+o.delta:t[e]=o.newg[s];else if(4==n.ltype)for(var l=o.vals[s],c=0;c<l.length;c++){var h=l[c],u=h.chain.length;if(!(u>r)){for(var d=!0,p=0,f=0;f<u;f++){for(;-1==t[e+p+(1+f)];)p++;h.chain[f]!=t[e+p+(1+f)]&&(d=!1)}if(d){t[e]=h.nglyph;for(f=0;f<u+p;f++)t[e+f+1]=-1;break}}}else if(5==n.ltype&&2==o.fmt)for(var m=et._lctf.getInterval(o.cDef,t[e]),g=o.cDef[m+2],v=o.scset[g],_=0;_<v.length;_++){var x=v[_],S=x.input;if(!(S.length>r)){for(d=!0,f=0;f<S.length;f++){var y=et._lctf.getInterval(o.cDef,t[e+1+f]);if(-1==m&&o.cDef[y+2]!=S[f]){d=!1;break}}if(d){var M=x.substLookupRecords;for(c=0;c<M.length;c+=2)M[c],M[c+1]}}}else if(6==n.ltype&&3==o.fmt){if(!et.U._glsCovered(t,o.backCvg,e-o.backCvg.length))continue;if(!et.U._glsCovered(t,o.inptCvg,e))continue;if(!et.U._glsCovered(t,o.ahedCvg,e+o.inptCvg.length))continue;var b=o.lookupRec;for(_=0;_<b.length;_+=2){m=b[_];var E=i[b[_+1]];et.U._applySubs(t,e+m,E,i)}}}},et.U._glsCovered=function(t,e,n){for(var i=0;i<e.length;i++){if(-1==et._lctf.coverageIndex(e[i],t[n+i]))return!1}return!0},et.U.glyphsToPath=function(t,e,n){for(var i={cmds:[],crds:[]},r=0,a=0;a<e.length;a++){var s=e[a];if(-1!=s){for(var o=a<e.length-1&&-1!=e[a+1]?e[a+1]:0,l=et.U.glyphToPath(t,s),c=0;c<l.crds.length;c+=2)i.crds.push(l.crds[c]+r),i.crds.push(l.crds[c+1]);n&&i.cmds.push(n);for(c=0;c<l.cmds.length;c++)i.cmds.push(l.cmds[c]);n&&i.cmds.push("X"),r+=t.hmtx.aWidth[s],a<e.length-1&&(r+=et.U.getPairAdjustment(t,s,o))}}return i},et.U.pathToSVG=function(t,e){null==e&&(e=5);for(var n=[],i=0,r={M:2,L:2,Q:4,C:6},a=0;a<t.cmds.length;a++){var s=t.cmds[a],o=i+(r[s]?r[s]:0);for(n.push(s);i<o;){var l=t.crds[i++];n.push(parseFloat(l.toFixed(e))+(i==o?"":" "))}}return n.join("")},et.U.pathToContext=function(t,e){for(var n=0,i=t.crds,r=0;r<t.cmds.length;r++){var a=t.cmds[r];"M"==a?(e.moveTo(i[n],i[n+1]),n+=2):"L"==a?(e.lineTo(i[n],i[n+1]),n+=2):"C"==a?(e.bezierCurveTo(i[n],i[n+1],i[n+2],i[n+3],i[n+4],i[n+5]),n+=6):"Q"==a?(e.quadraticCurveTo(i[n],i[n+1],i[n+2],i[n+3]),n+=4):"#"==a.charAt(0)?(e.beginPath(),e.fillStyle=a):"Z"==a?e.closePath():"X"==a&&e.fill()}},et.U.P={},et.U.P.moveTo=function(t,e,n){t.cmds.push("M"),t.crds.push(e,n)},et.U.P.lineTo=function(t,e,n){t.cmds.push("L"),t.crds.push(e,n)},et.U.P.curveTo=function(t,e,n,i,r,a,s){t.cmds.push("C"),t.crds.push(e,n,i,r,a,s)},et.U.P.qcurveTo=function(t,e,n,i,r){t.cmds.push("Q"),t.crds.push(e,n,i,r)},et.U.P.closePath=function(t){t.cmds.push("Z")},et.U._drawCFF=function(t,e,n,i,r){for(var a=e.stack,s=e.nStems,o=e.haveWidth,l=e.width,c=e.open,h=0,u=e.x,d=e.y,p=0,f=0,m=0,g=0,v=0,_=0,x=0,S=0,y=0,M=0,b={val:0,size:0};h<t.length;){et.CFF.getCharString(t,h,b);var E=b.val;if(h+=b.size,"o1"==E||"o18"==E)a.length%2!=0&&!o&&(l=a.shift()+i.nominalWidthX),s+=a.length>>1,a.length=0,o=!0;else if("o3"==E||"o23"==E){a.length%2!=0&&!o&&(l=a.shift()+i.nominalWidthX),s+=a.length>>1,a.length=0,o=!0}else if("o4"==E)a.length>1&&!o&&(l=a.shift()+i.nominalWidthX,o=!0),c&&et.U.P.closePath(r),d+=a.pop(),et.U.P.moveTo(r,u,d),c=!0;else if("o5"==E)for(;a.length>0;)u+=a.shift(),d+=a.shift(),et.U.P.lineTo(r,u,d);else if("o6"==E||"o7"==E)for(var T=a.length,w="o6"==E,A=0;A<T;A++){var C=a.shift();w?u+=C:d+=C,w=!w,et.U.P.lineTo(r,u,d)}else if("o8"==E||"o24"==E){T=a.length;for(var R=0;R+6<=T;)p=u+a.shift(),f=d+a.shift(),m=p+a.shift(),g=f+a.shift(),u=m+a.shift(),d=g+a.shift(),et.U.P.curveTo(r,p,f,m,g,u,d),R+=6;"o24"==E&&(u+=a.shift(),d+=a.shift(),et.U.P.lineTo(r,u,d))}else{if("o11"==E)break;if("o1234"==E||"o1235"==E||"o1236"==E||"o1237"==E)"o1234"==E&&(f=d,m=(p=u+a.shift())+a.shift(),M=g=f+a.shift(),_=g,S=d,u=(x=(v=(y=m+a.shift())+a.shift())+a.shift())+a.shift(),et.U.P.curveTo(r,p,f,m,g,y,M),et.U.P.curveTo(r,v,_,x,S,u,d)),"o1235"==E&&(p=u+a.shift(),f=d+a.shift(),m=p+a.shift(),g=f+a.shift(),y=m+a.shift(),M=g+a.shift(),v=y+a.shift(),_=M+a.shift(),x=v+a.shift(),S=_+a.shift(),u=x+a.shift(),d=S+a.shift(),a.shift(),et.U.P.curveTo(r,p,f,m,g,y,M),et.U.P.curveTo(r,v,_,x,S,u,d)),"o1236"==E&&(p=u+a.shift(),f=d+a.shift(),m=p+a.shift(),M=g=f+a.shift(),_=g,x=(v=(y=m+a.shift())+a.shift())+a.shift(),S=_+a.shift(),u=x+a.shift(),et.U.P.curveTo(r,p,f,m,g,y,M),et.U.P.curveTo(r,v,_,x,S,u,d)),"o1237"==E&&(p=u+a.shift(),f=d+a.shift(),m=p+a.shift(),g=f+a.shift(),y=m+a.shift(),M=g+a.shift(),v=y+a.shift(),_=M+a.shift(),x=v+a.shift(),S=_+a.shift(),Math.abs(x-u)>Math.abs(S-d)?u=x+a.shift():d=S+a.shift(),et.U.P.curveTo(r,p,f,m,g,y,M),et.U.P.curveTo(r,v,_,x,S,u,d));else if("o14"==E){if(a.length>0&&!o&&(l=a.shift()+n.nominalWidthX,o=!0),4==a.length){var P=a.shift(),U=a.shift(),L=a.shift(),W=a.shift(),N=et.CFF.glyphBySE(n,L),I=et.CFF.glyphBySE(n,W);et.U._drawCFF(n.CharStrings[N],e,n,i,r),e.x=P,e.y=U,et.U._drawCFF(n.CharStrings[I],e,n,i,r)}c&&(et.U.P.closePath(r),c=!1)}else if("o19"==E||"o20"==E){a.length%2!=0&&!o&&(l=a.shift()+i.nominalWidthX),s+=a.length>>1,a.length=0,o=!0,h+=s+7>>3}else if("o21"==E)a.length>2&&!o&&(l=a.shift()+i.nominalWidthX,o=!0),d+=a.pop(),u+=a.pop(),c&&et.U.P.closePath(r),et.U.P.moveTo(r,u,d),c=!0;else if("o22"==E)a.length>1&&!o&&(l=a.shift()+i.nominalWidthX,o=!0),u+=a.pop(),c&&et.U.P.closePath(r),et.U.P.moveTo(r,u,d),c=!0;else if("o25"==E){for(;a.length>6;)u+=a.shift(),d+=a.shift(),et.U.P.lineTo(r,u,d);p=u+a.shift(),f=d+a.shift(),m=p+a.shift(),g=f+a.shift(),u=m+a.shift(),d=g+a.shift(),et.U.P.curveTo(r,p,f,m,g,u,d)}else if("o26"==E)for(a.length%2&&(u+=a.shift());a.length>0;)p=u,f=d+a.shift(),u=m=p+a.shift(),d=(g=f+a.shift())+a.shift(),et.U.P.curveTo(r,p,f,m,g,u,d);else if("o27"==E)for(a.length%2&&(d+=a.shift());a.length>0;)f=d,m=(p=u+a.shift())+a.shift(),g=f+a.shift(),u=m+a.shift(),d=g,et.U.P.curveTo(r,p,f,m,g,u,d);else if("o10"==E||"o29"==E){var O="o10"==E?i:n;if(0==a.length);else{var D=a.pop(),F=O.Subrs[D+O.Bias];e.x=u,e.y=d,e.nStems=s,e.haveWidth=o,e.width=l,e.open=c,et.U._drawCFF(F,e,n,i,r),u=e.x,d=e.y,s=e.nStems,o=e.haveWidth,l=e.width,c=e.open}}else if("o30"==E||"o31"==E){var k=a.length,z=(R=0,"o31"==E);for(R+=k-(T=-3&k);R<T;)z?(f=d,m=(p=u+a.shift())+a.shift(),d=(g=f+a.shift())+a.shift(),T-R==5?(u=m+a.shift(),R++):u=m,z=!1):(p=u,f=d+a.shift(),m=p+a.shift(),g=f+a.shift(),u=m+a.shift(),T-R==5?(d=g+a.shift(),R++):d=g,z=!0),et.U.P.curveTo(r,p,f,m,g,u,d),R+=4}else{if("o"==(E+"").charAt(0))throw E;a.push(E)}}}e.x=u,e.y=d,e.nStems=s,e.haveWidth=o,e.width=l,e.open=c},tt.Typr=et,$.__esModule=!0;var nt=tt,it={aalt:"Access All Alternates",abvf:"Above-base Forms",abvm:"Above - base Mark Positioning",abvs:"Above - base Substitutions",afrc:"Alternative Fractions",akhn:"Akhands",blwf:"Below - base Forms",blwm:"Below - base Mark Positioning",blws:"Below - base Substitutions",calt:"Contextual Alternates",case:"Case - Sensitive Forms",ccmp:"Glyph Composition / Decomposition",cfar:"Conjunct Form After Ro",cjct:"Conjunct Forms",clig:"Contextual Ligatures",cpct:"Centered CJK Punctuation",cpsp:"Capital Spacing",cswh:"Contextual Swash",curs:"Cursive Positioning",c2pc:"Petite Capitals From Capitals",c2sc:"Small Capitals From Capitals",dist:"Distances",dlig:"Discretionary Ligatures",dnom:"Denominators",dtls:"Dotless Forms",expt:"Expert Forms",falt:"Final Glyph on Line Alternates",fin2:"Terminal Forms #2",fin3:"Terminal Forms #3",fina:"Terminal Forms",flac:"Flattened accent forms",frac:"Fractions",fwid:"Full Widths",half:"Half Forms",haln:"Halant Forms",halt:"Alternate Half Widths",hist:"Historical Forms",hkna:"Horizontal Kana Alternates",hlig:"Historical Ligatures",hngl:"Hangul",hojo:"Hojo Kanji Forms(JIS X 0212 - 1990 Kanji Forms)",hwid:"Half Widths",init:"Initial Forms",isol:"Isolated Forms",ital:"Italics",jalt:"Justification Alternates",jp78:"JIS78 Forms",jp83:"JIS83 Forms",jp90:"JIS90 Forms",jp04:"JIS2004 Forms",kern:"Kerning",lfbd:"Left Bounds",liga:"Standard Ligatures",ljmo:"Leading Jamo Forms",lnum:"Lining Figures",locl:"Localized Forms",ltra:"Left - to - right alternates",ltrm:"Left - to - right mirrored forms",mark:"Mark Positioning",med2:"Medial Forms #2",medi:"Medial Forms",mgrk:"Mathematical Greek",mkmk:"Mark to Mark Positioning",mset:"Mark Positioning via Substitution",nalt:"Alternate Annotation Forms",nlck:"NLC Kanji Forms",nukt:"Nukta Forms",numr:"Numerators",onum:"Oldstyle Figures",opbd:"Optical Bounds",ordn:"Ordinals",ornm:"Ornaments",palt:"Proportional Alternate Widths",pcap:"Petite Capitals",pkna:"Proportional Kana",pnum:"Proportional Figures",pref:"Pre - Base Forms",pres:"Pre - base Substitutions",pstf:"Post - base Forms",psts:"Post - base Substitutions",pwid:"Proportional Widths",qwid:"Quarter Widths",rand:"Randomize",rclt:"Required Contextual Alternates",rkrf:"Rakar Forms",rlig:"Required Ligatures",rphf:"Reph Forms",rtbd:"Right Bounds",rtla:"Right - to - left alternates",rtlm:"Right - to - left mirrored forms",ruby:"Ruby Notation Forms",rvrn:"Required Variation Alternates",salt:"Stylistic Alternates",sinf:"Scientific Inferiors",size:"Optical size",smcp:"Small Capitals",smpl:"Simplified Forms",ssty:"Math script style alternates",stch:"Stretching Glyph Decomposition",subs:"Subscript",sups:"Superscript",swsh:"Swash",titl:"Titling",tjmo:"Trailing Jamo Forms",tnam:"Traditional Name Forms",tnum:"Tabular Figures",trad:"Traditional Forms",twid:"Third Widths",unic:"Unicase",valt:"Alternate Vertical Metrics",vatu:"Vattu Variants",vert:"Vertical Writing",vhal:"Alternate Vertical Half Metrics",vjmo:"Vowel Jamo Forms",vkna:"Vertical Kana Alternates",vkrn:"Vertical Kerning",vpal:"Proportional Alternate Vertical Metrics",vrt2:"Vertical Alternates and Rotation",vrtr:"Vertical Alternates for Rotation",zero:"Slashed Zero"},rt=function(){function t(t){var e=nt.Typr.parse(t);if(!e.length||"object"!=typeof e[0]||"function"!=typeof e[0].hasOwnProperty)throw"unable to parse font";for(var n in e[0])this[n]=e[0][n];this.enabledGSUB={}}return t.prototype.getFamilyName=function(){return this.name&&(this.name.typoFamilyName||this.name.fontFamily)||""},t.prototype.getSubFamilyName=function(){return this.name&&(this.name.typoSubfamilyName||this.name.fontSubfamily)||""},t.prototype.glyphToPath=function(t){return nt.Typr.U.glyphToPath(this,t)},t.prototype.getPairAdjustment=function(t,e){return nt.Typr.U.getPairAdjustment(this,t,e)},t.prototype.stringToGlyphs=function(t){return nt.Typr.U.stringToGlyphs(this,t)},t.prototype.glyphsToPath=function(t){return nt.Typr.U.glyphsToPath(this,t)},t.prototype.pathToSVG=function(t,e){return nt.Typr.U.pathToSVG(t,e)},t.prototype.pathToContext=function(t,e){return nt.Typr.U.pathToContext(t,e)},t.prototype.lookupFriendlyName=function(t,e){if(void 0!==this[t]){var n=this[t].featureList[e];return this.featureFriendlyName(n)}return""},t.prototype.featureFriendlyName=function(t){if(it[t.tag])return it[t.tag];if(t.tag.match(/ss[0-2][0-9]/)){var e="Stylistic Set "+Number(t.tag.substr(2,2)).toString();if(t.featureParams)if(0===nt.Typr._bin.readUshort(this._data,t.featureParams)){var n=nt.Typr._bin.readUshort(this._data,t.featureParams+2);if(this.name&&void 0!==this.name[n])return e+" - "+this.name[n]}return e}return t.tag.match(/cv[0-9][0-9]/)?"Character Variant "+Number(t.tag.substr(2,2)).toString():""},t.prototype.enableGSUB=function(t){if(this.GSUB){var e=this.GSUB.featureList[t];if(e)for(var n=0;n<e.tab.length;++n)this.enabledGSUB[e.tab[n]]=(this.enabledGSUB[e.tab[n]]||0)+1}},t.prototype.disableGSUB=function(t){if(this.GSUB){var e=this.GSUB.featureList[t];if(e)for(var n=0;n<e.tab.length;++n)this.enabledGSUB[e.tab[n]]>1?--this.enabledGSUB[e.tab[n]]:delete this.enabledGSUB[e.tab[n]]}},t.prototype.codeToGlyph=function(t){var e=nt.Typr.U.codeToGlyph(this,t);if(this.GSUB){var n=[e];for(var i in this.enabledGSUB){var r=this.GSUB.lookupList[i];nt.Typr.U._applySubs(n,0,r,this.GSUB.lookupList)}if(1===n.length)return n[0]}return e},t}();const at=Y({__proto__:null,Font:$.Font=rt,default:$},[$]),st="161",ot=1,lt=2,ct=3,ht=0,ut=1,dt=100,pt=0,ft=1,mt=2,gt=0,vt=1,_t=2,xt=3,St=4,yt=5,Mt=6,bt=301,Et=302,Tt=306,wt=1e3,At=1001,Ct=1002,Rt=1003,Pt=1005,Ut=1006,Lt=1007,Wt=1008,Nt=1009,It=1012,Ot=1013,Dt=1014,Ft=1015,kt=1016,zt=1020,Bt=1023,Gt=1026,Vt=1027,Ht=33776,Xt=33777,qt=33778,jt=33779,Jt=36492,Kt=3001,Qt="",Zt="srgb",Yt="srgb-linear",$t="display-p3",te="display-p3-linear",ee="linear",ne="srgb",ie="rec709",re="p3",ae=7680,se="300 es",oe=1035,le=2e3,ce=2001;class he{addEventListener(t,e){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[t]&&(n[t]=[]),-1===n[t].indexOf(e)&&n[t].push(e)}hasEventListener(t,e){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[t]&&-1!==n[t].indexOf(e)}removeEventListener(t,e){if(void 0===this._listeners)return;const n=this._listeners[t];if(void 0!==n){const t=n.indexOf(e);-1!==t&&n.splice(t,1)}}dispatchEvent(t){if(void 0===this._listeners)return;const e=this._listeners[t.type];if(void 0!==e){t.target=this;const n=e.slice(0);for(let e=0,i=n.length;e<i;e++)n[e].call(this,t);t.target=null}}}const ue=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],de=Math.PI/180,pe=180/Math.PI;function fe(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,n=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return(ue[255&t]+ue[t>>8&255]+ue[t>>16&255]+ue[t>>24&255]+"-"+ue[255&e]+ue[e>>8&255]+"-"+ue[e>>16&15|64]+ue[e>>24&255]+"-"+ue[63&n|128]+ue[n>>8&255]+"-"+ue[n>>16&255]+ue[n>>24&255]+ue[255&i]+ue[i>>8&255]+ue[i>>16&255]+ue[i>>24&255]).toLowerCase()}function me(t,e,n){return Math.max(e,Math.min(n,t))}function ge(t,e,n){return(1-n)*t+n*e}function ve(t){return 0==(t&t-1)&&0!==t}function _e(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))}function xe(t,e){switch(e.constructor){case Float32Array:return t;case Uint32Array:return t/4294967295;case Uint16Array:return t/65535;case Uint8Array:return t/255;case Int32Array:return Math.max(t/2147483647,-1);case Int16Array:return Math.max(t/32767,-1);case Int8Array:return Math.max(t/127,-1);default:throw new Error("Invalid component type.")}}function Se(t,e){switch(e.constructor){case Float32Array:return t;case Uint32Array:return Math.round(4294967295*t);case Uint16Array:return Math.round(65535*t);case Uint8Array:return Math.round(255*t);case Int32Array:return Math.round(2147483647*t);case Int16Array:return Math.round(32767*t);case Int8Array:return Math.round(127*t);default:throw new Error("Invalid component type.")}}class ye{constructor(t=0,e=0){ye.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(me(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),r=this.x-t.x,a=this.y-t.y;return this.x=r*n-a*i+t.x,this.y=r*i+a*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Me{constructor(t,e,n,i,r,a,s,o,l){Me.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],void 0!==t&&this.set(t,e,n,i,r,a,s,o,l)}set(t,e,n,i,r,a,s,o,l){const c=this.elements;return c[0]=t,c[1]=i,c[2]=s,c[3]=e,c[4]=r,c[5]=o,c[6]=n,c[7]=a,c[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,a=n[0],s=n[3],o=n[6],l=n[1],c=n[4],h=n[7],u=n[2],d=n[5],p=n[8],f=i[0],m=i[3],g=i[6],v=i[1],_=i[4],x=i[7],S=i[2],y=i[5],M=i[8];return r[0]=a*f+s*v+o*S,r[3]=a*m+s*_+o*y,r[6]=a*g+s*x+o*M,r[1]=l*f+c*v+h*S,r[4]=l*m+c*_+h*y,r[7]=l*g+c*x+h*M,r[2]=u*f+d*v+p*S,r[5]=u*m+d*_+p*y,r[8]=u*g+d*x+p*M,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],a=t[4],s=t[5],o=t[6],l=t[7],c=t[8];return e*a*c-e*s*l-n*r*c+n*s*o+i*r*l-i*a*o}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],a=t[4],s=t[5],o=t[6],l=t[7],c=t[8],h=c*a-s*l,u=s*o-c*r,d=l*r-a*o,p=e*h+n*u+i*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);const f=1/p;return t[0]=h*f,t[1]=(i*l-c*n)*f,t[2]=(s*n-i*a)*f,t[3]=u*f,t[4]=(c*e-i*o)*f,t[5]=(i*r-s*e)*f,t[6]=d*f,t[7]=(n*o-l*e)*f,t[8]=(a*e-n*r)*f,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,r,a,s){const o=Math.cos(r),l=Math.sin(r);return this.set(n*o,n*l,-n*(o*a+l*s)+a+t,-i*l,i*o,-i*(-l*a+o*s)+s+e,0,0,1),this}scale(t,e){return this.premultiply(be.makeScale(t,e)),this}rotate(t){return this.premultiply(be.makeRotation(-t)),this}translate(t,e){return this.premultiply(be.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,n,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<9;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}const be=new Me;function Ee(t){for(let e=t.length-1;e>=0;--e)if(t[e]>=65535)return!0;return!1}function Te(t){return document.createElementNS("http://www.w3.org/1999/xhtml",t)}function we(){const t=Te("canvas");return t.style.display="block",t}const Ae={};function Ce(t){t in Ae||(Ae[t]=!0)}const Re=(new Me).set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),Pe=(new Me).set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),Ue={[Yt]:{transfer:ee,primaries:ie,toReference:t=>t,fromReference:t=>t},[Zt]:{transfer:ne,primaries:ie,toReference:t=>t.convertSRGBToLinear(),fromReference:t=>t.convertLinearToSRGB()},[te]:{transfer:ee,primaries:re,toReference:t=>t.applyMatrix3(Pe),fromReference:t=>t.applyMatrix3(Re)},[$t]:{transfer:ne,primaries:re,toReference:t=>t.convertSRGBToLinear().applyMatrix3(Pe),fromReference:t=>t.applyMatrix3(Re).convertLinearToSRGB()}},Le=new Set([Yt,te]),We={enabled:!0,_workingColorSpace:Yt,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(t){if(!Le.has(t))throw new Error(`Unsupported working color space, "${t}".`);this._workingColorSpace=t},convert:function(t,e,n){if(!1===this.enabled||e===n||!e||!n)return t;const i=Ue[e].toReference;return(0,Ue[n].fromReference)(i(t))},fromWorkingColorSpace:function(t,e){return this.convert(t,this._workingColorSpace,e)},toWorkingColorSpace:function(t,e){return this.convert(t,e,this._workingColorSpace)},getPrimaries:function(t){return Ue[t].primaries},getTransfer:function(t){return t===Qt?ee:Ue[t].transfer}};function Ne(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function Ie(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}let Oe;class De{static getDataURL(t){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{void 0===Oe&&(Oe=Te("canvas")),Oe.width=t.width,Oe.height=t.height;const n=Oe.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=Oe}return e.width>2048||e.height>2048?e.toDataURL("image/jpeg",.6):e.toDataURL("image/png")}static sRGBToLinear(t){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const e=Te("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const i=n.getImageData(0,0,t.width,t.height),r=i.data;for(let t=0;t<r.length;t++)r[t]=255*Ne(r[t]/255);return n.putImageData(i,0,0),e}if(t.data){const e=t.data.slice(0);for(let t=0;t<e.length;t++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[t]=Math.floor(255*Ne(e[t]/255)):e[t]=Ne(e[t]);return{data:e,width:t.width,height:t.height}}return t}}let Fe=0;class ke{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:Fe++}),this.uuid=fe(),this.data=t,this.dataReady=!0,this.version=0}set needsUpdate(t){!0===t&&this.version++}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.images[this.uuid])return t.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(null!==i){let t;if(Array.isArray(i)){t=[];for(let e=0,n=i.length;e<n;e++)i[e].isDataTexture?t.push(ze(i[e].image)):t.push(ze(i[e]))}else t=ze(i);n.url=t}return e||(t.images[this.uuid]=n),n}}function ze(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap?De.getDataURL(t):t.data?{data:Array.from(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:{}}let Be=0;class Ge extends he{constructor(t=Ge.DEFAULT_IMAGE,e=Ge.DEFAULT_MAPPING,n=1001,i=1001,r=1006,a=1008,s=1023,o=1009,l=Ge.DEFAULT_ANISOTROPY,c=""){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Be++}),this.uuid=fe(),this.name="",this.source=new ke(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=a,this.anisotropy=l,this.format=s,this.internalFormat=null,this.type=o,this.offset=new ye(0,0),this.repeat=new ye(1,1),this.center=new ye(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Me,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,"string"==typeof c?this.colorSpace=c:(Ce("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=c===Kt?Zt:Qt),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(300!==this.mapping)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case wt:t.x=t.x-Math.floor(t.x);break;case At:t.x=t.x<0?0:1;break;case Ct:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case wt:t.y=t.y-Math.floor(t.y);break;case At:t.y=t.y<0?0:1;break;case Ct:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return Ce("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===Zt?Kt:3e3}set encoding(t){Ce("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=t===Kt?Zt:Qt}}Ge.DEFAULT_IMAGE=null,Ge.DEFAULT_MAPPING=300,Ge.DEFAULT_ANISOTROPY=1;class Ve{constructor(t=0,e=0,n=0,i=1){Ve.prototype.isVector4=!0,this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=this.w,a=t.elements;return this.x=a[0]*e+a[4]*n+a[8]*i+a[12]*r,this.y=a[1]*e+a[5]*n+a[9]*i+a[13]*r,this.z=a[2]*e+a[6]*n+a[10]*i+a[14]*r,this.w=a[3]*e+a[7]*n+a[11]*i+a[15]*r,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,r;const a=.01,s=.1,o=t.elements,l=o[0],c=o[4],h=o[8],u=o[1],d=o[5],p=o[9],f=o[2],m=o[6],g=o[10];if(Math.abs(c-u)<a&&Math.abs(h-f)<a&&Math.abs(p-m)<a){if(Math.abs(c+u)<s&&Math.abs(h+f)<s&&Math.abs(p+m)<s&&Math.abs(l+d+g-3)<s)return this.set(1,0,0,0),this;e=Math.PI;const t=(l+1)/2,o=(d+1)/2,v=(g+1)/2,_=(c+u)/4,x=(h+f)/4,S=(p+m)/4;return t>o&&t>v?t<a?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(t),i=_/n,r=x/n):o>v?o<a?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(o),n=_/i,r=S/i):v<a?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(v),n=x/r,i=S/r),this.set(n,i,r,e),this}let v=Math.sqrt((m-p)*(m-p)+(h-f)*(h-f)+(u-c)*(u-c));return Math.abs(v)<.001&&(v=1),this.x=(m-p)/v,this.y=(h-f)/v,this.z=(u-c)/v,this.w=Math.acos((l+d+g-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class He extends he{constructor(t=1,e=1,n={}){super(),this.isRenderTarget=!0,this.width=t,this.height=e,this.depth=1,this.scissor=new Ve(0,0,t,e),this.scissorTest=!1,this.viewport=new Ve(0,0,t,e);const i={width:t,height:e,depth:1};void 0!==n.encoding&&(Ce("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),n.colorSpace=n.encoding===Kt?Zt:Qt),n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:Ut,depthBuffer:!0,stencilBuffer:!1,depthTexture:null,samples:0},n),this.texture=new Ge(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps,this.texture.internalFormat=n.internalFormat,this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.depthTexture=n.depthTexture,this.samples=n.samples}setSize(t,e,n=1){this.width===t&&this.height===e&&this.depth===n||(this.width=t,this.height=e,this.depth=n,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return(new this.constructor).copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.texture.isRenderTargetTexture=!0;const e=Object.assign({},t.texture.image);return this.texture.source=new ke(e),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,null!==t.depthTexture&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Xe extends He{constructor(t=1,e=1,n={}){super(t,e,n),this.isWebGLRenderTarget=!0}}class qe extends Ge{constructor(t=null,e=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=Rt,this.minFilter=Rt,this.wrapR=At,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class je extends Ge{constructor(t=null,e=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=Rt,this.minFilter=Rt,this.wrapR=At,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Je{constructor(t=0,e=0,n=0,i=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=n,this._w=i}static slerpFlat(t,e,n,i,r,a,s){let o=n[i+0],l=n[i+1],c=n[i+2],h=n[i+3];const u=r[a+0],d=r[a+1],p=r[a+2],f=r[a+3];if(0===s)return t[e+0]=o,t[e+1]=l,t[e+2]=c,void(t[e+3]=h);if(1===s)return t[e+0]=u,t[e+1]=d,t[e+2]=p,void(t[e+3]=f);if(h!==f||o!==u||l!==d||c!==p){let t=1-s;const e=o*u+l*d+c*p+h*f,n=e>=0?1:-1,i=1-e*e;if(i>Number.EPSILON){const r=Math.sqrt(i),a=Math.atan2(r,e*n);t=Math.sin(t*a)/r,s=Math.sin(s*a)/r}const r=s*n;if(o=o*t+u*r,l=l*t+d*r,c=c*t+p*r,h=h*t+f*r,t===1-s){const t=1/Math.sqrt(o*o+l*l+c*c+h*h);o*=t,l*=t,c*=t,h*=t}}t[e]=o,t[e+1]=l,t[e+2]=c,t[e+3]=h}static multiplyQuaternionsFlat(t,e,n,i,r,a){const s=n[i],o=n[i+1],l=n[i+2],c=n[i+3],h=r[a],u=r[a+1],d=r[a+2],p=r[a+3];return t[e]=s*p+c*h+o*d-l*u,t[e+1]=o*p+c*u+l*h-s*d,t[e+2]=l*p+c*d+s*u-o*h,t[e+3]=c*p-s*h-o*u-l*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const n=t._x,i=t._y,r=t._z,a=t._order,s=Math.cos,o=Math.sin,l=s(n/2),c=s(i/2),h=s(r/2),u=o(n/2),d=o(i/2),p=o(r/2);switch(a){case"XYZ":this._x=u*c*h+l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h-u*d*p;break;case"YXZ":this._x=u*c*h+l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h+u*d*p;break;case"ZXY":this._x=u*c*h-l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h-u*d*p;break;case"ZYX":this._x=u*c*h-l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h+u*d*p;break;case"YZX":this._x=u*c*h+l*d*p,this._y=l*d*h+u*c*p,this._z=l*c*p-u*d*h,this._w=l*c*h-u*d*p;break;case"XZY":this._x=u*c*h-l*d*p,this._y=l*d*h-u*c*p,this._z=l*c*p+u*d*h,this._w=l*c*h+u*d*p}return!0===e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],r=e[8],a=e[1],s=e[5],o=e[9],l=e[2],c=e[6],h=e[10],u=n+s+h;if(u>0){const t=.5/Math.sqrt(u+1);this._w=.25/t,this._x=(c-o)*t,this._y=(r-l)*t,this._z=(a-i)*t}else if(n>s&&n>h){const t=2*Math.sqrt(1+n-s-h);this._w=(c-o)/t,this._x=.25*t,this._y=(i+a)/t,this._z=(r+l)/t}else if(s>h){const t=2*Math.sqrt(1+s-n-h);this._w=(r-l)/t,this._x=(i+a)/t,this._y=.25*t,this._z=(o+c)/t}else{const t=2*Math.sqrt(1+h-n-s);this._w=(a-i)/t,this._x=(r+l)/t,this._y=(o+c)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(me(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(0===n)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,r=t._z,a=t._w,s=e._x,o=e._y,l=e._z,c=e._w;return this._x=n*c+a*s+i*l-r*o,this._y=i*c+a*o+r*s-n*l,this._z=r*c+a*l+n*o-i*s,this._w=a*c-n*s-i*o-r*l,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const n=this._x,i=this._y,r=this._z,a=this._w;let s=a*t._w+n*t._x+i*t._y+r*t._z;if(s<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,s=-s):this.copy(t),s>=1)return this._w=a,this._x=n,this._y=i,this._z=r,this;const o=1-s*s;if(o<=Number.EPSILON){const t=1-e;return this._w=t*a+e*this._w,this._x=t*n+e*this._x,this._y=t*i+e*this._y,this._z=t*r+e*this._z,this.normalize(),this}const l=Math.sqrt(o),c=Math.atan2(l,s),h=Math.sin((1-e)*c)/l,u=Math.sin(e*c)/l;return this._w=a*h+this._w*u,this._x=n*h+this._x*u,this._y=i*h+this._y*u,this._z=r*h+this._z*u,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=Math.random(),e=Math.sqrt(1-t),n=Math.sqrt(t),i=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(e*Math.cos(i),n*Math.sin(r),n*Math.cos(r),e*Math.sin(i))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class Ke{constructor(t=0,e=0,n=0){Ke.prototype.isVector3=!0,this.x=t,this.y=e,this.z=n}set(t,e,n){return void 0===n&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(Ze.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(Ze.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6]*i,this.y=r[1]*e+r[4]*n+r[7]*i,this.z=r[2]*e+r[5]*n+r[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,r=t.elements,a=1/(r[3]*e+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*e+r[4]*n+r[8]*i+r[12])*a,this.y=(r[1]*e+r[5]*n+r[9]*i+r[13])*a,this.z=(r[2]*e+r[6]*n+r[10]*i+r[14])*a,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,r=t.x,a=t.y,s=t.z,o=t.w,l=2*(a*i-s*n),c=2*(s*e-r*i),h=2*(r*n-a*e);return this.x=e+o*l+a*h-s*c,this.y=n+o*c+s*l-r*h,this.z=i+o*h+r*c-a*l,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[4]*n+r[8]*i,this.y=r[1]*e+r[5]*n+r[9]*i,this.z=r[2]*e+r[6]*n+r[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,r=t.z,a=e.x,s=e.y,o=e.z;return this.x=i*o-r*s,this.y=r*a-n*o,this.z=n*s-i*a,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return Qe.copy(this).projectOnVector(t),this.sub(Qe)}reflect(t){return this.sub(Qe.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(me(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=2*(Math.random()-.5),n=Math.random()*Math.PI*2,i=Math.sqrt(1-t(e,2));return this.x=i*Math.cos(n),this.y=i*Math.sin(n),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Qe=new Ke,Ze=new Je;class Ye{constructor(t=new Ke(1/0,1/0,1/0),e=new Ke(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e+=3)this.expandByPoint(tn.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,n=t.count;e<n;e++)this.expandByPoint(tn.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=tn.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const n=t.geometry;if(void 0!==n){const i=n.getAttribute("position");if(!0===e&&void 0!==i&&!0!==t.isInstancedMesh)for(let e=0,n=i.count;e<n;e++)!0===t.isMesh?t.getVertexPosition(e,tn):tn.fromBufferAttribute(i,e),tn.applyMatrix4(t.matrixWorld),this.expandByPoint(tn);else void 0!==t.boundingBox?(null===t.boundingBox&&t.computeBoundingBox(),en.copy(t.boundingBox)):(null===n.boundingBox&&n.computeBoundingBox(),en.copy(n.boundingBox)),en.applyMatrix4(t.matrixWorld),this.union(en)}const i=t.children;for(let r=0,a=i.length;r<a;r++)this.expandByObject(i[r],e);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,tn),tn.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(cn),hn.subVectors(this.max,cn),nn.subVectors(t.a,cn),rn.subVectors(t.b,cn),an.subVectors(t.c,cn),sn.subVectors(rn,nn),on.subVectors(an,rn),ln.subVectors(nn,an);let e=[0,-sn.z,sn.y,0,-on.z,on.y,0,-ln.z,ln.y,sn.z,0,-sn.x,on.z,0,-on.x,ln.z,0,-ln.x,-sn.y,sn.x,0,-on.y,on.x,0,-ln.y,ln.x,0];return!!pn(e,nn,rn,an,hn)&&(e=[1,0,0,0,1,0,0,0,1],!!pn(e,nn,rn,an,hn)&&(un.crossVectors(sn,on),e=[un.x,un.y,un.z],pn(e,nn,rn,an,hn)))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,tn).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=.5*this.getSize(tn).length()),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||($e[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),$e[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),$e[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),$e[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),$e[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),$e[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),$e[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),$e[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints($e)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const $e=[new Ke,new Ke,new Ke,new Ke,new Ke,new Ke,new Ke,new Ke],tn=new Ke,en=new Ye,nn=new Ke,rn=new Ke,an=new Ke,sn=new Ke,on=new Ke,ln=new Ke,cn=new Ke,hn=new Ke,un=new Ke,dn=new Ke;function pn(t,e,n,i,r){for(let a=0,s=t.length-3;a<=s;a+=3){dn.fromArray(t,a);const s=r.x*Math.abs(dn.x)+r.y*Math.abs(dn.y)+r.z*Math.abs(dn.z),o=e.dot(dn),l=n.dot(dn),c=i.dot(dn);if(Math.max(-Math.max(o,l,c),Math.min(o,l,c))>s)return!1}return!0}const fn=new Ye,mn=new Ke,gn=new Ke;class vn{constructor(t=new Ke,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;void 0!==e?n.copy(e):fn.setFromPoints(t).getCenter(n);let i=0;for(let r=0,a=t.length;r<a;r++)i=Math.max(i,n.distanceToSquared(t[r]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;mn.subVectors(t,this.center);const e=mn.lengthSq();if(e>this.radius*this.radius){const t=Math.sqrt(e),n=.5*(t-this.radius);this.center.addScaledVector(mn,n/t),this.radius+=n}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(!0===this.center.equals(t.center)?this.radius=Math.max(this.radius,t.radius):(gn.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(mn.copy(t.center).add(gn)),this.expandByPoint(mn.copy(t.center).sub(gn))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const _n=new Ke,xn=new Ke,Sn=new Ke,yn=new Ke,Mn=new Ke,bn=new Ke,En=new Ke;class Tn{constructor(t=new Ke,e=new Ke(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,_n)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=_n.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(_n.copy(this.origin).addScaledVector(this.direction,e),_n.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){xn.copy(t).add(e).multiplyScalar(.5),Sn.copy(e).sub(t).normalize(),yn.copy(this.origin).sub(xn);const r=.5*t.distanceTo(e),a=-this.direction.dot(Sn),s=yn.dot(this.direction),o=-yn.dot(Sn),l=yn.lengthSq(),c=Math.abs(1-a*a);let h,u,d,p;if(c>0)if(h=a*o-s,u=a*s-o,p=r*c,h>=0)if(u>=-p)if(u<=p){const t=1/c;h*=t,u*=t,d=h*(h+a*u+2*s)+u*(a*h+u+2*o)+l}else u=r,h=Math.max(0,-(a*u+s)),d=-h*h+u*(u+2*o)+l;else u=-r,h=Math.max(0,-(a*u+s)),d=-h*h+u*(u+2*o)+l;else u<=-p?(h=Math.max(0,-(-a*r+s)),u=h>0?-r:Math.min(Math.max(-r,-o),r),d=-h*h+u*(u+2*o)+l):u<=p?(h=0,u=Math.min(Math.max(-r,-o),r),d=u*(u+2*o)+l):(h=Math.max(0,-(a*r+s)),u=h>0?r:Math.min(Math.max(-r,-o),r),d=-h*h+u*(u+2*o)+l);else u=a>0?-r:r,h=Math.max(0,-(a*u+s)),d=-h*h+u*(u+2*o)+l;return n&&n.copy(this.origin).addScaledVector(this.direction,h),i&&i.copy(xn).addScaledVector(Sn,u),d}intersectSphere(t,e){_n.subVectors(t.center,this.origin);const n=_n.dot(this.direction),i=_n.dot(_n)-n*n,r=t.radius*t.radius;if(i>r)return null;const a=Math.sqrt(r-i),s=n-a,o=n+a;return o<0?null:s<0?this.at(o,e):this.at(s,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return null===n?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);if(0===e)return!0;return t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,r,a,s,o;const l=1/this.direction.x,c=1/this.direction.y,h=1/this.direction.z,u=this.origin;return l>=0?(n=(t.min.x-u.x)*l,i=(t.max.x-u.x)*l):(n=(t.max.x-u.x)*l,i=(t.min.x-u.x)*l),c>=0?(r=(t.min.y-u.y)*c,a=(t.max.y-u.y)*c):(r=(t.max.y-u.y)*c,a=(t.min.y-u.y)*c),n>a||r>i?null:((r>n||isNaN(n))&&(n=r),(a<i||isNaN(i))&&(i=a),h>=0?(s=(t.min.z-u.z)*h,o=(t.max.z-u.z)*h):(s=(t.max.z-u.z)*h,o=(t.min.z-u.z)*h),n>o||s>i?null:((s>n||n!=n)&&(n=s),(o<i||i!=i)&&(i=o),i<0?null:this.at(n>=0?n:i,e)))}intersectsBox(t){return null!==this.intersectBox(t,_n)}intersectTriangle(t,e,n,i,r){Mn.subVectors(e,t),bn.subVectors(n,t),En.crossVectors(Mn,bn);let a,s=this.direction.dot(En);if(s>0){if(i)return null;a=1}else{if(!(s<0))return null;a=-1,s=-s}yn.subVectors(this.origin,t);const o=a*this.direction.dot(bn.crossVectors(yn,bn));if(o<0)return null;const l=a*this.direction.dot(Mn.cross(yn));if(l<0)return null;if(o+l>s)return null;const c=-a*yn.dot(En);return c<0?null:this.at(c/s,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class wn{constructor(t,e,n,i,r,a,s,o,l,c,h,u,d,p,f,m){wn.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],void 0!==t&&this.set(t,e,n,i,r,a,s,o,l,c,h,u,d,p,f,m)}set(t,e,n,i,r,a,s,o,l,c,h,u,d,p,f,m){const g=this.elements;return g[0]=t,g[4]=e,g[8]=n,g[12]=i,g[1]=r,g[5]=a,g[9]=s,g[13]=o,g[2]=l,g[6]=c,g[10]=h,g[14]=u,g[3]=d,g[7]=p,g[11]=f,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new wn).fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/An.setFromMatrixColumn(t,0).length(),r=1/An.setFromMatrixColumn(t,1).length(),a=1/An.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*r,e[5]=n[5]*r,e[6]=n[6]*r,e[7]=0,e[8]=n[8]*a,e[9]=n[9]*a,e[10]=n[10]*a,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,n=t.x,i=t.y,r=t.z,a=Math.cos(n),s=Math.sin(n),o=Math.cos(i),l=Math.sin(i),c=Math.cos(r),h=Math.sin(r);if("XYZ"===t.order){const t=a*c,n=a*h,i=s*c,r=s*h;e[0]=o*c,e[4]=-o*h,e[8]=l,e[1]=n+i*l,e[5]=t-r*l,e[9]=-s*o,e[2]=r-t*l,e[6]=i+n*l,e[10]=a*o}else if("YXZ"===t.order){const t=o*c,n=o*h,i=l*c,r=l*h;e[0]=t+r*s,e[4]=i*s-n,e[8]=a*l,e[1]=a*h,e[5]=a*c,e[9]=-s,e[2]=n*s-i,e[6]=r+t*s,e[10]=a*o}else if("ZXY"===t.order){const t=o*c,n=o*h,i=l*c,r=l*h;e[0]=t-r*s,e[4]=-a*h,e[8]=i+n*s,e[1]=n+i*s,e[5]=a*c,e[9]=r-t*s,e[2]=-a*l,e[6]=s,e[10]=a*o}else if("ZYX"===t.order){const t=a*c,n=a*h,i=s*c,r=s*h;e[0]=o*c,e[4]=i*l-n,e[8]=t*l+r,e[1]=o*h,e[5]=r*l+t,e[9]=n*l-i,e[2]=-l,e[6]=s*o,e[10]=a*o}else if("YZX"===t.order){const t=a*o,n=a*l,i=s*o,r=s*l;e[0]=o*c,e[4]=r-t*h,e[8]=i*h+n,e[1]=h,e[5]=a*c,e[9]=-s*c,e[2]=-l*c,e[6]=n*h+i,e[10]=t-r*h}else if("XZY"===t.order){const t=a*o,n=a*l,i=s*o,r=s*l;e[0]=o*c,e[4]=-h,e[8]=l*c,e[1]=t*h+r,e[5]=a*c,e[9]=n*h-i,e[2]=i*h-n,e[6]=s*c,e[10]=r*h+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(Rn,t,Pn)}lookAt(t,e,n){const i=this.elements;return Wn.subVectors(t,e),0===Wn.lengthSq()&&(Wn.z=1),Wn.normalize(),Un.crossVectors(n,Wn),0===Un.lengthSq()&&(1===Math.abs(n.z)?Wn.x+=1e-4:Wn.z+=1e-4,Wn.normalize(),Un.crossVectors(n,Wn)),Un.normalize(),Ln.crossVectors(Wn,Un),i[0]=Un.x,i[4]=Ln.x,i[8]=Wn.x,i[1]=Un.y,i[5]=Ln.y,i[9]=Wn.y,i[2]=Un.z,i[6]=Ln.z,i[10]=Wn.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,r=this.elements,a=n[0],s=n[4],o=n[8],l=n[12],c=n[1],h=n[5],u=n[9],d=n[13],p=n[2],f=n[6],m=n[10],g=n[14],v=n[3],_=n[7],x=n[11],S=n[15],y=i[0],M=i[4],b=i[8],E=i[12],T=i[1],w=i[5],A=i[9],C=i[13],R=i[2],P=i[6],U=i[10],L=i[14],W=i[3],N=i[7],I=i[11],O=i[15];return r[0]=a*y+s*T+o*R+l*W,r[4]=a*M+s*w+o*P+l*N,r[8]=a*b+s*A+o*U+l*I,r[12]=a*E+s*C+o*L+l*O,r[1]=c*y+h*T+u*R+d*W,r[5]=c*M+h*w+u*P+d*N,r[9]=c*b+h*A+u*U+d*I,r[13]=c*E+h*C+u*L+d*O,r[2]=p*y+f*T+m*R+g*W,r[6]=p*M+f*w+m*P+g*N,r[10]=p*b+f*A+m*U+g*I,r[14]=p*E+f*C+m*L+g*O,r[3]=v*y+_*T+x*R+S*W,r[7]=v*M+_*w+x*P+S*N,r[11]=v*b+_*A+x*U+S*I,r[15]=v*E+_*C+x*L+S*O,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],r=t[12],a=t[1],s=t[5],o=t[9],l=t[13],c=t[2],h=t[6],u=t[10],d=t[14];return t[3]*(+r*o*h-i*l*h-r*s*u+n*l*u+i*s*d-n*o*d)+t[7]*(+e*o*d-e*l*u+r*a*u-i*a*d+i*l*c-r*o*c)+t[11]*(+e*l*h-e*s*d-r*a*h+n*a*d+r*s*c-n*l*c)+t[15]*(-i*s*c-e*o*h+e*s*u+i*a*h-n*a*u+n*o*c)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],a=t[4],s=t[5],o=t[6],l=t[7],c=t[8],h=t[9],u=t[10],d=t[11],p=t[12],f=t[13],m=t[14],g=t[15],v=h*m*l-f*u*l+f*o*d-s*m*d-h*o*g+s*u*g,_=p*u*l-c*m*l-p*o*d+a*m*d+c*o*g-a*u*g,x=c*f*l-p*h*l+p*s*d-a*f*d-c*s*g+a*h*g,S=p*h*o-c*f*o-p*s*u+a*f*u+c*s*m-a*h*m,y=e*v+n*_+i*x+r*S;if(0===y)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const M=1/y;return t[0]=v*M,t[1]=(f*u*r-h*m*r-f*i*d+n*m*d+h*i*g-n*u*g)*M,t[2]=(s*m*r-f*o*r+f*i*l-n*m*l-s*i*g+n*o*g)*M,t[3]=(h*o*r-s*u*r-h*i*l+n*u*l+s*i*d-n*o*d)*M,t[4]=_*M,t[5]=(c*m*r-p*u*r+p*i*d-e*m*d-c*i*g+e*u*g)*M,t[6]=(p*o*r-a*m*r-p*i*l+e*m*l+a*i*g-e*o*g)*M,t[7]=(a*u*r-c*o*r+c*i*l-e*u*l-a*i*d+e*o*d)*M,t[8]=x*M,t[9]=(p*h*r-c*f*r-p*n*d+e*f*d+c*n*g-e*h*g)*M,t[10]=(a*f*r-p*s*r+p*n*l-e*f*l-a*n*g+e*s*g)*M,t[11]=(c*s*r-a*h*r-c*n*l+e*h*l+a*n*d-e*s*d)*M,t[12]=S*M,t[13]=(c*f*i-p*h*i+p*n*u-e*f*u-c*n*m+e*h*m)*M,t[14]=(p*s*i-a*f*i-p*n*o+e*f*o+a*n*m-e*s*m)*M,t[15]=(a*h*i-c*s*i+c*n*o-e*h*o-a*n*u+e*s*u)*M,this}scale(t){const e=this.elements,n=t.x,i=t.y,r=t.z;return e[0]*=n,e[4]*=i,e[8]*=r,e[1]*=n,e[5]*=i,e[9]*=r,e[2]*=n,e[6]*=i,e[10]*=r,e[3]*=n,e[7]*=i,e[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),r=1-n,a=t.x,s=t.y,o=t.z,l=r*a,c=r*s;return this.set(l*a+n,l*s-i*o,l*o+i*s,0,l*s+i*o,c*s+n,c*o-i*a,0,l*o-i*s,c*o+i*a,r*o*o+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,i,r,a){return this.set(1,n,r,0,t,1,a,0,e,i,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,r=e._x,a=e._y,s=e._z,o=e._w,l=r+r,c=a+a,h=s+s,u=r*l,d=r*c,p=r*h,f=a*c,m=a*h,g=s*h,v=o*l,_=o*c,x=o*h,S=n.x,y=n.y,M=n.z;return i[0]=(1-(f+g))*S,i[1]=(d+x)*S,i[2]=(p-_)*S,i[3]=0,i[4]=(d-x)*y,i[5]=(1-(u+g))*y,i[6]=(m+v)*y,i[7]=0,i[8]=(p+_)*M,i[9]=(m-v)*M,i[10]=(1-(u+f))*M,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let r=An.set(i[0],i[1],i[2]).length();const a=An.set(i[4],i[5],i[6]).length(),s=An.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),t.x=i[12],t.y=i[13],t.z=i[14],Cn.copy(this);const o=1/r,l=1/a,c=1/s;return Cn.elements[0]*=o,Cn.elements[1]*=o,Cn.elements[2]*=o,Cn.elements[4]*=l,Cn.elements[5]*=l,Cn.elements[6]*=l,Cn.elements[8]*=c,Cn.elements[9]*=c,Cn.elements[10]*=c,e.setFromRotationMatrix(Cn),n.x=r,n.y=a,n.z=s,this}makePerspective(t,e,n,i,r,a,s=2e3){const o=this.elements,l=2*r/(e-t),c=2*r/(n-i),h=(e+t)/(e-t),u=(n+i)/(n-i);let d,p;if(s===le)d=-(a+r)/(a-r),p=-2*a*r/(a-r);else{if(s!==ce)throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+s);d=-a/(a-r),p=-a*r/(a-r)}return o[0]=l,o[4]=0,o[8]=h,o[12]=0,o[1]=0,o[5]=c,o[9]=u,o[13]=0,o[2]=0,o[6]=0,o[10]=d,o[14]=p,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(t,e,n,i,r,a,s=2e3){const o=this.elements,l=1/(e-t),c=1/(n-i),h=1/(a-r),u=(e+t)*l,d=(n+i)*c;let p,f;if(s===le)p=(a+r)*h,f=-2*h;else{if(s!==ce)throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+s);p=r*h,f=-1*h}return o[0]=2*l,o[4]=0,o[8]=0,o[12]=-u,o[1]=0,o[5]=2*c,o[9]=0,o[13]=-d,o[2]=0,o[6]=0,o[10]=f,o[14]=-p,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<16;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const An=new Ke,Cn=new wn,Rn=new Ke(0,0,0),Pn=new Ke(1,1,1),Un=new Ke,Ln=new Ke,Wn=new Ke,Nn=new wn,In=new Je;class On{constructor(t=0,e=0,n=0,i=On.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i=this._order){return this._x=t,this._y=e,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const i=t.elements,r=i[0],a=i[4],s=i[8],o=i[1],l=i[5],c=i[9],h=i[2],u=i[6],d=i[10];switch(e){case"XYZ":this._y=Math.asin(me(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(-c,d),this._z=Math.atan2(-a,r)):(this._x=Math.atan2(u,l),this._z=0);break;case"YXZ":this._x=Math.asin(-me(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(s,d),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-h,r),this._z=0);break;case"ZXY":this._x=Math.asin(me(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-h,d),this._z=Math.atan2(-a,l)):(this._y=0,this._z=Math.atan2(o,r));break;case"ZYX":this._y=Math.asin(-me(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(u,d),this._z=Math.atan2(o,r)):(this._x=0,this._z=Math.atan2(-a,l));break;case"YZX":this._z=Math.asin(me(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-c,l),this._y=Math.atan2(-h,r)):(this._x=0,this._y=Math.atan2(s,d));break;case"XZY":this._z=Math.asin(-me(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(u,l),this._y=Math.atan2(s,r)):(this._x=Math.atan2(-c,d),this._y=0)}return this._order=e,!0===n&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return Nn.makeRotationFromQuaternion(t),this.setFromRotationMatrix(Nn,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return In.setFromEuler(this),this.setFromQuaternion(In,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}On.DEFAULT_ORDER="XYZ";class Dn{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return 0!=(this.mask&t.mask)}isEnabled(t){return 0!=(this.mask&(1<<t|0))}}let Fn=0;const kn=new Ke,zn=new Je,Bn=new wn,Gn=new Ke,Vn=new Ke,Hn=new Ke,Xn=new Je,qn=new Ke(1,0,0),jn=new Ke(0,1,0),Jn=new Ke(0,0,1),Kn={type:"added"},Qn={type:"removed"};class Zn extends he{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Fn++}),this.uuid=fe(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Zn.DEFAULT_UP.clone();const t=new Ke,e=new On,n=new Je,i=new Ke(1,1,1);e._onChange((function(){n.setFromEuler(e,!1)})),n._onChange((function(){e.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new wn},normalMatrix:{value:new Me}}),this.matrix=new wn,this.matrixWorld=new wn,this.matrixAutoUpdate=Zn.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Zn.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Dn,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return zn.setFromAxisAngle(t,e),this.quaternion.multiply(zn),this}rotateOnWorldAxis(t,e){return zn.setFromAxisAngle(t,e),this.quaternion.premultiply(zn),this}rotateX(t){return this.rotateOnAxis(qn,t)}rotateY(t){return this.rotateOnAxis(jn,t)}rotateZ(t){return this.rotateOnAxis(Jn,t)}translateOnAxis(t,e){return kn.copy(t).applyQuaternion(this.quaternion),this.position.add(kn.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(qn,t)}translateY(t){return this.translateOnAxis(jn,t)}translateZ(t){return this.translateOnAxis(Jn,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(Bn.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?Gn.copy(t):Gn.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Vn.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Bn.lookAt(Vn,Gn,this.up):Bn.lookAt(Gn,Vn,this.up),this.quaternion.setFromRotationMatrix(Bn),i&&(Bn.extractRotation(i.matrixWorld),zn.setFromRotationMatrix(Bn),this.quaternion.premultiply(zn.invert()))}add(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this||t&&t.isObject3D&&(null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(Kn)),this}remove(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(t);return-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(Qn)),this}removeFromParent(){const t=this.parent;return null!==t&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),Bn.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),Bn.multiply(t.parent.matrixWorld)),t.applyMatrix4(Bn),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const i=this.children[n].getObjectByProperty(t,e);if(void 0!==i)return i}}getObjectsByProperty(t,e,n=[]){this[t]===e&&n.push(this);const i=this.children;for(let r=0,a=i.length;r<a;r++)i[r].getObjectsByProperty(t,e,n);return n}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Vn,t,Hn),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Vn,Xn,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)}traverseVisible(t){if(!1===this.visible)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++){const i=e[n];!0!==i.matrixWorldAutoUpdate&&!0!==t||i.updateMatrixWorld(t)}}updateWorldMatrix(t,e){const n=this.parent;if(!0===t&&null!==n&&!0===n.matrixWorldAutoUpdate&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e){const t=this.children;for(let e=0,n=t.length;e<n;e++){const n=t[e];!0===n.matrixWorldAutoUpdate&&n.updateWorldMatrix(!1,!0)}}}toJSON(t){const e=void 0===t||"string"==typeof t,n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};function r(e,n){return void 0===e[n.uuid]&&(e[n.uuid]=n.toJSON(t)),n.uuid}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),!0===this.castShadow&&(i.castShadow=!0),!0===this.receiveShadow&&(i.receiveShadow=!0),!1===this.visible&&(i.visible=!1),!1===this.frustumCulled&&(i.frustumCulled=!1),0!==this.renderOrder&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),!1===this.matrixAutoUpdate&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.visibility=this._visibility,i.active=this._active,i.bounds=this._bounds.map((t=>({boxInitialized:t.boxInitialized,boxMin:t.box.min.toArray(),boxMax:t.box.max.toArray(),sphereInitialized:t.sphereInitialized,sphereRadius:t.sphere.radius,sphereCenter:t.sphere.center.toArray()}))),i.maxGeometryCount=this._maxGeometryCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.geometryCount=this._geometryCount,i.matricesTexture=this._matricesTexture.toJSON(t),null!==this.boundingSphere&&(i.boundingSphere={center:i.boundingSphere.center.toArray(),radius:i.boundingSphere.radius}),null!==this.boundingBox&&(i.boundingBox={min:i.boundingBox.min.toArray(),max:i.boundingBox.max.toArray()})),this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(t.geometries,this.geometry);const e=this.geometry.parameters;if(void 0!==e&&void 0!==e.shapes){const n=e.shapes;if(Array.isArray(n))for(let e=0,i=n.length;e<i;e++){const i=n[e];r(t.shapes,i)}else r(t.shapes,n)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(r(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const e=[];for(let n=0,i=this.material.length;n<i;n++)e.push(r(t.materials,this.material[n]));i.material=e}else i.material=r(t.materials,this.material);if(this.children.length>0){i.children=[];for(let e=0;e<this.children.length;e++)i.children.push(this.children[e].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let e=0;e<this.animations.length;e++){const n=this.animations[e];i.animations.push(r(t.animations,n))}}if(e){const e=a(t.geometries),i=a(t.materials),r=a(t.textures),s=a(t.images),o=a(t.shapes),l=a(t.skeletons),c=a(t.animations),h=a(t.nodes);e.length>0&&(n.geometries=e),i.length>0&&(n.materials=i),r.length>0&&(n.textures=r),s.length>0&&(n.images=s),o.length>0&&(n.shapes=o),l.length>0&&(n.skeletons=l),c.length>0&&(n.animations=c),h.length>0&&(n.nodes=h)}return n.object=i,n;function a(t){const e=[];for(const n in t){const i=t[n];delete i.metadata,e.push(i)}return e}}clone(t){return(new this.constructor).copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let n=0;n<t.children.length;n++){const e=t.children[n];this.add(e.clone())}return this}}Zn.DEFAULT_UP=new Ke(0,1,0),Zn.DEFAULT_MATRIX_AUTO_UPDATE=!0,Zn.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Yn=new Ke,$n=new Ke,ti=new Ke,ei=new Ke,ni=new Ke,ii=new Ke,ri=new Ke,ai=new Ke,si=new Ke,oi=new Ke;class li{constructor(t=new Ke,e=new Ke,n=new Ke){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,i){i.subVectors(n,e),Yn.subVectors(t,e),i.cross(Yn);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(t,e,n,i,r){Yn.subVectors(i,e),$n.subVectors(n,e),ti.subVectors(t,e);const a=Yn.dot(Yn),s=Yn.dot($n),o=Yn.dot(ti),l=$n.dot($n),c=$n.dot(ti),h=a*l-s*s;if(0===h)return r.set(0,0,0),null;const u=1/h,d=(l*o-s*c)*u,p=(a*c-s*o)*u;return r.set(1-d-p,p,d)}static containsPoint(t,e,n,i){return null!==this.getBarycoord(t,e,n,i,ei)&&(ei.x>=0&&ei.y>=0&&ei.x+ei.y<=1)}static getInterpolation(t,e,n,i,r,a,s,o){return null===this.getBarycoord(t,e,n,i,ei)?(o.x=0,o.y=0,"z"in o&&(o.z=0),"w"in o&&(o.w=0),null):(o.setScalar(0),o.addScaledVector(r,ei.x),o.addScaledVector(a,ei.y),o.addScaledVector(s,ei.z),o)}static isFrontFacing(t,e,n,i){return Yn.subVectors(n,e),$n.subVectors(t,e),Yn.cross($n).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}setFromAttributeAndIndices(t,e,n,i){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,i),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Yn.subVectors(this.c,this.b),$n.subVectors(this.a,this.b),.5*Yn.cross($n).length()}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return li.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return li.getBarycoord(t,this.a,this.b,this.c,e)}getInterpolation(t,e,n,i,r){return li.getInterpolation(t,this.a,this.b,this.c,e,n,i,r)}containsPoint(t){return li.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return li.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,i=this.b,r=this.c;let a,s;ni.subVectors(i,n),ii.subVectors(r,n),ai.subVectors(t,n);const o=ni.dot(ai),l=ii.dot(ai);if(o<=0&&l<=0)return e.copy(n);si.subVectors(t,i);const c=ni.dot(si),h=ii.dot(si);if(c>=0&&h<=c)return e.copy(i);const u=o*h-c*l;if(u<=0&&o>=0&&c<=0)return a=o/(o-c),e.copy(n).addScaledVector(ni,a);oi.subVectors(t,r);const d=ni.dot(oi),p=ii.dot(oi);if(p>=0&&d<=p)return e.copy(r);const f=d*l-o*p;if(f<=0&&l>=0&&p<=0)return s=l/(l-p),e.copy(n).addScaledVector(ii,s);const m=c*p-d*h;if(m<=0&&h-c>=0&&d-p>=0)return ri.subVectors(r,i),s=(h-c)/(h-c+(d-p)),e.copy(i).addScaledVector(ri,s);const g=1/(m+f+u);return a=f*g,s=u*g,e.copy(n).addScaledVector(ni,a).addScaledVector(ii,s)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const ci={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},hi={h:0,s:0,l:0},ui={h:0,s:0,l:0};function di(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+6*(e-t)*(2/3-n):t}class pi{constructor(t,e,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,n)}set(t,e,n){if(void 0===e&&void 0===n){const e=t;e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e)}else this.setRGB(t,e,n);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=Zt){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,We.toWorkingColorSpace(this,e),this}setRGB(t,e,n,i=We.workingColorSpace){return this.r=t,this.g=e,this.b=n,We.toWorkingColorSpace(this,i),this}setHSL(t,e,n,i=We.workingColorSpace){var r;if(t=(t%(r=1)+r)%r,e=me(e,0,1),n=me(n,0,1),0===e)this.r=this.g=this.b=n;else{const i=n<=.5?n*(1+e):n+e-n*e,r=2*n-i;this.r=di(r,i,t+1/3),this.g=di(r,i,t),this.b=di(r,i,t-1/3)}return We.toWorkingColorSpace(this,i),this}setStyle(t,e=Zt){function n(t){void 0!==t&&parseFloat(t)}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(t)){let t;const r=i[1],a=i[2];switch(r){case"rgb":case"rgba":if(t=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(t[4]),this.setRGB(Math.min(255,parseInt(t[1],10))/255,Math.min(255,parseInt(t[2],10))/255,Math.min(255,parseInt(t[3],10))/255,e);if(t=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(t[4]),this.setRGB(Math.min(100,parseInt(t[1],10))/100,Math.min(100,parseInt(t[2],10))/100,Math.min(100,parseInt(t[3],10))/100,e);break;case"hsl":case"hsla":if(t=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(t[4]),this.setHSL(parseFloat(t[1])/360,parseFloat(t[2])/100,parseFloat(t[3])/100,e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const t=i[1],n=t.length;if(3===n)return this.setRGB(parseInt(t.charAt(0),16)/15,parseInt(t.charAt(1),16)/15,parseInt(t.charAt(2),16)/15,e);if(6===n)return this.setHex(parseInt(t,16),e)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=Zt){const n=ci[t.toLowerCase()];return void 0!==n&&this.setHex(n,e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=Ne(t.r),this.g=Ne(t.g),this.b=Ne(t.b),this}copyLinearToSRGB(t){return this.r=Ie(t.r),this.g=Ie(t.g),this.b=Ie(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=Zt){return We.fromWorkingColorSpace(fi.copy(this),t),65536*Math.round(me(255*fi.r,0,255))+256*Math.round(me(255*fi.g,0,255))+Math.round(me(255*fi.b,0,255))}getHexString(t=Zt){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=We.workingColorSpace){We.fromWorkingColorSpace(fi.copy(this),e);const n=fi.r,i=fi.g,r=fi.b,a=Math.max(n,i,r),s=Math.min(n,i,r);let o,l;const c=(s+a)/2;if(s===a)o=0,l=0;else{const t=a-s;switch(l=c<=.5?t/(a+s):t/(2-a-s),a){case n:o=(i-r)/t+(i<r?6:0);break;case i:o=(r-n)/t+2;break;case r:o=(n-i)/t+4}o/=6}return t.h=o,t.s=l,t.l=c,t}getRGB(t,e=We.workingColorSpace){return We.fromWorkingColorSpace(fi.copy(this),e),t.r=fi.r,t.g=fi.g,t.b=fi.b,t}getStyle(t=Zt){We.fromWorkingColorSpace(fi.copy(this),t);const e=fi.r,n=fi.g,i=fi.b;return t!==Zt?`color(${t} ${e.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(255*e)},${Math.round(255*n)},${Math.round(255*i)})`}offsetHSL(t,e,n){return this.getHSL(hi),this.setHSL(hi.h+t,hi.s+e,hi.l+n)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(hi),t.getHSL(ui);const n=ge(hi.h,ui.h,e),i=ge(hi.s,ui.s,e),r=ge(hi.l,ui.l,e);return this.setHSL(n,i,r),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,n=this.g,i=this.b,r=t.elements;return this.r=r[0]*e+r[3]*n+r[6]*i,this.g=r[1]*e+r[4]*n+r[7]*i,this.b=r[2]*e+r[5]*n+r[8]*i,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const fi=new pi;pi.NAMES=ci;let mi=0;class gi extends he{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:mi++}),this.uuid=fe(),this.name="",this.type="Material",this.blending=1,this.side=ht,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=dt,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new pi(0,0,0),this.blendAlpha=0,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=ae,this.stencilZFail=ae,this.stencilZPass=ae,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(void 0!==t)for(const e in t){const n=t[e];if(void 0===n)continue;const i=this[e];void 0!==i&&(i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n)}}toJSON(t){const e=void 0===t||"string"==typeof t;e&&(t={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};function i(t){const e=[];for(const n in t){const i=t[n];delete i.metadata,e.push(i)}return e}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),void 0!==this.sheen&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.iridescence&&(n.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(n.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),void 0!==this.anisotropy&&(n.anisotropy=this.anisotropy),void 0!==this.anisotropyRotation&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.transmission&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),void 0!==this.thickness&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),void 0!==this.attenuationDistance&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(n.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(n.blending=this.blending),this.side!==ht&&(n.side=this.side),!0===this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=!0),204!==this.blendSrc&&(n.blendSrc=this.blendSrc),205!==this.blendDst&&(n.blendDst=this.blendDst),this.blendEquation!==dt&&(n.blendEquation=this.blendEquation),null!==this.blendSrcAlpha&&(n.blendSrcAlpha=this.blendSrcAlpha),null!==this.blendDstAlpha&&(n.blendDstAlpha=this.blendDstAlpha),null!==this.blendEquationAlpha&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),0!==this.blendAlpha&&(n.blendAlpha=this.blendAlpha),3!==this.depthFunc&&(n.depthFunc=this.depthFunc),!1===this.depthTest&&(n.depthTest=this.depthTest),!1===this.depthWrite&&(n.depthWrite=this.depthWrite),!1===this.colorWrite&&(n.colorWrite=this.colorWrite),255!==this.stencilWriteMask&&(n.stencilWriteMask=this.stencilWriteMask),519!==this.stencilFunc&&(n.stencilFunc=this.stencilFunc),0!==this.stencilRef&&(n.stencilRef=this.stencilRef),255!==this.stencilFuncMask&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==ae&&(n.stencilFail=this.stencilFail),this.stencilZFail!==ae&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==ae&&(n.stencilZPass=this.stencilZPass),!0===this.stencilWrite&&(n.stencilWrite=this.stencilWrite),void 0!==this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaHash&&(n.alphaHash=!0),!0===this.alphaToCoverage&&(n.alphaToCoverage=!0),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=!0),!0===this.forceSinglePass&&(n.forceSinglePass=!0),!0===this.wireframe&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(n.flatShading=!0),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),!1===this.fog&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData),e){const e=i(t.textures),r=i(t.images);e.length>0&&(n.textures=e),r.length>0&&(n.images=r)}return n}clone(){return(new this.constructor).copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(null!==e){const t=e.length;n=new Array(t);for(let i=0;i!==t;++i)n[i]=e[i].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){!0===t&&this.version++}}class vi extends gi{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new pi(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=pt,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const _i=new Ke,xi=new ye;class Si{constructor(t,e,n=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=n,this.usage=35044,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.gpuType=Ft,this.version=0}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}get updateRange(){return Ce("THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[t+i]=e.array[n+i];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(2===this.itemSize)for(let e=0,n=this.count;e<n;e++)xi.fromBufferAttribute(this,e),xi.applyMatrix3(t),this.setXY(e,xi.x,xi.y);else if(3===this.itemSize)for(let e=0,n=this.count;e<n;e++)_i.fromBufferAttribute(this,e),_i.applyMatrix3(t),this.setXYZ(e,_i.x,_i.y,_i.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)_i.fromBufferAttribute(this,e),_i.applyMatrix4(t),this.setXYZ(e,_i.x,_i.y,_i.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)_i.fromBufferAttribute(this,e),_i.applyNormalMatrix(t),this.setXYZ(e,_i.x,_i.y,_i.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)_i.fromBufferAttribute(this,e),_i.transformDirection(t),this.setXYZ(e,_i.x,_i.y,_i.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let n=this.array[t*this.itemSize+e];return this.normalized&&(n=xe(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=Se(n,this.array)),this.array[t*this.itemSize+e]=n,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=xe(e,this.array)),e}setX(t,e){return this.normalized&&(e=Se(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=xe(e,this.array)),e}setY(t,e){return this.normalized&&(e=Se(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=xe(e,this.array)),e}setZ(t,e){return this.normalized&&(e=Se(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=xe(e,this.array)),e}setW(t,e){return this.normalized&&(e=Se(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=Se(e,this.array),n=Se(n,this.array)),this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=Se(e,this.array),n=Se(n,this.array),i=Se(i,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this}setXYZW(t,e,n,i,r){return t*=this.itemSize,this.normalized&&(e=Se(e,this.array),n=Se(n,this.array),i=Se(i,this.array),r=Se(r,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=r,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(t.name=this.name),35044!==this.usage&&(t.usage=this.usage),t}}class yi extends Si{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class Mi extends Si{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class bi extends Si{constructor(t,e,n){super(new Float32Array(t),e,n)}}let Ei=0;const Ti=new wn,wi=new Zn,Ai=new Ke,Ci=new Ye,Ri=new Ye,Pi=new Ke;class Ui extends he{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Ei++}),this.uuid=fe(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(Ee(t)?Mi:yi)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return void 0!==this.attributes[t]}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const e=(new Me).getNormalMatrix(t);n.applyNormalMatrix(e),n.needsUpdate=!0}const i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(t),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(t){return Ti.makeRotationFromQuaternion(t),this.applyMatrix4(Ti),this}rotateX(t){return Ti.makeRotationX(t),this.applyMatrix4(Ti),this}rotateY(t){return Ti.makeRotationY(t),this.applyMatrix4(Ti),this}rotateZ(t){return Ti.makeRotationZ(t),this.applyMatrix4(Ti),this}translate(t,e,n){return Ti.makeTranslation(t,e,n),this.applyMatrix4(Ti),this}scale(t,e,n){return Ti.makeScale(t,e,n),this.applyMatrix4(Ti),this}lookAt(t){return wi.lookAt(t),wi.updateMatrix(),this.applyMatrix4(wi.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Ai).negate(),this.translate(Ai.x,Ai.y,Ai.z),this}setFromPoints(t){const e=[];for(let n=0,i=t.length;n<i;n++){const i=t[n];e.push(i.x,i.y,i.z||0)}return this.setAttribute("position",new bi(e,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new Ye);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)this.boundingBox.set(new Ke(-1/0,-1/0,-1/0),new Ke(1/0,1/0,1/0));else{if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];Ci.setFromBufferAttribute(n),this.morphTargetsRelative?(Pi.addVectors(this.boundingBox.min,Ci.min),this.boundingBox.expandByPoint(Pi),Pi.addVectors(this.boundingBox.max,Ci.max),this.boundingBox.expandByPoint(Pi)):(this.boundingBox.expandByPoint(Ci.min),this.boundingBox.expandByPoint(Ci.max))}}else this.boundingBox.makeEmpty();isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z)}}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new vn);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)this.boundingSphere.set(new Ke,1/0);else if(t){const n=this.boundingSphere.center;if(Ci.setFromBufferAttribute(t),e)for(let t=0,r=e.length;t<r;t++){const n=e[t];Ri.setFromBufferAttribute(n),this.morphTargetsRelative?(Pi.addVectors(Ci.min,Ri.min),Ci.expandByPoint(Pi),Pi.addVectors(Ci.max,Ri.max),Ci.expandByPoint(Pi)):(Ci.expandByPoint(Ri.min),Ci.expandByPoint(Ri.max))}Ci.getCenter(n);let i=0;for(let e=0,r=t.count;e<r;e++)Pi.fromBufferAttribute(t,e),i=Math.max(i,n.distanceToSquared(Pi));if(e)for(let r=0,a=e.length;r<a;r++){const a=e[r],s=this.morphTargetsRelative;for(let e=0,r=a.count;e<r;e++)Pi.fromBufferAttribute(a,e),s&&(Ai.fromBufferAttribute(t,e),Pi.add(Ai)),i=Math.max(i,n.distanceToSquared(Pi))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)}}computeTangents(){const t=this.index,e=this.attributes;if(null===t||void 0===e.position||void 0===e.normal||void 0===e.uv)return;const n=t.array,i=e.position.array,r=e.normal.array,a=e.uv.array,s=i.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new Si(new Float32Array(4*s),4));const o=this.getAttribute("tangent").array,l=[],c=[];for(let T=0;T<s;T++)l[T]=new Ke,c[T]=new Ke;const h=new Ke,u=new Ke,d=new Ke,p=new ye,f=new ye,m=new ye,g=new Ke,v=new Ke;function _(t,e,n){h.fromArray(i,3*t),u.fromArray(i,3*e),d.fromArray(i,3*n),p.fromArray(a,2*t),f.fromArray(a,2*e),m.fromArray(a,2*n),u.sub(h),d.sub(h),f.sub(p),m.sub(p);const r=1/(f.x*m.y-m.x*f.y);isFinite(r)&&(g.copy(u).multiplyScalar(m.y).addScaledVector(d,-f.y).multiplyScalar(r),v.copy(d).multiplyScalar(f.x).addScaledVector(u,-m.x).multiplyScalar(r),l[t].add(g),l[e].add(g),l[n].add(g),c[t].add(v),c[e].add(v),c[n].add(v))}let x=this.groups;0===x.length&&(x=[{start:0,count:n.length}]);for(let T=0,w=x.length;T<w;++T){const t=x[T],e=t.start;for(let i=e,r=e+t.count;i<r;i+=3)_(n[i+0],n[i+1],n[i+2])}const S=new Ke,y=new Ke,M=new Ke,b=new Ke;function E(t){M.fromArray(r,3*t),b.copy(M);const e=l[t];S.copy(e),S.sub(M.multiplyScalar(M.dot(e))).normalize(),y.crossVectors(b,e);const n=y.dot(c[t])<0?-1:1;o[4*t]=S.x,o[4*t+1]=S.y,o[4*t+2]=S.z,o[4*t+3]=n}for(let T=0,w=x.length;T<w;++T){const t=x[T],e=t.start;for(let i=e,r=e+t.count;i<r;i+=3)E(n[i+0]),E(n[i+1]),E(n[i+2])}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(void 0!==e){let n=this.getAttribute("normal");if(void 0===n)n=new Si(new Float32Array(3*e.count),3),this.setAttribute("normal",n);else for(let t=0,e=n.count;t<e;t++)n.setXYZ(t,0,0,0);const i=new Ke,r=new Ke,a=new Ke,s=new Ke,o=new Ke,l=new Ke,c=new Ke,h=new Ke;if(t)for(let u=0,d=t.count;u<d;u+=3){const d=t.getX(u+0),p=t.getX(u+1),f=t.getX(u+2);i.fromBufferAttribute(e,d),r.fromBufferAttribute(e,p),a.fromBufferAttribute(e,f),c.subVectors(a,r),h.subVectors(i,r),c.cross(h),s.fromBufferAttribute(n,d),o.fromBufferAttribute(n,p),l.fromBufferAttribute(n,f),s.add(c),o.add(c),l.add(c),n.setXYZ(d,s.x,s.y,s.z),n.setXYZ(p,o.x,o.y,o.z),n.setXYZ(f,l.x,l.y,l.z)}else for(let t=0,u=e.count;t<u;t+=3)i.fromBufferAttribute(e,t+0),r.fromBufferAttribute(e,t+1),a.fromBufferAttribute(e,t+2),c.subVectors(a,r),h.subVectors(i,r),c.cross(h),n.setXYZ(t+0,c.x,c.y,c.z),n.setXYZ(t+1,c.x,c.y,c.z),n.setXYZ(t+2,c.x,c.y,c.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)Pi.fromBufferAttribute(t,e),Pi.normalize(),t.setXYZ(e,Pi.x,Pi.y,Pi.z)}toNonIndexed(){function t(t,e){const n=t.array,i=t.itemSize,r=t.normalized,a=new n.constructor(e.length*i);let s=0,o=0;for(let l=0,c=e.length;l<c;l++){s=t.isInterleavedBufferAttribute?e[l]*t.data.stride+t.offset:e[l]*i;for(let t=0;t<i;t++)a[o++]=n[s++]}return new Si(a,i,r)}if(null===this.index)return this;const e=new Ui,n=this.index.array,i=this.attributes;for(const s in i){const r=t(i[s],n);e.setAttribute(s,r)}const r=this.morphAttributes;for(const s in r){const i=[],a=r[s];for(let e=0,r=a.length;e<r;e++){const r=t(a[e],n);i.push(r)}e.morphAttributes[s]=i}e.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let s=0,o=a.length;s<o;s++){const t=a[s];e.addGroup(t.start,t.count,t.materialIndex)}return e}toJSON(){const t={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const e=this.parameters;for(const n in e)void 0!==e[n]&&(t[n]=e[n]);return t}t.data={attributes:{}};const e=this.index;null!==e&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const o in n){const e=n[o];t.data.attributes[o]=e.toJSON(t.data)}const i={};let r=!1;for(const o in this.morphAttributes){const e=this.morphAttributes[o],n=[];for(let i=0,r=e.length;i<r;i++){const r=e[i];n.push(r.toJSON(t.data))}n.length>0&&(i[o]=n,r=!0)}r&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(t.data.groups=JSON.parse(JSON.stringify(a)));const s=this.boundingSphere;return null!==s&&(t.data.boundingSphere={center:s.center.toArray(),radius:s.radius}),t}clone(){return(new this.constructor).copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;null!==n&&this.setIndex(n.clone(e));const i=t.attributes;for(const l in i){const t=i[l];this.setAttribute(l,t.clone(e))}const r=t.morphAttributes;for(const l in r){const t=[],n=r[l];for(let i=0,r=n.length;i<r;i++)t.push(n[i].clone(e));this.morphAttributes[l]=t}this.morphTargetsRelative=t.morphTargetsRelative;const a=t.groups;for(let l=0,c=a.length;l<c;l++){const t=a[l];this.addGroup(t.start,t.count,t.materialIndex)}const s=t.boundingBox;null!==s&&(this.boundingBox=s.clone());const o=t.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Li=new wn,Wi=new Tn,Ni=new vn,Ii=new Ke,Oi=new Ke,Di=new Ke,Fi=new Ke,ki=new Ke,zi=new Ke,Bi=new ye,Gi=new ye,Vi=new ye,Hi=new Ke,Xi=new Ke,qi=new Ke,ji=new Ke,Ji=new Ke;class Ki extends Zn{constructor(t=new Ui,e=new vi){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,e=Object.keys(t);if(e.length>0){const n=t[e[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let t=0,e=n.length;t<e;t++){const e=n[t].name||String(t);this.morphTargetInfluences.push(0),this.morphTargetDictionary[e]=t}}}}getVertexPosition(t,e){const n=this.geometry,i=n.attributes.position,r=n.morphAttributes.position,a=n.morphTargetsRelative;e.fromBufferAttribute(i,t);const s=this.morphTargetInfluences;if(r&&s){zi.set(0,0,0);for(let n=0,i=r.length;n<i;n++){const i=s[n],o=r[n];0!==i&&(ki.fromBufferAttribute(o,t),a?zi.addScaledVector(ki,i):zi.addScaledVector(ki.sub(e),i))}e.add(zi)}return e}raycast(e,n){const i=this.geometry,r=this.material,a=this.matrixWorld;if(void 0!==r){if(null===i.boundingSphere&&i.computeBoundingSphere(),Ni.copy(i.boundingSphere),Ni.applyMatrix4(a),Wi.copy(e.ray).recast(e.near),!1===Ni.containsPoint(Wi.origin)){if(null===Wi.intersectSphere(Ni,Ii))return;if(Wi.origin.distanceToSquared(Ii)>t(e.far-e.near,2))return}Li.copy(a).invert(),Wi.copy(e.ray).applyMatrix4(Li),null!==i.boundingBox&&!1===Wi.intersectsBox(i.boundingBox)||this._computeIntersections(e,n,Wi)}}_computeIntersections(t,e,n){let i;const r=this.geometry,a=this.material,s=r.index,o=r.attributes.position,l=r.attributes.uv,c=r.attributes.uv1,h=r.attributes.normal,u=r.groups,d=r.drawRange;if(null!==s)if(Array.isArray(a))for(let p=0,f=u.length;p<f;p++){const r=u[p],o=a[r.materialIndex];for(let a=Math.max(r.start,d.start),u=Math.min(s.count,Math.min(r.start+r.count,d.start+d.count));a<u;a+=3){i=Qi(this,o,t,n,l,c,h,s.getX(a),s.getX(a+1),s.getX(a+2)),i&&(i.faceIndex=Math.floor(a/3),i.face.materialIndex=r.materialIndex,e.push(i))}}else{for(let r=Math.max(0,d.start),o=Math.min(s.count,d.start+d.count);r<o;r+=3){i=Qi(this,a,t,n,l,c,h,s.getX(r),s.getX(r+1),s.getX(r+2)),i&&(i.faceIndex=Math.floor(r/3),e.push(i))}}else if(void 0!==o)if(Array.isArray(a))for(let p=0,f=u.length;p<f;p++){const r=u[p],s=a[r.materialIndex];for(let a=Math.max(r.start,d.start),u=Math.min(o.count,Math.min(r.start+r.count,d.start+d.count));a<u;a+=3){i=Qi(this,s,t,n,l,c,h,a,a+1,a+2),i&&(i.faceIndex=Math.floor(a/3),i.face.materialIndex=r.materialIndex,e.push(i))}}else{for(let r=Math.max(0,d.start),s=Math.min(o.count,d.start+d.count);r<s;r+=3){i=Qi(this,a,t,n,l,c,h,r,r+1,r+2),i&&(i.faceIndex=Math.floor(r/3),e.push(i))}}}}function Qi(t,e,n,i,r,a,s,o,l,c){t.getVertexPosition(o,Oi),t.getVertexPosition(l,Di),t.getVertexPosition(c,Fi);const h=function(t,e,n,i,r,a,s,o){let l;if(l=e.side===ut?i.intersectTriangle(s,a,r,!0,o):i.intersectTriangle(r,a,s,e.side===ht,o),null===l)return null;Ji.copy(o),Ji.applyMatrix4(t.matrixWorld);const c=n.ray.origin.distanceTo(Ji);return c<n.near||c>n.far?null:{distance:c,point:Ji.clone(),object:t}}(t,e,n,i,Oi,Di,Fi,ji);if(h){r&&(Bi.fromBufferAttribute(r,o),Gi.fromBufferAttribute(r,l),Vi.fromBufferAttribute(r,c),h.uv=li.getInterpolation(ji,Oi,Di,Fi,Bi,Gi,Vi,new ye)),a&&(Bi.fromBufferAttribute(a,o),Gi.fromBufferAttribute(a,l),Vi.fromBufferAttribute(a,c),h.uv1=li.getInterpolation(ji,Oi,Di,Fi,Bi,Gi,Vi,new ye),h.uv2=h.uv1),s&&(Hi.fromBufferAttribute(s,o),Xi.fromBufferAttribute(s,l),qi.fromBufferAttribute(s,c),h.normal=li.getInterpolation(ji,Oi,Di,Fi,Hi,Xi,qi,new Ke),h.normal.dot(i.direction)>0&&h.normal.multiplyScalar(-1));const t={a:o,b:l,c:c,normal:new Ke,materialIndex:0};li.getNormal(Oi,Di,Fi,t.normal),h.face=t}return h}class Zi extends Ui{constructor(t=1,e=1,n=1,i=1,r=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:r,depthSegments:a};const s=this;i=Math.floor(i),r=Math.floor(r),a=Math.floor(a);const o=[],l=[],c=[],h=[];let u=0,d=0;function p(t,e,n,i,r,a,p,f,m,g,v){const _=a/m,x=p/g,S=a/2,y=p/2,M=f/2,b=m+1,E=g+1;let T=0,w=0;const A=new Ke;for(let s=0;s<E;s++){const a=s*x-y;for(let o=0;o<b;o++){const u=o*_-S;A[t]=u*i,A[e]=a*r,A[n]=M,l.push(A.x,A.y,A.z),A[t]=0,A[e]=0,A[n]=f>0?1:-1,c.push(A.x,A.y,A.z),h.push(o/m),h.push(1-s/g),T+=1}}for(let s=0;s<g;s++)for(let t=0;t<m;t++){const e=u+t+b*s,n=u+t+b*(s+1),i=u+(t+1)+b*(s+1),r=u+(t+1)+b*s;o.push(e,n,r),o.push(n,i,r),w+=6}s.addGroup(d,w,v),d+=w,u+=T}p("z","y","x",-1,-1,n,e,t,a,r,0),p("z","y","x",1,-1,n,e,-t,a,r,1),p("x","z","y",1,1,t,n,e,i,a,2),p("x","z","y",1,-1,t,n,-e,i,a,3),p("x","y","z",1,-1,t,e,n,i,r,4),p("x","y","z",-1,-1,t,e,-n,i,r,5),this.setIndex(o),this.setAttribute("position",new bi(l,3)),this.setAttribute("normal",new bi(c,3)),this.setAttribute("uv",new bi(h,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Zi(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function Yi(t){const e={};for(const n in t){e[n]={};for(const i in t[n]){const r=t[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?r.isRenderTargetTexture?e[n][i]=null:e[n][i]=r.clone():Array.isArray(r)?e[n][i]=r.slice():e[n][i]=r}}return e}function $i(t){const e={};for(let n=0;n<t.length;n++){const i=Yi(t[n]);for(const t in i)e[t]=i[t]}return e}function tr(t){return null===t.getRenderTarget()?t.outputColorSpace:We.workingColorSpace}const er={clone:Yi,merge:$i};class nr extends gi{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1,clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Yi(t.uniforms),this.uniformsGroups=function(t){const e=[];for(let n=0;n<t.length;n++)e.push(t[n].clone());return e}(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const n=this.uniforms[i].value;n&&n.isTexture?e.uniforms[i]={type:"t",value:n.toJSON(t).uuid}:n&&n.isColor?e.uniforms[i]={type:"c",value:n.getHex()}:n&&n.isVector2?e.uniforms[i]={type:"v2",value:n.toArray()}:n&&n.isVector3?e.uniforms[i]={type:"v3",value:n.toArray()}:n&&n.isVector4?e.uniforms[i]={type:"v4",value:n.toArray()}:n&&n.isMatrix3?e.uniforms[i]={type:"m3",value:n.toArray()}:n&&n.isMatrix4?e.uniforms[i]={type:"m4",value:n.toArray()}:e.uniforms[i]={value:n}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e.lights=this.lights,e.clipping=this.clipping;const n={};for(const i in this.extensions)!0===this.extensions[i]&&(n[i]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}class ir extends Zn{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new wn,this.projectionMatrix=new wn,this.projectionMatrixInverse=new wn,this.coordinateSystem=le}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this.coordinateSystem=t.coordinateSystem,this}getWorldDirection(t){return super.getWorldDirection(t).negate()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}const rr=new Ke,ar=new ye,sr=new ye;class or extends ir{constructor(t=50,e=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=2*pe*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(.5*de*this.fov);return.5*this.getFilmHeight()/t}getEffectiveFOV(){return 2*pe*Math.atan(Math.tan(.5*de*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(t,e,n){rr.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),e.set(rr.x,rr.y).multiplyScalar(-t/rr.z),rr.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(rr.x,rr.y).multiplyScalar(-t/rr.z)}getViewSize(t,e){return this.getViewBounds(t,ar,sr),e.subVectors(sr,ar)}setViewOffset(t,e,n,i,r,a){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(.5*de*this.fov)/this.zoom,n=2*e,i=this.aspect*n,r=-.5*i;const a=this.view;if(null!==this.view&&this.view.enabled){const t=a.fullWidth,s=a.fullHeight;r+=a.offsetX*i/t,e-=a.offsetY*n/s,i*=a.width/t,n*=a.height/s}const s=this.filmOffset;0!==s&&(r+=t*s/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,e,e-n,t,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const lr=-90;class cr extends Zn{constructor(t,e,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new or(lr,1,t,e);i.layers=this.layers,this.add(i);const r=new or(lr,1,t,e);r.layers=this.layers,this.add(r);const a=new or(lr,1,t,e);a.layers=this.layers,this.add(a);const s=new or(lr,1,t,e);s.layers=this.layers,this.add(s);const o=new or(lr,1,t,e);o.layers=this.layers,this.add(o);const l=new or(lr,1,t,e);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){const t=this.coordinateSystem,e=this.children.concat(),[n,i,r,a,s,o]=e;for(const l of e)this.remove(l);if(t===le)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),a.up.set(0,0,1),a.lookAt(0,-1,0),s.up.set(0,1,0),s.lookAt(0,0,1),o.up.set(0,1,0),o.lookAt(0,0,-1);else{if(t!==ce)throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+t);n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),a.up.set(0,0,-1),a.lookAt(0,-1,0),s.up.set(0,-1,0),s.lookAt(0,0,1),o.up.set(0,-1,0),o.lookAt(0,0,-1)}for(const l of e)this.add(l),l.updateMatrixWorld()}update(t,e){null===this.parent&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==t.coordinateSystem&&(this.coordinateSystem=t.coordinateSystem,this.updateCoordinateSystem());const[r,a,s,o,l,c]=this.children,h=t.getRenderTarget(),u=t.getActiveCubeFace(),d=t.getActiveMipmapLevel(),p=t.xr.enabled;t.xr.enabled=!1;const f=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0,i),t.render(e,r),t.setRenderTarget(n,1,i),t.render(e,a),t.setRenderTarget(n,2,i),t.render(e,s),t.setRenderTarget(n,3,i),t.render(e,o),t.setRenderTarget(n,4,i),t.render(e,l),n.texture.generateMipmaps=f,t.setRenderTarget(n,5,i),t.render(e,c),t.setRenderTarget(h,u,d),t.xr.enabled=p,n.texture.needsPMREMUpdate=!0}}class hr extends Ge{constructor(t,e,n,i,r,a,s,o,l,c){super(t=void 0!==t?t:[],e=void 0!==e?e:bt,n,i,r,a,s,o,l,c),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class ur extends Xe{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const n={width:t,height:t,depth:1},i=[n,n,n,n,n,n];void 0!==e.encoding&&(Ce("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),e.colorSpace=e.encoding===Kt?Zt:Qt),this.texture=new hr(i,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==e.generateMipmaps&&e.generateMipmaps,this.texture.minFilter=void 0!==e.minFilter?e.minFilter:Ut}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.colorSpace=e.colorSpace,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:"\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",fragmentShader:"\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t"},i=new Zi(5,5,5),r=new nr({name:"CubemapFromEquirect",uniforms:Yi(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:ut,blending:0});r.uniforms.tEquirect.value=e;const a=new Ki(i,r),s=e.minFilter;e.minFilter===Wt&&(e.minFilter=Ut);return new cr(1,10,this).update(t,a),e.minFilter=s,a.geometry.dispose(),a.material.dispose(),this}clear(t,e,n,i){const r=t.getRenderTarget();for(let a=0;a<6;a++)t.setRenderTarget(this,a),t.clear(e,n,i);t.setRenderTarget(r)}}const dr=new Ke,pr=new Ke,fr=new Me;class mr{constructor(t=new Ke(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=dr.subVectors(n,e).cross(pr.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(t).addScaledVector(this.normal,-this.distanceToPoint(t))}intersectLine(t,e){const n=t.delta(dr),i=this.normal.dot(n);if(0===i)return 0===this.distanceToPoint(t.start)?e.copy(t.start):null;const r=-(t.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:e.copy(t.start).addScaledVector(n,r)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||fr.getNormalMatrix(t),i=this.coplanarPoint(dr).applyMatrix4(t),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}}const gr=new vn,vr=new Ke;class _r{constructor(t=new mr,e=new mr,n=new mr,i=new mr,r=new mr,a=new mr){this.planes=[t,e,n,i,r,a]}set(t,e,n,i,r,a){const s=this.planes;return s[0].copy(t),s[1].copy(e),s[2].copy(n),s[3].copy(i),s[4].copy(r),s[5].copy(a),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t,e=2e3){const n=this.planes,i=t.elements,r=i[0],a=i[1],s=i[2],o=i[3],l=i[4],c=i[5],h=i[6],u=i[7],d=i[8],p=i[9],f=i[10],m=i[11],g=i[12],v=i[13],_=i[14],x=i[15];if(n[0].setComponents(o-r,u-l,m-d,x-g).normalize(),n[1].setComponents(o+r,u+l,m+d,x+g).normalize(),n[2].setComponents(o+a,u+c,m+p,x+v).normalize(),n[3].setComponents(o-a,u-c,m-p,x-v).normalize(),n[4].setComponents(o-s,u-h,m-f,x-_).normalize(),e===le)n[5].setComponents(o+s,u+h,m+f,x+_).normalize();else{if(e!==ce)throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+e);n[5].setComponents(s,h,f,_).normalize()}return this}intersectsObject(t){if(void 0!==t.boundingSphere)null===t.boundingSphere&&t.computeBoundingSphere(),gr.copy(t.boundingSphere).applyMatrix4(t.matrixWorld);else{const e=t.geometry;null===e.boundingSphere&&e.computeBoundingSphere(),gr.copy(e.boundingSphere).applyMatrix4(t.matrixWorld)}return this.intersectsSphere(gr)}intersectsSprite(t){return gr.center.set(0,0,0),gr.radius=.7071067811865476,gr.applyMatrix4(t.matrixWorld),this.intersectsSphere(gr)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let r=0;r<6;r++){if(e[r].distanceToPoint(n)<i)return!1}return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(vr.x=i.normal.x>0?t.max.x:t.min.x,vr.y=i.normal.y>0?t.max.y:t.min.y,vr.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(vr)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function xr(){let t=null,e=!1,n=null,i=null;function r(e,a){n(e,a),i=t.requestAnimationFrame(r)}return{start:function(){!0!==e&&null!==n&&(i=t.requestAnimationFrame(r),e=!0)},stop:function(){t.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(t){n=t},setContext:function(e){t=e}}}function Sr(t,e){const n=e.isWebGL2,i=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),i.get(t)},remove:function(e){e.isInterleavedBufferAttribute&&(e=e.data);const n=i.get(e);n&&(t.deleteBuffer(n.buffer),i.delete(e))},update:function(e,r){if(e.isGLBufferAttribute){const t=i.get(e);return void((!t||t.version<e.version)&&i.set(e,{buffer:e.buffer,type:e.type,bytesPerElement:e.elementSize,version:e.version}))}e.isInterleavedBufferAttribute&&(e=e.data);const a=i.get(e);if(void 0===a)i.set(e,function(e,i){const r=e.array,a=e.usage,s=r.byteLength,o=t.createBuffer();let l;if(t.bindBuffer(i,o),t.bufferData(i,r,a),e.onUploadCallback(),r instanceof Float32Array)l=t.FLOAT;else if(r instanceof Uint16Array)if(e.isFloat16BufferAttribute){if(!n)throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");l=t.HALF_FLOAT}else l=t.UNSIGNED_SHORT;else if(r instanceof Int16Array)l=t.SHORT;else if(r instanceof Uint32Array)l=t.UNSIGNED_INT;else if(r instanceof Int32Array)l=t.INT;else if(r instanceof Int8Array)l=t.BYTE;else if(r instanceof Uint8Array)l=t.UNSIGNED_BYTE;else{if(!(r instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+r);l=t.UNSIGNED_BYTE}return{buffer:o,type:l,bytesPerElement:r.BYTES_PER_ELEMENT,version:e.version,size:s}}(e,r));else if(a.version<e.version){if(a.size!==e.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");!function(e,i,r){const a=i.array,s=i._updateRange,o=i.updateRanges;if(t.bindBuffer(r,e),-1===s.count&&0===o.length&&t.bufferSubData(r,0,a),0!==o.length){for(let e=0,i=o.length;e<i;e++){const i=o[e];n?t.bufferSubData(r,i.start*a.BYTES_PER_ELEMENT,a,i.start,i.count):t.bufferSubData(r,i.start*a.BYTES_PER_ELEMENT,a.subarray(i.start,i.start+i.count))}i.clearUpdateRanges()}-1!==s.count&&(n?t.bufferSubData(r,s.offset*a.BYTES_PER_ELEMENT,a,s.offset,s.count):t.bufferSubData(r,s.offset*a.BYTES_PER_ELEMENT,a.subarray(s.offset,s.offset+s.count)),s.count=-1),i.onUploadCallback()}(a.buffer,e,r),a.version=e.version}}}}class yr extends Ui{constructor(t=1,e=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const r=t/2,a=e/2,s=Math.floor(n),o=Math.floor(i),l=s+1,c=o+1,h=t/s,u=e/o,d=[],p=[],f=[],m=[];for(let g=0;g<c;g++){const t=g*u-a;for(let e=0;e<l;e++){const n=e*h-r;p.push(n,-t,0),f.push(0,0,1),m.push(e/s),m.push(1-g/o)}}for(let g=0;g<o;g++)for(let t=0;t<s;t++){const e=t+l*g,n=t+l*(g+1),i=t+1+l*(g+1),r=t+1+l*g;d.push(e,n,r),d.push(n,i,r)}this.setIndex(d),this.setAttribute("position",new bi(p,3)),this.setAttribute("normal",new bi(f,3)),this.setAttribute("uv",new bi(m,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new yr(t.width,t.height,t.widthSegments,t.heightSegments)}}const Mr={alphahash_fragment:"#ifdef USE_ALPHAHASH\n\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\n#endif",alphahash_pars_fragment:"#ifdef USE_ALPHAHASH\n\tconst float ALPHA_HASH_SCALE = 0.05;\n\tfloat hash2D( vec2 value ) {\n\t\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\n\t}\n\tfloat hash3D( vec3 value ) {\n\t\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\n\t}\n\tfloat getAlphaHashThreshold( vec3 position ) {\n\t\tfloat maxDeriv = max(\n\t\t\tlength( dFdx( position.xyz ) ),\n\t\t\tlength( dFdy( position.xyz ) )\n\t\t);\n\t\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\n\t\tvec2 pixScales = vec2(\n\t\t\texp2( floor( log2( pixScale ) ) ),\n\t\t\texp2( ceil( log2( pixScale ) ) )\n\t\t);\n\t\tvec2 alpha = vec2(\n\t\t\thash3D( floor( pixScales.x * position.xyz ) ),\n\t\t\thash3D( floor( pixScales.y * position.xyz ) )\n\t\t);\n\t\tfloat lerpFactor = fract( log2( pixScale ) );\n\t\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\n\t\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\n\t\tvec3 cases = vec3(\n\t\t\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\n\t\t\t( x - 0.5 * a ) / ( 1.0 - a ),\n\t\t\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\n\t\t);\n\t\tfloat threshold = ( x < ( 1.0 - a ) )\n\t\t\t? ( ( x < a ) ? cases.x : cases.y )\n\t\t\t: cases.z;\n\t\treturn clamp( threshold , 1.0e-6, 1.0 );\n\t}\n#endif",alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\t#ifdef ALPHA_TO_COVERAGE\n\tdiffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );\n\tif ( diffuseColor.a == 0.0 ) discard;\n\t#else\n\tif ( diffuseColor.a < alphaTest ) discard;\n\t#endif\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_CLEARCOAT ) \n\t\tclearcoatSpecularIndirect *= ambientOcclusion;\n\t#endif\n\t#if defined( USE_SHEEN ) \n\t\tsheenSpecularIndirect *= ambientOcclusion;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",batching_pars_vertex:"#ifdef USE_BATCHING\n\tattribute float batchId;\n\tuniform highp sampler2D batchingTexture;\n\tmat4 getBatchingMatrix( const in float i ) {\n\t\tint size = textureSize( batchingTexture, 0 ).x;\n\t\tint j = int( i ) * 4;\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\tvec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\n\t\tvec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\n\t\tvec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\n\t\tvec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\n\t\treturn mat4( v1, v2, v3, v4 );\n\t}\n#endif",batching_vertex:"#ifdef USE_BATCHING\n\tmat4 batchingMatrix = getBatchingMatrix( batchId );\n#endif",begin_vertex:"vec3 transformed = vec3( position );\n#ifdef USE_ALPHAHASH\n\tvPosition = vec3( position );\n#endif",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"float G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n} // validated",iridescence_fragment:"#ifdef USE_IRIDESCENCE\n\tconst mat3 XYZ_TO_REC709 = mat3(\n\t\t 3.2404542, -0.9692660,  0.0556434,\n\t\t-1.5371385,  1.8760108, -0.2040259,\n\t\t-0.4985314,  0.0415560,  1.0572252\n\t);\n\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n\t\tvec3 sqrtF0 = sqrt( fresnel0 );\n\t\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n\t}\n\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n\t}\n\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n\t}\n\tvec3 evalSensitivity( float OPD, vec3 shift ) {\n\t\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\n\t\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\t\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\t\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\t\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n\t\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n\t\txyz /= 1.0685e-7;\n\t\tvec3 rgb = XYZ_TO_REC709 * xyz;\n\t\treturn rgb;\n\t}\n\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n\t\tvec3 I;\n\t\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n\t\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\n\t\tif ( cosTheta2Sq < 0.0 ) {\n\t\t\treturn vec3( 1.0 );\n\t\t}\n\t\tfloat cosTheta2 = sqrt( cosTheta2Sq );\n\t\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n\t\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\n\t\tfloat T121 = 1.0 - R12;\n\t\tfloat phi12 = 0.0;\n\t\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\n\t\tfloat phi21 = PI - phi12;\n\t\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\t\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n\t\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n\t\tvec3 phi23 = vec3( 0.0 );\n\t\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n\t\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n\t\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n\t\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n\t\tvec3 phi = vec3( phi21 ) + phi23;\n\t\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n\t\tvec3 r123 = sqrt( R123 );\n\t\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n\t\tvec3 C0 = R12 + Rs;\n\t\tI = C0;\n\t\tvec3 Cm = Rs - T121;\n\t\tfor ( int m = 1; m <= 2; ++ m ) {\n\t\t\tCm *= r123;\n\t\t\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n\t\t\tI += Cm * Sm;\n\t\t}\n\t\treturn max( I, vec3( 0.0 ) );\n\t}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vBumpMapUv );\n\t\tvec2 dSTdy = dFdy( vBumpMapUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\n\t\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#ifdef ALPHA_TO_COVERAGE\n\t\tfloat distanceToPlane, distanceGradient;\n\t\tfloat clipOpacity = 1.0;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\n\t\t\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\n\t\t\tclipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n\t\t\tif ( clipOpacity == 0.0 ) discard;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\t\tfloat unionClipOpacity = 1.0;\n\t\t\t#pragma unroll_loop_start\n\t\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\t\tplane = clippingPlanes[ i ];\n\t\t\t\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\n\t\t\t\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\n\t\t\t\tunionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n\t\t\t}\n\t\t\t#pragma unroll_loop_end\n\t\t\tclipOpacity *= 1.0 - unionClipOpacity;\n\t\t#endif\n\t\tdiffuseColor.a *= clipOpacity;\n\t\tif ( diffuseColor.a == 0.0 ) discard;\n\t#else\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\t\tbool clipped = true;\n\t\t\t#pragma unroll_loop_start\n\t\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\t\tplane = clippingPlanes[ i ];\n\t\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t\t}\n\t\t\t#pragma unroll_loop_end\n\t\t\tif ( clipped ) discard;\n\t\t#endif\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\n#ifdef USE_ALPHAHASH\n\tvarying vec3 vPosition;\n#endif\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat luminance( const in vec3 rgb ) {\n\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\n\treturn dot( weights, rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n} // validated",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define cubeUV_r0 1.0\n\t#define cubeUV_m0 - 2.0\n\t#define cubeUV_r1 0.8\n\t#define cubeUV_m1 - 1.0\n\t#define cubeUV_r4 0.4\n\t#define cubeUV_m4 2.0\n\t#define cubeUV_r5 0.305\n\t#define cubeUV_m5 3.0\n\t#define cubeUV_r6 0.21\n\t#define cubeUV_m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= cubeUV_r1 ) {\n\t\t\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n\t\t} else if ( roughness >= cubeUV_r4 ) {\n\t\t\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n\t\t} else if ( roughness >= cubeUV_r5 ) {\n\t\t\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n\t\t} else if ( roughness >= cubeUV_r6 ) {\n\t\t\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = objectTangent;\n#endif\n#ifdef USE_BATCHING\n\tmat3 bm = mat3( batchingMatrix );\n\ttransformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\n\ttransformedNormal = bm * transformedNormal;\n\t#ifdef USE_TANGENT\n\t\ttransformedTangent = bm * transformedTangent;\n\t#endif\n#endif\n#ifdef USE_INSTANCING\n\tmat3 im = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\n\ttransformedNormal = im * transformedNormal;\n\t#ifdef USE_TANGENT\n\t\ttransformedTangent = im * transformedTangent;\n\t#endif\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\ttransformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",colorspace_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",colorspace_pars_fragment:"\nconst mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(\n\tvec3( 0.8224621, 0.177538, 0.0 ),\n\tvec3( 0.0331941, 0.9668058, 0.0 ),\n\tvec3( 0.0170827, 0.0723974, 0.9105199 )\n);\nconst mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(\n\tvec3( 1.2249401, - 0.2249404, 0.0 ),\n\tvec3( - 0.0420569, 1.0420571, 0.0 ),\n\tvec3( - 0.0196376, - 0.0786361, 1.0982735 )\n);\nvec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {\n\treturn vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );\n}\nvec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {\n\treturn vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );\n}\nvec4 LinearTransferOETF( in vec4 value ) {\n\treturn value;\n}\nvec4 sRGBTransferOETF( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn sRGBTransferOETF( value );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#ifdef USE_ENVMAP\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\t#ifdef USE_ANISOTROPY\n\t\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\n\t\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\t\tvec3 bentNormal = cross( bitangent, viewDir );\n\t\t\t\tbentNormal = normalize( cross( bentNormal, bitangent ) );\n\t\t\t\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\n\t\t\t\treturn getIBLRadiance( viewDir, bentNormal, roughness );\n\t\t\t#else\n\t\t\t\treturn vec3( 0.0 );\n\t\t\t#endif\n\t\t}\n\t#endif\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\tvec2 fw = fwidth( coord ) * 0.5;\n\t\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_fragment:"LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",lights_lambert_pars_fragment:"varying vec3 vViewPosition;\nstruct LambertMaterial {\n\tvec3 diffuseColor;\n\tfloat specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Lambert\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Lambert",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\n#if defined( USE_LIGHT_PROBES )\n\tuniform vec3 lightProbe[ 9 ];\n#endif\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( LEGACY_LIGHTS )\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#else\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometryPosition;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometryPosition;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\tmaterial.ior = ior;\n\t#ifdef USE_SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULAR_COLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\n\t\t#endif\n\t\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\t#ifdef USE_ANISOTROPYMAP\n\t\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\n\t\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\n\t\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\n\t#else\n\t\tvec2 anisotropyV = anisotropyVector;\n\t#endif\n\tmaterial.anisotropy = length( anisotropyV );\n\tif( material.anisotropy == 0.0 ) {\n\t\tanisotropyV = vec2( 1.0, 0.0 );\n\t} else {\n\t\tanisotropyV /= material.anisotropy;\n\t\tmaterial.anisotropy = saturate( material.anisotropy );\n\t}\n\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\n\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\n\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n\t#ifdef IOR\n\t\tfloat ior;\n\t#endif\n\t#ifdef USE_TRANSMISSION\n\t\tfloat transmission;\n\t\tfloat transmissionAlpha;\n\t\tfloat thickness;\n\t\tfloat attenuationDistance;\n\t\tvec3 attenuationColor;\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat anisotropy;\n\t\tfloat alphaT;\n\t\tvec3 anisotropyT;\n\t\tvec3 anisotropyB;\n\t#endif\n};\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\nvec3 sheenSpecularDirect = vec3( 0.0 );\nvec3 sheenSpecularIndirect = vec3(0.0 );\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\n#ifdef USE_ANISOTROPY\n\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\n\t\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\n\t\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\n\t\tfloat v = 0.5 / ( gv + gl );\n\t\treturn saturate(v);\n\t}\n\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\n\t\tfloat a2 = alphaT * alphaB;\n\t\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\n\t\thighp float v2 = dot( v, v );\n\t\tfloat w2 = a2 / v2;\n\t\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\n\t}\n#endif\n#ifdef USE_CLEARCOAT\n\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\n\t\tvec3 f0 = material.clearcoatF0;\n\t\tfloat f90 = material.clearcoatF90;\n\t\tfloat roughness = material.clearcoatRoughness;\n\t\tfloat alpha = pow2( roughness );\n\t\tvec3 halfDir = normalize( lightDir + viewDir );\n\t\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\t\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\t\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\t\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\t\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t\treturn F * ( V * D );\n\t}\n#endif\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\n\tvec3 f0 = material.specularColor;\n\tfloat f90 = material.specularF90;\n\tfloat roughness = material.roughness;\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t#ifdef USE_IRIDESCENCE\n\t\tF = mix( F, material.iridescenceFresnel, material.iridescence );\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat dotTL = dot( material.anisotropyT, lightDir );\n\t\tfloat dotTV = dot( material.anisotropyT, viewDir );\n\t\tfloat dotTH = dot( material.anisotropyT, halfDir );\n\t\tfloat dotBL = dot( material.anisotropyB, lightDir );\n\t\tfloat dotBV = dot( material.anisotropyB, viewDir );\n\t\tfloat dotBH = dot( material.anisotropyB, halfDir );\n\t\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\n\t\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\n\t#else\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t#endif\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometryNormal;\n\t\tvec3 viewDir = geometryViewDir;\n\t\tvec3 position = geometryPosition;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nvec3 geometryPosition = - vViewPosition;\nvec3 geometryNormal = normal;\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\nvec3 geometryClearcoatNormal = vec3( 0.0 );\n#ifdef USE_CLEARCOAT\n\tgeometryClearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\n\tif ( material.iridescenceThickness == 0.0 ) {\n\t\tmaterial.iridescence = 0.0;\n\t} else {\n\t\tmaterial.iridescence = saturate( material.iridescence );\n\t}\n\tif ( material.iridescence > 0.0 ) {\n\t\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\t\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n\t}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometryPosition, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tvec4 spotColor;\n\tvec3 spotLightCoord;\n\tbool inSpotLightMap;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\n\t\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n\t\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n\t\t#else\n\t\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#endif\n\t\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n\t\t\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n\t\t\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n\t\t\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n\t\t\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n\t\t#endif\n\t\t#undef SPOT_LIGHT_MAP_INDEX\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#if defined( USE_LIGHT_PROBES )\n\t\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometryNormal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\t#ifdef USE_ANISOTROPY\n\t\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\n\t#else\n\t\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n\t\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t#if defined( USE_POINTS_UV )\n\t\tvec2 uv = vUv;\n\t#else\n\t\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_POINTS_UV )\n\tvarying vec2 vUv;\n#else\n\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t\tuniform mat3 uvTransform;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform ivec2 morphTargetsTextureSize;\n\t\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = dFdx( vViewPosition );\n\tvec3 fdy = dFdy( vViewPosition );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal *= faceDirection;\n\t#endif\n#endif\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\n\t\t#if defined( USE_NORMALMAP )\n\t\t\tvNormalMapUv\n\t\t#elif defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tvClearcoatNormalMapUv\n\t\t#else\n\t\t\tvUv\n\t\t#endif\n\t\t);\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn[0] *= faceDirection;\n\t\ttbn[1] *= faceDirection;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn2[0] *= faceDirection;\n\t\ttbn2[1] *= faceDirection;\n\t#endif\n#endif\nvec3 nonPerturbedNormal = normal;",normal_fragment_maps:"#ifdef USE_NORMALMAP_OBJECTSPACE\n\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\n\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\tnormal = normalize( tbn * mapN );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef USE_NORMALMAP_OBJECTSPACE\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\n\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( uv.st );\n\t\tvec2 st1 = dFdy( uv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\n\t\treturn mat3( T * scale, B * scale, N );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = nonPerturbedNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",opaque_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec2 packDepthToRG( in highp float v ) {\n\treturn packDepthToRGBA( v ).yx;\n}\nfloat unpackRGToDepth( const in highp vec2 v ) {\n\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn depth * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * depth - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_BATCHING\n\tmvPosition = batchingMatrix * mvPosition;\n#endif\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\n\t\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\tvec4 shadowWorldPosition;\n#endif\n#if defined( USE_SHADOWMAP )\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if NUM_SPOT_LIGHT_COORDS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition;\n\t\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n\t\t#endif\n\t\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tint size = textureSize( boneTexture, 0 ).x;\n\t\tint j = int( i ) * 4;\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\tvec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\n\t\tvec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\n\t\tvec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\n\t\tvec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\n\t\treturn mat4( v1, v2, v3, v4 );\n\t}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn saturate( toneMappingExposure * color );\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\n\tvec3( 1.6605, - 0.1246, - 0.0182 ),\n\tvec3( - 0.5876, 1.1329, - 0.1006 ),\n\tvec3( - 0.0728, - 0.0083, 1.1187 )\n);\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\n\tvec3( 0.6274, 0.0691, 0.0164 ),\n\tvec3( 0.3293, 0.9195, 0.0880 ),\n\tvec3( 0.0433, 0.0113, 0.8956 )\n);\nvec3 agxDefaultContrastApprox( vec3 x ) {\n\tvec3 x2 = x * x;\n\tvec3 x4 = x2 * x2;\n\treturn + 15.5 * x4 * x2\n\t\t- 40.14 * x4 * x\n\t\t+ 31.96 * x4\n\t\t- 6.868 * x2 * x\n\t\t+ 0.4298 * x2\n\t\t+ 0.1191 * x\n\t\t- 0.00232;\n}\nvec3 AgXToneMapping( vec3 color ) {\n\tconst mat3 AgXInsetMatrix = mat3(\n\t\tvec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\n\t\tvec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\n\t\tvec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\n\t);\n\tconst mat3 AgXOutsetMatrix = mat3(\n\t\tvec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\n\t\tvec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\n\t\tvec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\n\t);\n\tconst float AgxMinEv = - 12.47393;\tconst float AgxMaxEv = 4.026069;\n\tcolor *= toneMappingExposure;\n\tcolor = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\n\tcolor = AgXInsetMatrix * color;\n\tcolor = max( color, 1e-10 );\tcolor = log2( color );\n\tcolor = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\n\tcolor = clamp( color, 0.0, 1.0 );\n\tcolor = agxDefaultContrastApprox( color );\n\tcolor = AgXOutsetMatrix * color;\n\tcolor = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\n\tcolor = LINEAR_REC2020_TO_LINEAR_SRGB * color;\n\tcolor = clamp( color, 0.0, 1.0 );\n\treturn color;\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tmaterial.transmission = transmission;\n\tmaterial.transmissionAlpha = 1.0;\n\tmaterial.thickness = thickness;\n\tmaterial.attenuationDistance = attenuationDistance;\n\tmaterial.attenuationColor = attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmitted = getIBLVolumeRefraction(\n\t\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\n\t\tmaterial.attenuationColor, material.attenuationDistance );\n\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\n\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tfloat w0( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\n\t}\n\tfloat w1( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\n\t}\n\tfloat w2( float a ){\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\n\t}\n\tfloat w3( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * a * a );\n\t}\n\tfloat g0( float a ) {\n\t\treturn w0( a ) + w1( a );\n\t}\n\tfloat g1( float a ) {\n\t\treturn w2( a ) + w3( a );\n\t}\n\tfloat h0( float a ) {\n\t\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\n\t}\n\tfloat h1( float a ) {\n\t\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\n\t}\n\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\n\t\tuv = uv * texelSize.zw + 0.5;\n\t\tvec2 iuv = floor( uv );\n\t\tvec2 fuv = fract( uv );\n\t\tfloat g0x = g0( fuv.x );\n\t\tfloat g1x = g1( fuv.x );\n\t\tfloat h0x = h0( fuv.x );\n\t\tfloat h1x = h1( fuv.x );\n\t\tfloat h0y = h0( fuv.y );\n\t\tfloat h1y = h1( fuv.y );\n\t\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\n\t\t\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\n\t}\n\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\n\t\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\n\t\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\n\t\tvec2 fLodSizeInv = 1.0 / fLodSize;\n\t\tvec2 cLodSizeInv = 1.0 / cLodSize;\n\t\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\n\t\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\n\t\treturn mix( fSample, cSample, fract( lod ) );\n\t}\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\n\t}\n\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( isinf( attenuationDistance ) ) {\n\t\t\treturn vec3( 1.0 );\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\n\t}\n#endif",uv_pars_fragment:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",uv_pars_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tuniform mat3 mapTransform;\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform mat3 alphaMapTransform;\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tuniform mat3 lightMapTransform;\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tuniform mat3 aoMapTransform;\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tuniform mat3 bumpMapTransform;\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tuniform mat3 normalMapTransform;\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tuniform mat3 displacementMapTransform;\n\tvarying vec2 vDisplacementMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tuniform mat3 emissiveMapTransform;\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tuniform mat3 metalnessMapTransform;\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tuniform mat3 roughnessMapTransform;\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tuniform mat3 anisotropyMapTransform;\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tuniform mat3 clearcoatMapTransform;\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform mat3 clearcoatNormalMapTransform;\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform mat3 clearcoatRoughnessMapTransform;\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tuniform mat3 sheenColorMapTransform;\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tuniform mat3 sheenRoughnessMapTransform;\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tuniform mat3 iridescenceMapTransform;\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform mat3 iridescenceThicknessMapTransform;\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tuniform mat3 specularMapTransform;\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tuniform mat3 specularColorMapTransform;\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tuniform mat3 specularIntensityMapTransform;\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",uv_vertex:"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvUv = vec3( uv, 1 ).xy;\n#endif\n#ifdef USE_MAP\n\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ALPHAMAP\n\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_LIGHTMAP\n\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_AOMAP\n\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_BUMPMAP\n\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_NORMALMAP\n\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_METALNESSMAP\n\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULARMAP\n\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_THICKNESSMAP\n\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_BATCHING\n\t\tworldPosition = batchingMatrix * worldPosition;\n\t#endif\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",backgroundCube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",backgroundCube_frag:"#ifdef ENVMAP_TYPE_CUBE\n\tuniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n\tuniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\n\t#else\n\t\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\tgl_FragColor = texColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",depth_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <clipping_planes_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <clipping_planes_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_lambert_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define USE_SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef USE_SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULAR_COLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\tuniform vec2 anisotropyVector;\n\t#ifdef USE_ANISOTROPYMAP\n\t\tuniform sampler2D anisotropyMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\n\t#endif\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n#ifdef USE_POINTS_UV\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n#endif\nvoid main() {\n\t#ifdef USE_POINTS_UV\n\t\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\t#endif\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <batching_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <logdepthbuf_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n}"},br={common:{diffuse:{value:new pi(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Me},alphaMap:{value:null},alphaMapTransform:{value:new Me},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Me}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Me}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Me}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Me},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Me},normalScale:{value:new ye(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Me},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Me}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Me}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Me}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new pi(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new pi(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Me},alphaTest:{value:0},uvTransform:{value:new Me}},sprite:{diffuse:{value:new pi(16777215)},opacity:{value:1},center:{value:new ye(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Me},alphaMap:{value:null},alphaMapTransform:{value:new Me},alphaTest:{value:0}}},Er={basic:{uniforms:$i([br.common,br.specularmap,br.envmap,br.aomap,br.lightmap,br.fog]),vertexShader:Mr.meshbasic_vert,fragmentShader:Mr.meshbasic_frag},lambert:{uniforms:$i([br.common,br.specularmap,br.envmap,br.aomap,br.lightmap,br.emissivemap,br.bumpmap,br.normalmap,br.displacementmap,br.fog,br.lights,{emissive:{value:new pi(0)}}]),vertexShader:Mr.meshlambert_vert,fragmentShader:Mr.meshlambert_frag},phong:{uniforms:$i([br.common,br.specularmap,br.envmap,br.aomap,br.lightmap,br.emissivemap,br.bumpmap,br.normalmap,br.displacementmap,br.fog,br.lights,{emissive:{value:new pi(0)},specular:{value:new pi(1118481)},shininess:{value:30}}]),vertexShader:Mr.meshphong_vert,fragmentShader:Mr.meshphong_frag},standard:{uniforms:$i([br.common,br.envmap,br.aomap,br.lightmap,br.emissivemap,br.bumpmap,br.normalmap,br.displacementmap,br.roughnessmap,br.metalnessmap,br.fog,br.lights,{emissive:{value:new pi(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Mr.meshphysical_vert,fragmentShader:Mr.meshphysical_frag},toon:{uniforms:$i([br.common,br.aomap,br.lightmap,br.emissivemap,br.bumpmap,br.normalmap,br.displacementmap,br.gradientmap,br.fog,br.lights,{emissive:{value:new pi(0)}}]),vertexShader:Mr.meshtoon_vert,fragmentShader:Mr.meshtoon_frag},matcap:{uniforms:$i([br.common,br.bumpmap,br.normalmap,br.displacementmap,br.fog,{matcap:{value:null}}]),vertexShader:Mr.meshmatcap_vert,fragmentShader:Mr.meshmatcap_frag},points:{uniforms:$i([br.points,br.fog]),vertexShader:Mr.points_vert,fragmentShader:Mr.points_frag},dashed:{uniforms:$i([br.common,br.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Mr.linedashed_vert,fragmentShader:Mr.linedashed_frag},depth:{uniforms:$i([br.common,br.displacementmap]),vertexShader:Mr.depth_vert,fragmentShader:Mr.depth_frag},normal:{uniforms:$i([br.common,br.bumpmap,br.normalmap,br.displacementmap,{opacity:{value:1}}]),vertexShader:Mr.meshnormal_vert,fragmentShader:Mr.meshnormal_frag},sprite:{uniforms:$i([br.sprite,br.fog]),vertexShader:Mr.sprite_vert,fragmentShader:Mr.sprite_frag},background:{uniforms:{uvTransform:{value:new Me},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Mr.background_vert,fragmentShader:Mr.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:Mr.backgroundCube_vert,fragmentShader:Mr.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Mr.cube_vert,fragmentShader:Mr.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Mr.equirect_vert,fragmentShader:Mr.equirect_frag},distanceRGBA:{uniforms:$i([br.common,br.displacementmap,{referencePosition:{value:new Ke},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Mr.distanceRGBA_vert,fragmentShader:Mr.distanceRGBA_frag},shadow:{uniforms:$i([br.lights,br.fog,{color:{value:new pi(0)},opacity:{value:1}}]),vertexShader:Mr.shadow_vert,fragmentShader:Mr.shadow_frag}};Er.physical={uniforms:$i([Er.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Me},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Me},clearcoatNormalScale:{value:new ye(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Me},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Me},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Me},sheen:{value:0},sheenColor:{value:new pi(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Me},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Me},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Me},transmissionSamplerSize:{value:new ye},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Me},attenuationDistance:{value:0},attenuationColor:{value:new pi(0)},specularColor:{value:new pi(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Me},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Me},anisotropyVector:{value:new ye},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Me}}]),vertexShader:Mr.meshphysical_vert,fragmentShader:Mr.meshphysical_frag};const Tr={r:0,b:0,g:0};function wr(t,e,n,i,r,a,s){const o=new pi(0);let l,c,h=!0===a?0:1,u=null,d=0,p=null;function f(e,n){e.getRGB(Tr,tr(t)),i.buffers.color.setClear(Tr.r,Tr.g,Tr.b,n,s)}return{getClearColor:function(){return o},setClearColor:function(t,e=1){o.set(t),h=e,f(o,h)},getClearAlpha:function(){return h},setClearAlpha:function(t){h=t,f(o,h)},render:function(a,m){let g=!1,v=!0===m.isScene?m.background:null;if(v&&v.isTexture){v=(m.backgroundBlurriness>0?n:e).get(v)}null===v?f(o,h):v&&v.isColor&&(f(v,1),g=!0);const _=t.xr.getEnvironmentBlendMode();"additive"===_?i.buffers.color.setClear(0,0,0,1,s):"alpha-blend"===_&&i.buffers.color.setClear(0,0,0,0,s),(t.autoClear||g)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),v&&(v.isCubeTexture||v.mapping===Tt)?(void 0===c&&(c=new Ki(new Zi(1,1,1),new nr({name:"BackgroundCubeMaterial",uniforms:Yi(Er.backgroundCube.uniforms),vertexShader:Er.backgroundCube.vertexShader,fragmentShader:Er.backgroundCube.fragmentShader,side:ut,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(t,e,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(c)),c.material.uniforms.envMap.value=v,c.material.uniforms.flipEnvMap.value=v.isCubeTexture&&!1===v.isRenderTargetTexture?-1:1,c.material.uniforms.backgroundBlurriness.value=m.backgroundBlurriness,c.material.uniforms.backgroundIntensity.value=m.backgroundIntensity,c.material.toneMapped=We.getTransfer(v.colorSpace)!==ne,u===v&&d===v.version&&p===t.toneMapping||(c.material.needsUpdate=!0,u=v,d=v.version,p=t.toneMapping),c.layers.enableAll(),a.unshift(c,c.geometry,c.material,0,0,null)):v&&v.isTexture&&(void 0===l&&(l=new Ki(new yr(2,2),new nr({name:"BackgroundMaterial",uniforms:Yi(Er.background.uniforms),vertexShader:Er.background.vertexShader,fragmentShader:Er.background.fragmentShader,side:ht,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(l)),l.material.uniforms.t2D.value=v,l.material.uniforms.backgroundIntensity.value=m.backgroundIntensity,l.material.toneMapped=We.getTransfer(v.colorSpace)!==ne,!0===v.matrixAutoUpdate&&v.updateMatrix(),l.material.uniforms.uvTransform.value.copy(v.matrix),u===v&&d===v.version&&p===t.toneMapping||(l.material.needsUpdate=!0,u=v,d=v.version,p=t.toneMapping),l.layers.enableAll(),a.unshift(l,l.geometry,l.material,0,0,null))}}}function Ar(t,e,n,i){const r=t.getParameter(t.MAX_VERTEX_ATTRIBS),a=i.isWebGL2?null:e.get("OES_vertex_array_object"),s=i.isWebGL2||null!==a,o={},l=p(null);let c=l,h=!1;function u(e){return i.isWebGL2?t.bindVertexArray(e):a.bindVertexArrayOES(e)}function d(e){return i.isWebGL2?t.deleteVertexArray(e):a.deleteVertexArrayOES(e)}function p(t){const e=[],n=[],i=[];for(let a=0;a<r;a++)e[a]=0,n[a]=0,i[a]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:n,attributeDivisors:i,object:t,attributes:{},index:null}}function f(){const t=c.newAttributes;for(let e=0,n=t.length;e<n;e++)t[e]=0}function m(t){g(t,0)}function g(n,r){const a=c.newAttributes,s=c.enabledAttributes,o=c.attributeDivisors;if(a[n]=1,0===s[n]&&(t.enableVertexAttribArray(n),s[n]=1),o[n]!==r){(i.isWebGL2?t:e.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,r),o[n]=r}}function v(){const e=c.newAttributes,n=c.enabledAttributes;for(let i=0,r=n.length;i<r;i++)n[i]!==e[i]&&(t.disableVertexAttribArray(i),n[i]=0)}function _(e,n,i,r,a,s,o){!0===o?t.vertexAttribIPointer(e,n,i,a,s):t.vertexAttribPointer(e,n,i,r,a,s)}function x(){S(),h=!0,c!==l&&(c=l,u(c.object))}function S(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function(r,l,d,x,S){let y=!1;if(s){const e=function(e,n,r){const s=!0===r.wireframe;let l=o[e.id];void 0===l&&(l={},o[e.id]=l);let c=l[n.id];void 0===c&&(c={},l[n.id]=c);let h=c[s];void 0===h&&(h=p(i.isWebGL2?t.createVertexArray():a.createVertexArrayOES()),c[s]=h);return h}(x,d,l);c!==e&&(c=e,u(c.object)),y=function(t,e,n,i){const r=c.attributes,a=e.attributes;let s=0;const o=n.getAttributes();for(const l in o){if(o[l].location>=0){const e=r[l];let n=a[l];if(void 0===n&&("instanceMatrix"===l&&t.instanceMatrix&&(n=t.instanceMatrix),"instanceColor"===l&&t.instanceColor&&(n=t.instanceColor)),void 0===e)return!0;if(e.attribute!==n)return!0;if(n&&e.data!==n.data)return!0;s++}}return c.attributesNum!==s||c.index!==i}(r,x,d,S),y&&function(t,e,n,i){const r={},a=e.attributes;let s=0;const o=n.getAttributes();for(const l in o){if(o[l].location>=0){let e=a[l];void 0===e&&("instanceMatrix"===l&&t.instanceMatrix&&(e=t.instanceMatrix),"instanceColor"===l&&t.instanceColor&&(e=t.instanceColor));const n={};n.attribute=e,e&&e.data&&(n.data=e.data),r[l]=n,s++}}c.attributes=r,c.attributesNum=s,c.index=i}(r,x,d,S)}else{const t=!0===l.wireframe;c.geometry===x.id&&c.program===d.id&&c.wireframe===t||(c.geometry=x.id,c.program=d.id,c.wireframe=t,y=!0)}null!==S&&n.update(S,t.ELEMENT_ARRAY_BUFFER),(y||h)&&(h=!1,function(r,a,s,o){if(!1===i.isWebGL2&&(r.isInstancedMesh||o.isInstancedBufferGeometry)&&null===e.get("ANGLE_instanced_arrays"))return;f();const l=o.attributes,c=s.getAttributes(),h=a.defaultAttributeValues;for(const e in c){const a=c[e];if(a.location>=0){let s=l[e];if(void 0===s&&("instanceMatrix"===e&&r.instanceMatrix&&(s=r.instanceMatrix),"instanceColor"===e&&r.instanceColor&&(s=r.instanceColor)),void 0!==s){const e=s.normalized,l=s.itemSize,c=n.get(s);if(void 0===c)continue;const h=c.buffer,u=c.type,d=c.bytesPerElement,p=!0===i.isWebGL2&&(u===t.INT||u===t.UNSIGNED_INT||s.gpuType===Ot);if(s.isInterleavedBufferAttribute){const n=s.data,i=n.stride,c=s.offset;if(n.isInstancedInterleavedBuffer){for(let t=0;t<a.locationSize;t++)g(a.location+t,n.meshPerAttribute);!0!==r.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=n.meshPerAttribute*n.count)}else for(let t=0;t<a.locationSize;t++)m(a.location+t);t.bindBuffer(t.ARRAY_BUFFER,h);for(let t=0;t<a.locationSize;t++)_(a.location+t,l/a.locationSize,u,e,i*d,(c+l/a.locationSize*t)*d,p)}else{if(s.isInstancedBufferAttribute){for(let t=0;t<a.locationSize;t++)g(a.location+t,s.meshPerAttribute);!0!==r.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=s.meshPerAttribute*s.count)}else for(let t=0;t<a.locationSize;t++)m(a.location+t);t.bindBuffer(t.ARRAY_BUFFER,h);for(let t=0;t<a.locationSize;t++)_(a.location+t,l/a.locationSize,u,e,l*d,l/a.locationSize*t*d,p)}}else if(void 0!==h){const n=h[e];if(void 0!==n)switch(n.length){case 2:t.vertexAttrib2fv(a.location,n);break;case 3:t.vertexAttrib3fv(a.location,n);break;case 4:t.vertexAttrib4fv(a.location,n);break;default:t.vertexAttrib1fv(a.location,n)}}}}v()}(r,l,d,x),null!==S&&t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n.get(S).buffer))},reset:x,resetDefaultState:S,dispose:function(){x();for(const t in o){const e=o[t];for(const t in e){const n=e[t];for(const t in n)d(n[t].object),delete n[t];delete e[t]}delete o[t]}},releaseStatesOfGeometry:function(t){if(void 0===o[t.id])return;const e=o[t.id];for(const n in e){const t=e[n];for(const e in t)d(t[e].object),delete t[e];delete e[n]}delete o[t.id]},releaseStatesOfProgram:function(t){for(const e in o){const n=o[e];if(void 0===n[t.id])continue;const i=n[t.id];for(const t in i)d(i[t].object),delete i[t];delete n[t.id]}},initAttributes:f,enableAttribute:m,disableUnusedAttributes:v}}function Cr(t,e,n,i){const r=i.isWebGL2;let a;this.setMode=function(t){a=t},this.render=function(e,i){t.drawArrays(a,e,i),n.update(i,a,1)},this.renderInstances=function(i,s,o){if(0===o)return;let l,c;if(r)l=t,c="drawArraysInstanced";else if(l=e.get("ANGLE_instanced_arrays"),c="drawArraysInstancedANGLE",null===l)return;l[c](a,i,s,o),n.update(s,a,o)},this.renderMultiDraw=function(t,i,r){if(0===r)return;const s=e.get("WEBGL_multi_draw");if(null===s)for(let e=0;e<r;e++)this.render(t[e],i[e]);else{s.multiDrawArraysWEBGL(a,t,0,i,0,r);let e=0;for(let t=0;t<r;t++)e+=i[t];n.update(e,a,1)}}}function Rr(t,e,n){let i;function r(e){if("highp"===e){if(t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.HIGH_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.HIGH_FLOAT).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.MEDIUM_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const a="undefined"!=typeof WebGL2RenderingContext&&"WebGL2RenderingContext"===t.constructor.name;let s=void 0!==n.precision?n.precision:"highp";const o=r(s);o!==s&&(s=o);const l=a||e.has("WEBGL_draw_buffers"),c=!0===n.logarithmicDepthBuffer,h=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),u=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),d=t.getParameter(t.MAX_TEXTURE_SIZE),p=t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),f=t.getParameter(t.MAX_VERTEX_ATTRIBS),m=t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),g=t.getParameter(t.MAX_VARYING_VECTORS),v=t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),_=u>0,x=a||e.has("OES_texture_float");return{isWebGL2:a,drawBuffers:l,getMaxAnisotropy:function(){if(void 0!==i)return i;if(!0===e.has("EXT_texture_filter_anisotropic")){const n=e.get("EXT_texture_filter_anisotropic");i=t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i},getMaxPrecision:r,precision:s,logarithmicDepthBuffer:c,maxTextures:h,maxVertexTextures:u,maxTextureSize:d,maxCubemapSize:p,maxAttributes:f,maxVertexUniforms:m,maxVaryings:g,maxFragmentUniforms:v,vertexTextures:_,floatFragmentTextures:x,floatVertexTextures:_&&x,maxSamples:a?t.getParameter(t.MAX_SAMPLES):0}}function Pr(t){const e=this;let n=null,i=0,r=!1,a=!1;const s=new mr,o=new Me,l={value:null,needsUpdate:!1};function c(t,n,i,r){const a=null!==t?t.length:0;let c=null;if(0!==a){if(c=l.value,!0!==r||null===c){const e=i+4*a,r=n.matrixWorldInverse;o.getNormalMatrix(r),(null===c||c.length<e)&&(c=new Float32Array(e));for(let n=0,l=i;n!==a;++n,l+=4)s.copy(t[n]).applyMatrix4(r,o),s.normal.toArray(c,l),c[l+3]=s.constant}l.value=c,l.needsUpdate=!0}return e.numPlanes=a,e.numIntersection=0,c}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(t,e){const n=0!==t.length||e||0!==i||r;return r=e,i=t.length,n},this.beginShadows=function(){a=!0,c(null)},this.endShadows=function(){a=!1},this.setGlobalState=function(t,e){n=c(t,e,0)},this.setState=function(s,o,h){const u=s.clippingPlanes,d=s.clipIntersection,p=s.clipShadows,f=t.get(s);if(!r||null===u||0===u.length||a&&!p)a?c(null):function(){l.value!==n&&(l.value=n,l.needsUpdate=i>0);e.numPlanes=i,e.numIntersection=0}();else{const t=a?0:i,e=4*t;let r=f.clippingState||null;l.value=r,r=c(u,o,e,h);for(let i=0;i!==e;++i)r[i]=n[i];f.clippingState=r,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=t}}}function Ur(t){let e=new WeakMap;function n(t,e){return 303===e?t.mapping=bt:304===e&&(t.mapping=Et),t}function i(t){const n=t.target;n.removeEventListener("dispose",i);const r=e.get(n);void 0!==r&&(e.delete(n),r.dispose())}return{get:function(r){if(r&&r.isTexture){const a=r.mapping;if(303===a||304===a){if(e.has(r)){return n(e.get(r).texture,r.mapping)}{const a=r.image;if(a&&a.height>0){const s=new ur(a.height);return s.fromEquirectangularTexture(t,r),e.set(r,s),r.addEventListener("dispose",i),n(s.texture,r.mapping)}return null}}}return r},dispose:function(){e=new WeakMap}}}class Lr extends ir{constructor(t=-1,e=1,n=1,i=-1,r=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=r,this.far=a,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this}setViewOffset(t,e,n,i,r,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-t,a=n+t,s=i+e,o=i-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=t*this.view.offsetX,a=r+t*this.view.width,s-=e*this.view.offsetY,o=s-e*this.view.height}this.projectionMatrix.makeOrthographic(r,a,s,o,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}const Wr=[.125,.215,.35,.446,.526,.582],Nr=20,Ir=new Lr,Or=new pi;let Dr=null,Fr=0,kr=0;const zr=(1+Math.sqrt(5))/2,Br=1/zr,Gr=[new Ke(1,1,1),new Ke(-1,1,1),new Ke(1,1,-1),new Ke(-1,1,-1),new Ke(0,zr,Br),new Ke(0,zr,-Br),new Ke(Br,0,zr),new Ke(-Br,0,zr),new Ke(zr,Br,0),new Ke(-zr,Br,0)];class Vr{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,i=100){Dr=this._renderer.getRenderTarget(),Fr=this._renderer.getActiveCubeFace(),kr=this._renderer.getActiveMipmapLevel(),this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(t,n,i,r),e>0&&this._blur(r,0,0,e),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=jr(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=qr(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(Dr,Fr,kr),t.scissorTest=!1,Xr(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===bt||t.mapping===Et?this._setSize(0===t.image.length?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),Dr=this._renderer.getRenderTarget(),Fr=this._renderer.getActiveCubeFace(),kr=this._renderer.getActiveMipmapLevel();const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,n={magFilter:Ut,minFilter:Ut,generateMipmaps:!1,type:kt,format:Bt,colorSpace:Yt,depthBuffer:!1},i=Hr(t,e,n);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==t||this._pingPongRenderTarget.height!==e){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=Hr(t,e,n);const{_lodMax:i}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function(t){const e=[],n=[],i=[];let r=t;const a=t-4+1+Wr.length;for(let s=0;s<a;s++){const a=Math.pow(2,r);n.push(a);let o=1/a;s>t-4?o=Wr[s-t+4-1]:0===s&&(o=0),i.push(o);const l=1/(a-2),c=-l,h=1+l,u=[c,c,h,c,h,h,c,c,h,h,c,h],d=6,p=6,f=3,m=2,g=1,v=new Float32Array(f*p*d),_=new Float32Array(m*p*d),x=new Float32Array(g*p*d);for(let t=0;t<d;t++){const e=t%3*2/3-1,n=t>2?0:-1,i=[e,n,0,e+2/3,n,0,e+2/3,n+1,0,e,n,0,e+2/3,n+1,0,e,n+1,0];v.set(i,f*p*t),_.set(u,m*p*t);const r=[t,t,t,t,t,t];x.set(r,g*p*t)}const S=new Ui;S.setAttribute("position",new Si(v,f)),S.setAttribute("uv",new Si(_,m)),S.setAttribute("faceIndex",new Si(x,g)),e.push(S),r>4&&r--}return{lodPlanes:e,sizeLods:n,sigmas:i}}(i)),this._blurMaterial=function(t,e,n){const i=new Float32Array(Nr),r=new Ke(0,1,0),a=new nr({name:"SphericalGaussianBlur",defines:{n:Nr,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/n,CUBEUV_MAX_MIP:`${t}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:Jr(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1});return a}(i,t,e)}return i}_compileMaterial(t){const e=new Ki(this._lodPlanes[0],t);this._renderer.compile(e,Ir)}_sceneToCubeUV(t,e,n,i){const r=new or(90,1,e,n),a=[1,-1,1,1,1,1],s=[1,1,1,-1,-1,-1],o=this._renderer,l=o.autoClear,c=o.toneMapping;o.getClearColor(Or),o.toneMapping=gt,o.autoClear=!1;const h=new vi({name:"PMREM.Background",side:ut,depthWrite:!1,depthTest:!1}),u=new Ki(new Zi,h);let d=!1;const p=t.background;p?p.isColor&&(h.color.copy(p),t.background=null,d=!0):(h.color.copy(Or),d=!0);for(let f=0;f<6;f++){const e=f%3;0===e?(r.up.set(0,a[f],0),r.lookAt(s[f],0,0)):1===e?(r.up.set(0,0,a[f]),r.lookAt(0,s[f],0)):(r.up.set(0,a[f],0),r.lookAt(0,0,s[f]));const n=this._cubeSize;Xr(i,e*n,f>2?n:0,n,n),o.setRenderTarget(i),d&&o.render(u,r),o.render(t,r)}u.geometry.dispose(),u.material.dispose(),o.toneMapping=c,o.autoClear=l,t.background=p}_textureToCubeUV(t,e){const n=this._renderer,i=t.mapping===bt||t.mapping===Et;i?(null===this._cubemapMaterial&&(this._cubemapMaterial=jr()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===t.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=qr());const r=i?this._cubemapMaterial:this._equirectMaterial,a=new Ki(this._lodPlanes[0],r);r.uniforms.envMap.value=t;const s=this._cubeSize;Xr(e,0,0,3*s,2*s),n.setRenderTarget(e),n.render(a,Ir)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const e=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),n=Gr[(i-1)%Gr.length];this._blur(t,i-1,i,e,n)}e.autoClear=n}_blur(t,e,n,i,r){const a=this._pingPongRenderTarget;this._halfBlur(t,a,e,n,i,"latitudinal",r),this._halfBlur(a,t,n,n,i,"longitudinal",r)}_halfBlur(t,e,n,i,r,a,s){const o=this._renderer,l=this._blurMaterial,c=new Ki(this._lodPlanes[i],l),h=l.uniforms,u=this._sizeLods[n]-1,d=isFinite(r)?Math.PI/(2*u):2*Math.PI/39,p=r/d,f=isFinite(r)?1+Math.floor(3*p):Nr,m=[];let g=0;for(let x=0;x<Nr;++x){const t=x/p,e=Math.exp(-t*t/2);m.push(e),0===x?g+=e:x<f&&(g+=2*e)}for(let x=0;x<m.length;x++)m[x]=m[x]/g;h.envMap.value=t.texture,h.samples.value=f,h.weights.value=m,h.latitudinal.value="latitudinal"===a,s&&(h.poleAxis.value=s);const{_lodMax:v}=this;h.dTheta.value=d,h.mipInt.value=v-n;const _=this._sizeLods[i];Xr(e,3*_*(i>v-4?i-v+4:0),4*(this._cubeSize-_),3*_,2*_),o.setRenderTarget(e),o.render(c,Ir)}}function Hr(t,e,n){const i=new Xe(t,e,n);return i.texture.mapping=Tt,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function Xr(t,e,n,i,r){t.viewport.set(e,n,i,r),t.scissor.set(e,n,i,r)}function qr(){return new nr({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Jr(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function jr(){return new nr({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Jr(),fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function Jr(){return"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t"}function Kr(t){let e=new WeakMap,n=null;function i(t){const n=t.target;n.removeEventListener("dispose",i);const r=e.get(n);void 0!==r&&(e.delete(n),r.dispose())}return{get:function(r){if(r&&r.isTexture){const a=r.mapping,s=303===a||304===a,o=a===bt||a===Et;if(s||o){if(r.isRenderTargetTexture&&!0===r.needsPMREMUpdate){r.needsPMREMUpdate=!1;let i=e.get(r);return null===n&&(n=new Vr(t)),i=s?n.fromEquirectangular(r,i):n.fromCubemap(r,i),e.set(r,i),i.texture}if(e.has(r))return e.get(r).texture;{const a=r.image;if(s&&a&&a.height>0||o&&a&&function(t){let e=0;const n=6;for(let i=0;i<n;i++)void 0!==t[i]&&e++;return e===n}(a)){null===n&&(n=new Vr(t));const a=s?n.fromEquirectangular(r):n.fromCubemap(r);return e.set(r,a),r.addEventListener("dispose",i),a.texture}return null}}}return r},dispose:function(){e=new WeakMap,null!==n&&(n.dispose(),n=null)}}}function Qr(t){const e={};function n(n){if(void 0!==e[n])return e[n];let i;switch(n){case"WEBGL_depth_texture":i=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=t.getExtension(n)}return e[n]=i,i}return{has:function(t){return null!==n(t)},init:function(t){t.isWebGL2?(n("EXT_color_buffer_float"),n("WEBGL_clip_cull_distance")):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture")},get:function(t){const e=n(t);return e}}}function Zr(t,e,n,i){const r={},a=new WeakMap;function s(t){const o=t.target;null!==o.index&&e.remove(o.index);for(const n in o.attributes)e.remove(o.attributes[n]);for(const n in o.morphAttributes){const t=o.morphAttributes[n];for(let n=0,i=t.length;n<i;n++)e.remove(t[n])}o.removeEventListener("dispose",s),delete r[o.id];const l=a.get(o);l&&(e.remove(l),a.delete(o)),i.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,n.memory.geometries--}function o(t){const n=[],i=t.index,r=t.attributes.position;let s=0;if(null!==i){const t=i.array;s=i.version;for(let e=0,i=t.length;e<i;e+=3){const i=t[e+0],r=t[e+1],a=t[e+2];n.push(i,r,r,a,a,i)}}else{if(void 0===r)return;{const t=r.array;s=r.version;for(let e=0,i=t.length/3-1;e<i;e+=3){const t=e+0,i=e+1,r=e+2;n.push(t,i,i,r,r,t)}}}const o=new(Ee(n)?Mi:yi)(n,1);o.version=s;const l=a.get(t);l&&e.remove(l),a.set(t,o)}return{get:function(t,e){return!0===r[e.id]||(e.addEventListener("dispose",s),r[e.id]=!0,n.memory.geometries++),e},update:function(n){const i=n.attributes;for(const a in i)e.update(i[a],t.ARRAY_BUFFER);const r=n.morphAttributes;for(const a in r){const n=r[a];for(let i=0,r=n.length;i<r;i++)e.update(n[i],t.ARRAY_BUFFER)}},getWireframeAttribute:function(t){const e=a.get(t);if(e){const n=t.index;null!==n&&e.version<n.version&&o(t)}else o(t);return a.get(t)}}}function Yr(t,e,n,i){const r=i.isWebGL2;let a,s,o;this.setMode=function(t){a=t},this.setIndex=function(t){s=t.type,o=t.bytesPerElement},this.render=function(e,i){t.drawElements(a,i,s,e*o),n.update(i,a,1)},this.renderInstances=function(i,l,c){if(0===c)return;let h,u;if(r)h=t,u="drawElementsInstanced";else if(h=e.get("ANGLE_instanced_arrays"),u="drawElementsInstancedANGLE",null===h)return;h[u](a,l,s,i*o,c),n.update(l,a,c)},this.renderMultiDraw=function(t,i,r){if(0===r)return;const l=e.get("WEBGL_multi_draw");if(null===l)for(let e=0;e<r;e++)this.render(t[e]/o,i[e]);else{l.multiDrawElementsWEBGL(a,i,0,s,t,0,r);let e=0;for(let t=0;t<r;t++)e+=i[t];n.update(e,a,1)}}}function $r(t){const e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(n,i,r){switch(e.calls++,i){case t.TRIANGLES:e.triangles+=r*(n/3);break;case t.LINES:e.lines+=r*(n/2);break;case t.LINE_STRIP:e.lines+=r*(n-1);break;case t.LINE_LOOP:e.lines+=r*n;break;case t.POINTS:e.points+=r*n}}}}function ta(t,e){return t[0]-e[0]}function ea(t,e){return Math.abs(e[1])-Math.abs(t[1])}function na(t,e,n){const i={},r=new Float32Array(8),a=new WeakMap,s=new Ve,o=[];for(let l=0;l<8;l++)o[l]=[l,0];return{update:function(l,c,h){const u=l.morphTargetInfluences;if(!0===e.isWebGL2){const i=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,r=void 0!==i?i.length:0;let o=a.get(c);if(void 0===o||o.count!==r){let t=function(){v.dispose(),a.delete(c),c.removeEventListener("dispose",t)};void 0!==o&&o.texture.dispose();const n=void 0!==c.morphAttributes.position,i=void 0!==c.morphAttributes.normal,l=void 0!==c.morphAttributes.color,h=c.morphAttributes.position||[],u=c.morphAttributes.normal||[],d=c.morphAttributes.color||[];let p=0;!0===n&&(p=1),!0===i&&(p=2),!0===l&&(p=3);let f=c.attributes.position.count*p,m=1;f>e.maxTextureSize&&(m=Math.ceil(f/e.maxTextureSize),f=e.maxTextureSize);const g=new Float32Array(f*m*4*r),v=new qe(g,f,m,r);v.type=Ft,v.needsUpdate=!0;const _=4*p;for(let e=0;e<r;e++){const t=h[e],r=u[e],a=d[e],o=f*m*4*e;for(let e=0;e<t.count;e++){const c=e*_;!0===n&&(s.fromBufferAttribute(t,e),g[o+c+0]=s.x,g[o+c+1]=s.y,g[o+c+2]=s.z,g[o+c+3]=0),!0===i&&(s.fromBufferAttribute(r,e),g[o+c+4]=s.x,g[o+c+5]=s.y,g[o+c+6]=s.z,g[o+c+7]=0),!0===l&&(s.fromBufferAttribute(a,e),g[o+c+8]=s.x,g[o+c+9]=s.y,g[o+c+10]=s.z,g[o+c+11]=4===a.itemSize?s.w:1)}}o={count:r,texture:v,size:new ye(f,m)},a.set(c,o),c.addEventListener("dispose",t)}let l=0;for(let t=0;t<u.length;t++)l+=u[t];const d=c.morphTargetsRelative?1:1-l;h.getUniforms().setValue(t,"morphTargetBaseInfluence",d),h.getUniforms().setValue(t,"morphTargetInfluences",u),h.getUniforms().setValue(t,"morphTargetsTexture",o.texture,n),h.getUniforms().setValue(t,"morphTargetsTextureSize",o.size)}else{const e=void 0===u?0:u.length;let n=i[c.id];if(void 0===n||n.length!==e){n=[];for(let t=0;t<e;t++)n[t]=[t,0];i[c.id]=n}for(let t=0;t<e;t++){const e=n[t];e[0]=t,e[1]=u[t]}n.sort(ea);for(let t=0;t<8;t++)t<e&&n[t][1]?(o[t][0]=n[t][0],o[t][1]=n[t][1]):(o[t][0]=Number.MAX_SAFE_INTEGER,o[t][1]=0);o.sort(ta);const a=c.morphAttributes.position,s=c.morphAttributes.normal;let l=0;for(let t=0;t<8;t++){const e=o[t],n=e[0],i=e[1];n!==Number.MAX_SAFE_INTEGER&&i?(a&&c.getAttribute("morphTarget"+t)!==a[n]&&c.setAttribute("morphTarget"+t,a[n]),s&&c.getAttribute("morphNormal"+t)!==s[n]&&c.setAttribute("morphNormal"+t,s[n]),r[t]=i,l+=i):(a&&!0===c.hasAttribute("morphTarget"+t)&&c.deleteAttribute("morphTarget"+t),s&&!0===c.hasAttribute("morphNormal"+t)&&c.deleteAttribute("morphNormal"+t),r[t]=0)}const d=c.morphTargetsRelative?1:1-l;h.getUniforms().setValue(t,"morphTargetBaseInfluence",d),h.getUniforms().setValue(t,"morphTargetInfluences",r)}}}}function ia(t,e,n,i){let r=new WeakMap;function a(t){const e=t.target;e.removeEventListener("dispose",a),n.remove(e.instanceMatrix),null!==e.instanceColor&&n.remove(e.instanceColor)}return{update:function(s){const o=i.render.frame,l=s.geometry,c=e.get(s,l);if(r.get(c)!==o&&(e.update(c),r.set(c,o)),s.isInstancedMesh&&(!1===s.hasEventListener("dispose",a)&&s.addEventListener("dispose",a),r.get(s)!==o&&(n.update(s.instanceMatrix,t.ARRAY_BUFFER),null!==s.instanceColor&&n.update(s.instanceColor,t.ARRAY_BUFFER),r.set(s,o))),s.isSkinnedMesh){const t=s.skeleton;r.get(t)!==o&&(t.update(),r.set(t,o))}return c},dispose:function(){r=new WeakMap}}}class ra extends Ge{constructor(t,e,n,i,r,a,s,o,l,c){if((c=void 0!==c?c:Gt)!==Gt&&c!==Vt)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&c===Gt&&(n=Dt),void 0===n&&c===Vt&&(n=zt),super(null,i,r,a,s,o,c,n,l),this.isDepthTexture=!0,this.image={width:t,height:e},this.magFilter=void 0!==s?s:Rt,this.minFilter=void 0!==o?o:Rt,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(t){return super.copy(t),this.compareFunction=t.compareFunction,this}toJSON(t){const e=super.toJSON(t);return null!==this.compareFunction&&(e.compareFunction=this.compareFunction),e}}const aa=new Ge,sa=new ra(1,1);sa.compareFunction=515;const oa=new qe,la=new je,ca=new hr,ha=[],ua=[],da=new Float32Array(16),pa=new Float32Array(9),fa=new Float32Array(4);function ma(t,e,n){const i=t[0];if(i<=0||i>0)return t;const r=e*n;let a=ha[r];if(void 0===a&&(a=new Float32Array(r),ha[r]=a),0!==e){i.toArray(a,0);for(let i=1,r=0;i!==e;++i)r+=n,t[i].toArray(a,r)}return a}function ga(t,e){if(t.length!==e.length)return!1;for(let n=0,i=t.length;n<i;n++)if(t[n]!==e[n])return!1;return!0}function va(t,e){for(let n=0,i=e.length;n<i;n++)t[n]=e[n]}function _a(t,e){let n=ua[e];void 0===n&&(n=new Int32Array(e),ua[e]=n);for(let i=0;i!==e;++i)n[i]=t.allocateTextureUnit();return n}function xa(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function Sa(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(ga(n,e))return;t.uniform2fv(this.addr,e),va(n,e)}}function ya(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(void 0!==e.r)n[0]===e.r&&n[1]===e.g&&n[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(ga(n,e))return;t.uniform3fv(this.addr,e),va(n,e)}}function Ma(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(ga(n,e))return;t.uniform4fv(this.addr,e),va(n,e)}}function ba(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(ga(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),va(n,e)}else{if(ga(n,i))return;fa.set(i),t.uniformMatrix2fv(this.addr,!1,fa),va(n,i)}}function Ea(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(ga(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),va(n,e)}else{if(ga(n,i))return;pa.set(i),t.uniformMatrix3fv(this.addr,!1,pa),va(n,i)}}function Ta(t,e){const n=this.cache,i=e.elements;if(void 0===i){if(ga(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),va(n,e)}else{if(ga(n,i))return;da.set(i),t.uniformMatrix4fv(this.addr,!1,da),va(n,i)}}function wa(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function Aa(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2i(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(ga(n,e))return;t.uniform2iv(this.addr,e),va(n,e)}}function Ca(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3i(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else{if(ga(n,e))return;t.uniform3iv(this.addr,e),va(n,e)}}function Ra(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4i(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(ga(n,e))return;t.uniform4iv(this.addr,e),va(n,e)}}function Pa(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function Ua(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2ui(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(ga(n,e))return;t.uniform2uiv(this.addr,e),va(n,e)}}function La(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3ui(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else{if(ga(n,e))return;t.uniform3uiv(this.addr,e),va(n,e)}}function Wa(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4ui(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(ga(n,e))return;t.uniform4uiv(this.addr,e),va(n,e)}}function Na(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r);const a=this.type===t.SAMPLER_2D_SHADOW?sa:aa;n.setTexture2D(e||a,r)}function Ia(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(e||la,r)}function Oa(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTextureCube(e||ca,r)}function Da(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture2DArray(e||oa,r)}function Fa(t,e){t.uniform1fv(this.addr,e)}function ka(t,e){const n=ma(e,this.size,2);t.uniform2fv(this.addr,n)}function za(t,e){const n=ma(e,this.size,3);t.uniform3fv(this.addr,n)}function Ba(t,e){const n=ma(e,this.size,4);t.uniform4fv(this.addr,n)}function Ga(t,e){const n=ma(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function Va(t,e){const n=ma(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function Ha(t,e){const n=ma(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function Xa(t,e){t.uniform1iv(this.addr,e)}function qa(t,e){t.uniform2iv(this.addr,e)}function ja(t,e){t.uniform3iv(this.addr,e)}function Ja(t,e){t.uniform4iv(this.addr,e)}function Ka(t,e){t.uniform1uiv(this.addr,e)}function Qa(t,e){t.uniform2uiv(this.addr,e)}function Za(t,e){t.uniform3uiv(this.addr,e)}function Ya(t,e){t.uniform4uiv(this.addr,e)}function $a(t,e,n){const i=this.cache,r=e.length,a=_a(n,r);ga(i,a)||(t.uniform1iv(this.addr,a),va(i,a));for(let s=0;s!==r;++s)n.setTexture2D(e[s]||aa,a[s])}function ts(t,e,n){const i=this.cache,r=e.length,a=_a(n,r);ga(i,a)||(t.uniform1iv(this.addr,a),va(i,a));for(let s=0;s!==r;++s)n.setTexture3D(e[s]||la,a[s])}function es(t,e,n){const i=this.cache,r=e.length,a=_a(n,r);ga(i,a)||(t.uniform1iv(this.addr,a),va(i,a));for(let s=0;s!==r;++s)n.setTextureCube(e[s]||ca,a[s])}function ns(t,e,n){const i=this.cache,r=e.length,a=_a(n,r);ga(i,a)||(t.uniform1iv(this.addr,a),va(i,a));for(let s=0;s!==r;++s)n.setTexture2DArray(e[s]||oa,a[s])}class is{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.setValue=function(t){switch(t){case 5126:return xa;case 35664:return Sa;case 35665:return ya;case 35666:return Ma;case 35674:return ba;case 35675:return Ea;case 35676:return Ta;case 5124:case 35670:return wa;case 35667:case 35671:return Aa;case 35668:case 35672:return Ca;case 35669:case 35673:return Ra;case 5125:return Pa;case 36294:return Ua;case 36295:return La;case 36296:return Wa;case 35678:case 36198:case 36298:case 36306:case 35682:return Na;case 35679:case 36299:case 36307:return Ia;case 35680:case 36300:case 36308:case 36293:return Oa;case 36289:case 36303:case 36311:case 36292:return Da}}(e.type)}}class rs{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.size=e.size,this.setValue=function(t){switch(t){case 5126:return Fa;case 35664:return ka;case 35665:return za;case 35666:return Ba;case 35674:return Ga;case 35675:return Va;case 35676:return Ha;case 5124:case 35670:return Xa;case 35667:case 35671:return qa;case 35668:case 35672:return ja;case 35669:case 35673:return Ja;case 5125:return Ka;case 36294:return Qa;case 36295:return Za;case 36296:return Ya;case 35678:case 36198:case 36298:case 36306:case 35682:return $a;case 35679:case 36299:case 36307:return ts;case 35680:case 36300:case 36308:case 36293:return es;case 36289:case 36303:case 36311:case 36292:return ns}}(e.type)}}class as{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,n){const i=this.seq;for(let r=0,a=i.length;r!==a;++r){const a=i[r];a.setValue(t,e[a.id],n)}}}const ss=/(\w+)(\])?(\[|\.)?/g;function os(t,e){t.seq.push(e),t.map[e.id]=e}function ls(t,e,n){const i=t.name,r=i.length;for(ss.lastIndex=0;;){const a=ss.exec(i),s=ss.lastIndex;let o=a[1];const l="]"===a[2],c=a[3];if(l&&(o|=0),void 0===c||"["===c&&s+2===r){os(n,void 0===c?new is(o,t,e):new rs(o,t,e));break}{let t=n.map[o];void 0===t&&(t=new as(o),os(n,t)),n=t}}}class cs{constructor(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,t.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const n=t.getActiveUniform(e,i);ls(n,t.getUniformLocation(e,n.name),this)}}setValue(t,e,n,i){const r=this.map[e];void 0!==r&&r.setValue(t,n,i)}setOptional(t,e,n){const i=e[n];void 0!==i&&this.setValue(t,n,i)}static upload(t,e,n,i){for(let r=0,a=e.length;r!==a;++r){const a=e[r],s=n[a.id];!1!==s.needsUpdate&&a.setValue(t,s.value,i)}}static seqWithValue(t,e){const n=[];for(let i=0,r=t.length;i!==r;++i){const r=t[i];r.id in e&&n.push(r)}return n}}function hs(t,e,n){const i=t.createShader(e);return t.shaderSource(i,n),t.compileShader(i),i}const us=37297;let ds=0;function ps(t,e,n){const i=t.getShaderParameter(e,t.COMPILE_STATUS),r=t.getShaderInfoLog(e).trim();if(i&&""===r)return"";const a=/ERROR: 0:(\d+)/.exec(r);if(a){const i=parseInt(a[1]);return n.toUpperCase()+"\n\n"+r+"\n\n"+function(t,e){const n=t.split("\n"),i=[],r=Math.max(e-6,0),a=Math.min(e+6,n.length);for(let s=r;s<a;s++){const t=s+1;i.push(`${t===e?">":" "} ${t}: ${n[s]}`)}return i.join("\n")}(t.getShaderSource(e),i)}return r}function fs(t,e){const n=function(t){const e=We.getPrimaries(We.workingColorSpace),n=We.getPrimaries(t);let i;switch(e===n?i="":e===re&&n===ie?i="LinearDisplayP3ToLinearSRGB":e===ie&&n===re&&(i="LinearSRGBToLinearDisplayP3"),t){case Yt:case te:return[i,"LinearTransferOETF"];case Zt:case $t:return[i,"sRGBTransferOETF"];default:return[i,"LinearTransferOETF"]}}(e);return`vec4 ${t}( vec4 value ) { return ${n[0]}( ${n[1]}( value ) ); }`}function ms(t,e){let n;switch(e){case vt:n="Linear";break;case _t:n="Reinhard";break;case xt:n="OptimizedCineon";break;case St:n="ACESFilmic";break;case Mt:n="AgX";break;case yt:n="Custom";break;default:n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function gs(t){return""!==t}function vs(t,e){const n=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,n).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function _s(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const xs=/^[ \t]*#include +<([\w\d./]+)>/gm;function Ss(t){return t.replace(xs,Ms)}const ys=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function Ms(t,e){let n=Mr[e];if(void 0===n){const t=ys.get(e);if(void 0===t)throw new Error("Can not resolve #include <"+e+">");n=Mr[t]}return Ss(n)}const bs=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Es(t){return t.replace(bs,Ts)}function Ts(t,e,n,i){let r="";for(let a=parseInt(e);a<parseInt(n);a++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+a+" ]").replace(/UNROLLED_LOOP_INDEX/g,a);return r}function ws(t){let e=`precision ${t.precision} float;\n\tprecision ${t.precision} int;\n\tprecision ${t.precision} sampler2D;\n\tprecision ${t.precision} samplerCube;\n\t`;return t.isWebGL2&&(e+=`precision ${t.precision} sampler3D;\n\t\tprecision ${t.precision} sampler2DArray;\n\t\tprecision ${t.precision} sampler2DShadow;\n\t\tprecision ${t.precision} samplerCubeShadow;\n\t\tprecision ${t.precision} sampler2DArrayShadow;\n\t\tprecision ${t.precision} isampler2D;\n\t\tprecision ${t.precision} isampler3D;\n\t\tprecision ${t.precision} isamplerCube;\n\t\tprecision ${t.precision} isampler2DArray;\n\t\tprecision ${t.precision} usampler2D;\n\t\tprecision ${t.precision} usampler3D;\n\t\tprecision ${t.precision} usamplerCube;\n\t\tprecision ${t.precision} usampler2DArray;\n\t\t`),"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function As(t,e,n,i){const r=t.getContext(),a=n.defines;let s=n.vertexShader,o=n.fragmentShader;const l=function(t){let e="SHADOWMAP_TYPE_BASIC";return t.shadowMapType===ot?e="SHADOWMAP_TYPE_PCF":t.shadowMapType===lt?e="SHADOWMAP_TYPE_PCF_SOFT":t.shadowMapType===ct&&(e="SHADOWMAP_TYPE_VSM"),e}(n),c=function(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case bt:case Et:e="ENVMAP_TYPE_CUBE";break;case Tt:e="ENVMAP_TYPE_CUBE_UV"}return e}(n),h=function(t){let e="ENVMAP_MODE_REFLECTION";t.envMap&&t.envMapMode===Et&&(e="ENVMAP_MODE_REFRACTION");return e}(n),u=function(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case pt:e="ENVMAP_BLENDING_MULTIPLY";break;case ft:e="ENVMAP_BLENDING_MIX";break;case mt:e="ENVMAP_BLENDING_ADD"}return e}(n),d=function(t){const e=t.envMapCubeUVHeight;if(null===e)return null;const n=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,n),112)),texelHeight:i,maxMip:n}}(n),p=n.isWebGL2?"":function(t){return[t.extensionDerivatives||t.envMapCubeUVHeight||t.bumpMap||t.normalMapTangentSpace||t.clearcoatNormalMap||t.flatShading||t.alphaToCoverage||"physical"===t.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap||t.transmission)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(gs).join("\n")}(n),f=function(t){return[t.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",t.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(gs).join("\n")}(n),m=function(t){const e=[];for(const n in t){const i=t[n];!1!==i&&e.push("#define "+n+" "+i)}return e.join("\n")}(a),g=r.createProgram();let v,_,x=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(v=["#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,m].filter(gs).join("\n"),v.length>0&&(v+="\n"),_=[p,"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,m].filter(gs).join("\n"),_.length>0&&(_+="\n")):(v=[ws(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,m,n.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",n.batching?"#define USE_BATCHING":"",n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+h:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.displacementMap?"#define USE_DISPLACEMENTMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.mapUv?"#define MAP_UV "+n.mapUv:"",n.alphaMapUv?"#define ALPHAMAP_UV "+n.alphaMapUv:"",n.lightMapUv?"#define LIGHTMAP_UV "+n.lightMapUv:"",n.aoMapUv?"#define AOMAP_UV "+n.aoMapUv:"",n.emissiveMapUv?"#define EMISSIVEMAP_UV "+n.emissiveMapUv:"",n.bumpMapUv?"#define BUMPMAP_UV "+n.bumpMapUv:"",n.normalMapUv?"#define NORMALMAP_UV "+n.normalMapUv:"",n.displacementMapUv?"#define DISPLACEMENTMAP_UV "+n.displacementMapUv:"",n.metalnessMapUv?"#define METALNESSMAP_UV "+n.metalnessMapUv:"",n.roughnessMapUv?"#define ROUGHNESSMAP_UV "+n.roughnessMapUv:"",n.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+n.anisotropyMapUv:"",n.clearcoatMapUv?"#define CLEARCOATMAP_UV "+n.clearcoatMapUv:"",n.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+n.clearcoatNormalMapUv:"",n.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+n.clearcoatRoughnessMapUv:"",n.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+n.iridescenceMapUv:"",n.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+n.iridescenceThicknessMapUv:"",n.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+n.sheenColorMapUv:"",n.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+n.sheenRoughnessMapUv:"",n.specularMapUv?"#define SPECULARMAP_UV "+n.specularMapUv:"",n.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+n.specularColorMapUv:"",n.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+n.specularIntensityMapUv:"",n.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+n.transmissionMapUv:"",n.thicknessMapUv?"#define THICKNESSMAP_UV "+n.thicknessMapUv:"",n.vertexTangents&&!1===n.flatShading?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.morphColors&&n.isWebGL2?"#define USE_MORPHCOLORS":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+n.morphTextureStride:"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.numLightProbes>0?"#define USE_LIGHT_PROBES":"",n.useLegacyLights?"#define LEGACY_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","\tattribute vec2 uv1;","#endif","#ifdef USE_UV2","\tattribute vec2 uv2;","#endif","#ifdef USE_UV3","\tattribute vec2 uv3;","#endif","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(gs).join("\n"),_=[p,ws(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,m,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+c:"",n.envMap?"#define "+h:"",n.envMap?"#define "+u:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescence?"#define USE_IRIDESCENCE":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.vertexTangents&&!1===n.flatShading?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.numLightProbes>0?"#define USE_LIGHT_PROBES":"",n.useLegacyLights?"#define LEGACY_LIGHTS":"",n.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==gt?"#define TONE_MAPPING":"",n.toneMapping!==gt?Mr.tonemapping_pars_fragment:"",n.toneMapping!==gt?ms("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.opaque?"#define OPAQUE":"",Mr.colorspace_pars_fragment,fs("linearToOutputTexel",n.outputColorSpace),n.useDepthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(gs).join("\n")),s=Ss(s),s=vs(s,n),s=_s(s,n),o=Ss(o),o=vs(o,n),o=_s(o,n),s=Es(s),o=Es(o),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(x="#version 300 es\n",v=[f,"precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+v,_=["precision mediump sampler2DArray;","#define varying in",n.glslVersion===se?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===se?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+_);const S=x+v+s,y=x+_+o,M=hs(r,r.VERTEX_SHADER,S),b=hs(r,r.FRAGMENT_SHADER,y);function E(e){if(t.debug.checkShaderErrors){const n=r.getProgramInfoLog(g).trim(),i=r.getShaderInfoLog(M).trim(),a=r.getShaderInfoLog(b).trim();let s=!0,o=!0;if(!1===r.getProgramParameter(g,r.LINK_STATUS))if(s=!1,"function"==typeof t.debug.onShaderError)t.debug.onShaderError(r,g,M,b);else{ps(r,M,"vertex"),ps(r,b,"fragment")}else""!==n||""!==i&&""!==a||(o=!1);o&&(e.diagnostics={runnable:s,programLog:n,vertexShader:{log:i,prefix:v},fragmentShader:{log:a,prefix:_}})}r.deleteShader(M),r.deleteShader(b),T=new cs(r,g),w=function(t,e){const n={},i=t.getProgramParameter(e,t.ACTIVE_ATTRIBUTES);for(let r=0;r<i;r++){const i=t.getActiveAttrib(e,r),a=i.name;let s=1;i.type===t.FLOAT_MAT2&&(s=2),i.type===t.FLOAT_MAT3&&(s=3),i.type===t.FLOAT_MAT4&&(s=4),n[a]={type:i.type,location:t.getAttribLocation(e,a),locationSize:s}}return n}(r,g)}let T,w;r.attachShader(g,M),r.attachShader(g,b),void 0!==n.index0AttributeName?r.bindAttribLocation(g,0,n.index0AttributeName):!0===n.morphTargets&&r.bindAttribLocation(g,0,"position"),r.linkProgram(g),this.getUniforms=function(){return void 0===T&&E(this),T},this.getAttributes=function(){return void 0===w&&E(this),w};let A=!1===n.rendererExtensionParallelShaderCompile;return this.isReady=function(){return!1===A&&(A=r.getProgramParameter(g,us)),A},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(g),this.program=void 0},this.type=n.shaderType,this.name=n.shaderName,this.id=ds++,this.cacheKey=e,this.usedTimes=1,this.program=g,this.vertexShader=M,this.fragmentShader=b,this}let Cs=0;class Rs{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,i=this._getShaderStage(e),r=this._getShaderStage(n),a=this._getShaderCacheForMaterial(t);return!1===a.has(i)&&(a.add(i),i.usedTimes++),!1===a.has(r)&&(a.add(r),r.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const n of e)n.usedTimes--,0===n.usedTimes&&this.shaderCache.delete(n.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let n=e.get(t);return void 0===n&&(n=new Set,e.set(t,n)),n}_getShaderStage(t){const e=this.shaderCache;let n=e.get(t);return void 0===n&&(n=new Ps(t),e.set(t,n)),n}}class Ps{constructor(t){this.id=Cs++,this.code=t,this.usedTimes=0}}function Us(t,e,n,i,r,a,s){const o=new Dn,l=new Rs,c=new Set,h=[],u=r.isWebGL2,d=r.logarithmicDepthBuffer,p=r.vertexTextures;let f=r.precision;const m={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function g(t){return c.add(t),0===t?"uv":`uv${t}`}return{getParameters:function(a,o,h,v,_){const x=v.fog,S=_.geometry,y=a.isMeshStandardMaterial?v.environment:null,M=(a.isMeshStandardMaterial?n:e).get(a.envMap||y),b=M&&M.mapping===Tt?M.image.height:null,E=m[a.type];null!==a.precision&&(f=r.getMaxPrecision(a.precision),a.precision);const T=S.morphAttributes.position||S.morphAttributes.normal||S.morphAttributes.color,w=void 0!==T?T.length:0;let A,C,R,P,U=0;if(void 0!==S.morphAttributes.position&&(U=1),void 0!==S.morphAttributes.normal&&(U=2),void 0!==S.morphAttributes.color&&(U=3),E){const t=Er[E];A=t.vertexShader,C=t.fragmentShader}else A=a.vertexShader,C=a.fragmentShader,l.update(a),R=l.getVertexShaderID(a),P=l.getFragmentShaderID(a);const L=t.getRenderTarget(),W=!0===_.isInstancedMesh,N=!0===_.isBatchedMesh,I=!!a.map,O=!!a.matcap,D=!!M,F=!!a.aoMap,k=!!a.lightMap,z=!!a.bumpMap,B=!!a.normalMap,G=!!a.displacementMap,V=!!a.emissiveMap,H=!!a.metalnessMap,X=!!a.roughnessMap,q=a.anisotropy>0,j=a.clearcoat>0,J=a.iridescence>0,K=a.sheen>0,Q=a.transmission>0,Z=q&&!!a.anisotropyMap,Y=j&&!!a.clearcoatMap,$=j&&!!a.clearcoatNormalMap,tt=j&&!!a.clearcoatRoughnessMap,et=J&&!!a.iridescenceMap,nt=J&&!!a.iridescenceThicknessMap,it=K&&!!a.sheenColorMap,rt=K&&!!a.sheenRoughnessMap,at=!!a.specularMap,st=!!a.specularColorMap,ot=!!a.specularIntensityMap,lt=Q&&!!a.transmissionMap,ct=Q&&!!a.thicknessMap,ht=!!a.gradientMap,dt=!!a.alphaMap,pt=a.alphaTest>0,ft=!!a.alphaHash,mt=!!a.extensions;let vt=gt;a.toneMapped&&(null!==L&&!0!==L.isXRRenderTarget||(vt=t.toneMapping));const _t={isWebGL2:u,shaderID:E,shaderType:a.type,shaderName:a.name,vertexShader:A,fragmentShader:C,defines:a.defines,customVertexShaderID:R,customFragmentShaderID:P,isRawShaderMaterial:!0===a.isRawShaderMaterial,glslVersion:a.glslVersion,precision:f,batching:N,instancing:W,instancingColor:W&&null!==_.instanceColor,supportsVertexTextures:p,outputColorSpace:null===L?t.outputColorSpace:!0===L.isXRRenderTarget?L.texture.colorSpace:Yt,alphaToCoverage:!!a.alphaToCoverage,map:I,matcap:O,envMap:D,envMapMode:D&&M.mapping,envMapCubeUVHeight:b,aoMap:F,lightMap:k,bumpMap:z,normalMap:B,displacementMap:p&&G,emissiveMap:V,normalMapObjectSpace:B&&1===a.normalMapType,normalMapTangentSpace:B&&0===a.normalMapType,metalnessMap:H,roughnessMap:X,anisotropy:q,anisotropyMap:Z,clearcoat:j,clearcoatMap:Y,clearcoatNormalMap:$,clearcoatRoughnessMap:tt,iridescence:J,iridescenceMap:et,iridescenceThicknessMap:nt,sheen:K,sheenColorMap:it,sheenRoughnessMap:rt,specularMap:at,specularColorMap:st,specularIntensityMap:ot,transmission:Q,transmissionMap:lt,thicknessMap:ct,gradientMap:ht,opaque:!1===a.transparent&&1===a.blending&&!1===a.alphaToCoverage,alphaMap:dt,alphaTest:pt,alphaHash:ft,combine:a.combine,mapUv:I&&g(a.map.channel),aoMapUv:F&&g(a.aoMap.channel),lightMapUv:k&&g(a.lightMap.channel),bumpMapUv:z&&g(a.bumpMap.channel),normalMapUv:B&&g(a.normalMap.channel),displacementMapUv:G&&g(a.displacementMap.channel),emissiveMapUv:V&&g(a.emissiveMap.channel),metalnessMapUv:H&&g(a.metalnessMap.channel),roughnessMapUv:X&&g(a.roughnessMap.channel),anisotropyMapUv:Z&&g(a.anisotropyMap.channel),clearcoatMapUv:Y&&g(a.clearcoatMap.channel),clearcoatNormalMapUv:$&&g(a.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:tt&&g(a.clearcoatRoughnessMap.channel),iridescenceMapUv:et&&g(a.iridescenceMap.channel),iridescenceThicknessMapUv:nt&&g(a.iridescenceThicknessMap.channel),sheenColorMapUv:it&&g(a.sheenColorMap.channel),sheenRoughnessMapUv:rt&&g(a.sheenRoughnessMap.channel),specularMapUv:at&&g(a.specularMap.channel),specularColorMapUv:st&&g(a.specularColorMap.channel),specularIntensityMapUv:ot&&g(a.specularIntensityMap.channel),transmissionMapUv:lt&&g(a.transmissionMap.channel),thicknessMapUv:ct&&g(a.thicknessMap.channel),alphaMapUv:dt&&g(a.alphaMap.channel),vertexTangents:!!S.attributes.tangent&&(B||q),vertexColors:a.vertexColors,vertexAlphas:!0===a.vertexColors&&!!S.attributes.color&&4===S.attributes.color.itemSize,pointsUvs:!0===_.isPoints&&!!S.attributes.uv&&(I||dt),fog:!!x,useFog:!0===a.fog,fogExp2:!!x&&x.isFogExp2,flatShading:!0===a.flatShading,sizeAttenuation:!0===a.sizeAttenuation,logarithmicDepthBuffer:d,skinning:!0===_.isSkinnedMesh,morphTargets:void 0!==S.morphAttributes.position,morphNormals:void 0!==S.morphAttributes.normal,morphColors:void 0!==S.morphAttributes.color,morphTargetsCount:w,morphTextureStride:U,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numSpotLightMaps:o.spotLightMap.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numSpotLightShadowsWithMaps:o.numSpotLightShadowsWithMaps,numLightProbes:o.numLightProbes,numClippingPlanes:s.numPlanes,numClipIntersection:s.numIntersection,dithering:a.dithering,shadowMapEnabled:t.shadowMap.enabled&&h.length>0,shadowMapType:t.shadowMap.type,toneMapping:vt,useLegacyLights:t._useLegacyLights,decodeVideoTexture:I&&!0===a.map.isVideoTexture&&We.getTransfer(a.map.colorSpace)===ne,premultipliedAlpha:a.premultipliedAlpha,doubleSided:2===a.side,flipSided:a.side===ut,useDepthPacking:a.depthPacking>=0,depthPacking:a.depthPacking||0,index0AttributeName:a.index0AttributeName,extensionDerivatives:mt&&!0===a.extensions.derivatives,extensionFragDepth:mt&&!0===a.extensions.fragDepth,extensionDrawBuffers:mt&&!0===a.extensions.drawBuffers,extensionShaderTextureLOD:mt&&!0===a.extensions.shaderTextureLOD,extensionClipCullDistance:mt&&!0===a.extensions.clipCullDistance&&i.has("WEBGL_clip_cull_distance"),extensionMultiDraw:mt&&!0===a.extensions.multiDraw&&i.has("WEBGL_multi_draw"),rendererExtensionFragDepth:u||i.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||i.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||i.has("EXT_shader_texture_lod"),rendererExtensionParallelShaderCompile:i.has("KHR_parallel_shader_compile"),customProgramCacheKey:a.customProgramCacheKey()};return _t.vertexUv1s=c.has(1),_t.vertexUv2s=c.has(2),_t.vertexUv3s=c.has(3),c.clear(),_t},getProgramCacheKey:function(e){const n=[];if(e.shaderID?n.push(e.shaderID):(n.push(e.customVertexShaderID),n.push(e.customFragmentShaderID)),void 0!==e.defines)for(const t in e.defines)n.push(t),n.push(e.defines[t]);return!1===e.isRawShaderMaterial&&(!function(t,e){t.push(e.precision),t.push(e.outputColorSpace),t.push(e.envMapMode),t.push(e.envMapCubeUVHeight),t.push(e.mapUv),t.push(e.alphaMapUv),t.push(e.lightMapUv),t.push(e.aoMapUv),t.push(e.bumpMapUv),t.push(e.normalMapUv),t.push(e.displacementMapUv),t.push(e.emissiveMapUv),t.push(e.metalnessMapUv),t.push(e.roughnessMapUv),t.push(e.anisotropyMapUv),t.push(e.clearcoatMapUv),t.push(e.clearcoatNormalMapUv),t.push(e.clearcoatRoughnessMapUv),t.push(e.iridescenceMapUv),t.push(e.iridescenceThicknessMapUv),t.push(e.sheenColorMapUv),t.push(e.sheenRoughnessMapUv),t.push(e.specularMapUv),t.push(e.specularColorMapUv),t.push(e.specularIntensityMapUv),t.push(e.transmissionMapUv),t.push(e.thicknessMapUv),t.push(e.combine),t.push(e.fogExp2),t.push(e.sizeAttenuation),t.push(e.morphTargetsCount),t.push(e.morphAttributeCount),t.push(e.numDirLights),t.push(e.numPointLights),t.push(e.numSpotLights),t.push(e.numSpotLightMaps),t.push(e.numHemiLights),t.push(e.numRectAreaLights),t.push(e.numDirLightShadows),t.push(e.numPointLightShadows),t.push(e.numSpotLightShadows),t.push(e.numSpotLightShadowsWithMaps),t.push(e.numLightProbes),t.push(e.shadowMapType),t.push(e.toneMapping),t.push(e.numClippingPlanes),t.push(e.numClipIntersection),t.push(e.depthPacking)}(n,e),function(t,e){o.disableAll(),e.isWebGL2&&o.enable(0);e.supportsVertexTextures&&o.enable(1);e.instancing&&o.enable(2);e.instancingColor&&o.enable(3);e.matcap&&o.enable(4);e.envMap&&o.enable(5);e.normalMapObjectSpace&&o.enable(6);e.normalMapTangentSpace&&o.enable(7);e.clearcoat&&o.enable(8);e.iridescence&&o.enable(9);e.alphaTest&&o.enable(10);e.vertexColors&&o.enable(11);e.vertexAlphas&&o.enable(12);e.vertexUv1s&&o.enable(13);e.vertexUv2s&&o.enable(14);e.vertexUv3s&&o.enable(15);e.vertexTangents&&o.enable(16);e.anisotropy&&o.enable(17);e.alphaHash&&o.enable(18);e.batching&&o.enable(19);t.push(o.mask),o.disableAll(),e.fog&&o.enable(0);e.useFog&&o.enable(1);e.flatShading&&o.enable(2);e.logarithmicDepthBuffer&&o.enable(3);e.skinning&&o.enable(4);e.morphTargets&&o.enable(5);e.morphNormals&&o.enable(6);e.morphColors&&o.enable(7);e.premultipliedAlpha&&o.enable(8);e.shadowMapEnabled&&o.enable(9);e.useLegacyLights&&o.enable(10);e.doubleSided&&o.enable(11);e.flipSided&&o.enable(12);e.useDepthPacking&&o.enable(13);e.dithering&&o.enable(14);e.transmission&&o.enable(15);e.sheen&&o.enable(16);e.opaque&&o.enable(17);e.pointsUvs&&o.enable(18);e.decodeVideoTexture&&o.enable(19);e.alphaToCoverage&&o.enable(20);t.push(o.mask)}(n,e),n.push(t.outputColorSpace)),n.push(e.customProgramCacheKey),n.join()},getUniforms:function(t){const e=m[t.type];let n;if(e){const t=Er[e];n=er.clone(t.uniforms)}else n=t.uniforms;return n},acquireProgram:function(e,n){let i;for(let t=0,r=h.length;t<r;t++){const e=h[t];if(e.cacheKey===n){i=e,++i.usedTimes;break}}return void 0===i&&(i=new As(t,n,e,a),h.push(i)),i},releaseProgram:function(t){if(0==--t.usedTimes){const e=h.indexOf(t);h[e]=h[h.length-1],h.pop(),t.destroy()}},releaseShaderCache:function(t){l.remove(t)},programs:h,dispose:function(){l.dispose()}}}function Ls(){let t=new WeakMap;return{get:function(e){let n=t.get(e);return void 0===n&&(n={},t.set(e,n)),n},remove:function(e){t.delete(e)},update:function(e,n,i){t.get(e)[n]=i},dispose:function(){t=new WeakMap}}}function Ws(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function Ns(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function Is(){const t=[];let e=0;const n=[],i=[],r=[];function a(n,i,r,a,s,o){let l=t[e];return void 0===l?(l={id:n.id,object:n,geometry:i,material:r,groupOrder:a,renderOrder:n.renderOrder,z:s,group:o},t[e]=l):(l.id=n.id,l.object=n,l.geometry=i,l.material=r,l.groupOrder=a,l.renderOrder=n.renderOrder,l.z=s,l.group=o),e++,l}return{opaque:n,transmissive:i,transparent:r,init:function(){e=0,n.length=0,i.length=0,r.length=0},push:function(t,e,s,o,l,c){const h=a(t,e,s,o,l,c);s.transmission>0?i.push(h):!0===s.transparent?r.push(h):n.push(h)},unshift:function(t,e,s,o,l,c){const h=a(t,e,s,o,l,c);s.transmission>0?i.unshift(h):!0===s.transparent?r.unshift(h):n.unshift(h)},finish:function(){for(let n=e,i=t.length;n<i;n++){const e=t[n];if(null===e.id)break;e.id=null,e.object=null,e.geometry=null,e.material=null,e.group=null}},sort:function(t,e){n.length>1&&n.sort(t||Ws),i.length>1&&i.sort(e||Ns),r.length>1&&r.sort(e||Ns)}}}function Os(){let t=new WeakMap;return{get:function(e,n){const i=t.get(e);let r;return void 0===i?(r=new Is,t.set(e,[r])):n>=i.length?(r=new Is,i.push(r)):r=i[n],r},dispose:function(){t=new WeakMap}}}function Ds(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new Ke,color:new pi};break;case"SpotLight":n={position:new Ke,direction:new Ke,color:new pi,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new Ke,color:new pi,distance:0,decay:0};break;case"HemisphereLight":n={direction:new Ke,skyColor:new pi,groundColor:new pi};break;case"RectAreaLight":n={color:new pi,position:new Ke,halfWidth:new Ke,halfHeight:new Ke}}return t[e.id]=n,n}}}let Fs=0;function ks(t,e){return(e.castShadow?2:0)-(t.castShadow?2:0)+(e.map?1:0)-(t.map?1:0)}function zs(t,e){const n=new Ds,i=function(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ye};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ye,shadowCameraNear:1,shadowCameraFar:1e3}}return t[e.id]=n,n}}}(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let l=0;l<9;l++)r.probe.push(new Ke);const a=new Ke,s=new wn,o=new wn;return{setup:function(a,s){let o=0,l=0,c=0;for(let t=0;t<9;t++)r.probe[t].set(0,0,0);let h=0,u=0,d=0,p=0,f=0,m=0,g=0,v=0,_=0,x=0,S=0;a.sort(ks);const y=!0===s?Math.PI:1;for(let t=0,e=a.length;t<e;t++){const e=a[t],s=e.color,M=e.intensity,b=e.distance,E=e.shadow&&e.shadow.map?e.shadow.map.texture:null;if(e.isAmbientLight)o+=s.r*M*y,l+=s.g*M*y,c+=s.b*M*y;else if(e.isLightProbe){for(let t=0;t<9;t++)r.probe[t].addScaledVector(e.sh.coefficients[t],M);S++}else if(e.isDirectionalLight){const t=n.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity*y),e.castShadow){const t=e.shadow,n=i.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,r.directionalShadow[h]=n,r.directionalShadowMap[h]=E,r.directionalShadowMatrix[h]=e.shadow.matrix,m++}r.directional[h]=t,h++}else if(e.isSpotLight){const t=n.get(e);t.position.setFromMatrixPosition(e.matrixWorld),t.color.copy(s).multiplyScalar(M*y),t.distance=b,t.coneCos=Math.cos(e.angle),t.penumbraCos=Math.cos(e.angle*(1-e.penumbra)),t.decay=e.decay,r.spot[d]=t;const a=e.shadow;if(e.map&&(r.spotLightMap[_]=e.map,_++,a.updateMatrices(e),e.castShadow&&x++),r.spotLightMatrix[d]=a.matrix,e.castShadow){const t=i.get(e);t.shadowBias=a.bias,t.shadowNormalBias=a.normalBias,t.shadowRadius=a.radius,t.shadowMapSize=a.mapSize,r.spotShadow[d]=t,r.spotShadowMap[d]=E,v++}d++}else if(e.isRectAreaLight){const t=n.get(e);t.color.copy(s).multiplyScalar(M),t.halfWidth.set(.5*e.width,0,0),t.halfHeight.set(0,.5*e.height,0),r.rectArea[p]=t,p++}else if(e.isPointLight){const t=n.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity*y),t.distance=e.distance,t.decay=e.decay,e.castShadow){const t=e.shadow,n=i.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,n.shadowCameraNear=t.camera.near,n.shadowCameraFar=t.camera.far,r.pointShadow[u]=n,r.pointShadowMap[u]=E,r.pointShadowMatrix[u]=e.shadow.matrix,g++}r.point[u]=t,u++}else if(e.isHemisphereLight){const t=n.get(e);t.skyColor.copy(e.color).multiplyScalar(M*y),t.groundColor.copy(e.groundColor).multiplyScalar(M*y),r.hemi[f]=t,f++}}p>0&&(e.isWebGL2?!0===t.has("OES_texture_float_linear")?(r.rectAreaLTC1=br.LTC_FLOAT_1,r.rectAreaLTC2=br.LTC_FLOAT_2):(r.rectAreaLTC1=br.LTC_HALF_1,r.rectAreaLTC2=br.LTC_HALF_2):!0===t.has("OES_texture_float_linear")?(r.rectAreaLTC1=br.LTC_FLOAT_1,r.rectAreaLTC2=br.LTC_FLOAT_2):!0===t.has("OES_texture_half_float_linear")&&(r.rectAreaLTC1=br.LTC_HALF_1,r.rectAreaLTC2=br.LTC_HALF_2)),r.ambient[0]=o,r.ambient[1]=l,r.ambient[2]=c;const M=r.hash;M.directionalLength===h&&M.pointLength===u&&M.spotLength===d&&M.rectAreaLength===p&&M.hemiLength===f&&M.numDirectionalShadows===m&&M.numPointShadows===g&&M.numSpotShadows===v&&M.numSpotMaps===_&&M.numLightProbes===S||(r.directional.length=h,r.spot.length=d,r.rectArea.length=p,r.point.length=u,r.hemi.length=f,r.directionalShadow.length=m,r.directionalShadowMap.length=m,r.pointShadow.length=g,r.pointShadowMap.length=g,r.spotShadow.length=v,r.spotShadowMap.length=v,r.directionalShadowMatrix.length=m,r.pointShadowMatrix.length=g,r.spotLightMatrix.length=v+_-x,r.spotLightMap.length=_,r.numSpotLightShadowsWithMaps=x,r.numLightProbes=S,M.directionalLength=h,M.pointLength=u,M.spotLength=d,M.rectAreaLength=p,M.hemiLength=f,M.numDirectionalShadows=m,M.numPointShadows=g,M.numSpotShadows=v,M.numSpotMaps=_,M.numLightProbes=S,r.version=Fs++)},setupView:function(t,e){let n=0,i=0,l=0,c=0,h=0;const u=e.matrixWorldInverse;for(let d=0,p=t.length;d<p;d++){const e=t[d];if(e.isDirectionalLight){const t=r.directional[n];t.direction.setFromMatrixPosition(e.matrixWorld),a.setFromMatrixPosition(e.target.matrixWorld),t.direction.sub(a),t.direction.transformDirection(u),n++}else if(e.isSpotLight){const t=r.spot[l];t.position.setFromMatrixPosition(e.matrixWorld),t.position.applyMatrix4(u),t.direction.setFromMatrixPosition(e.matrixWorld),a.setFromMatrixPosition(e.target.matrixWorld),t.direction.sub(a),t.direction.transformDirection(u),l++}else if(e.isRectAreaLight){const t=r.rectArea[c];t.position.setFromMatrixPosition(e.matrixWorld),t.position.applyMatrix4(u),o.identity(),s.copy(e.matrixWorld),s.premultiply(u),o.extractRotation(s),t.halfWidth.set(.5*e.width,0,0),t.halfHeight.set(0,.5*e.height,0),t.halfWidth.applyMatrix4(o),t.halfHeight.applyMatrix4(o),c++}else if(e.isPointLight){const t=r.point[i];t.position.setFromMatrixPosition(e.matrixWorld),t.position.applyMatrix4(u),i++}else if(e.isHemisphereLight){const t=r.hemi[h];t.direction.setFromMatrixPosition(e.matrixWorld),t.direction.transformDirection(u),h++}}},state:r}}function Bs(t,e){const n=new zs(t,e),i=[],r=[];return{init:function(){i.length=0,r.length=0},state:{lightsArray:i,shadowsArray:r,lights:n},setupLights:function(t){n.setup(i,t)},setupLightsView:function(t){n.setupView(i,t)},pushLight:function(t){i.push(t)},pushShadow:function(t){r.push(t)}}}function Gs(t,e){let n=new WeakMap;return{get:function(i,r=0){const a=n.get(i);let s;return void 0===a?(s=new Bs(t,e),n.set(i,[s])):r>=a.length?(s=new Bs(t,e),a.push(s)):s=a[r],s},dispose:function(){n=new WeakMap}}}class Vs extends gi{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class Hs extends gi{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}function Xs(t,e,n){let i=new _r;const r=new ye,a=new ye,s=new Ve,o=new Vs({depthPacking:3201}),l=new Hs,c={},h=n.maxTextureSize,u={[ht]:ut,[ut]:ht,2:2},d=new nr({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ye},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),p=d.clone();p.defines.HORIZONTAL_PASS=1;const f=new Ui;f.setAttribute("position",new Si(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const m=new Ki(f,d),g=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=ot;let v=this.type;function _(n,i){const a=e.update(m);d.defines.VSM_SAMPLES!==n.blurSamples&&(d.defines.VSM_SAMPLES=n.blurSamples,p.defines.VSM_SAMPLES=n.blurSamples,d.needsUpdate=!0,p.needsUpdate=!0),null===n.mapPass&&(n.mapPass=new Xe(r.x,r.y)),d.uniforms.shadow_pass.value=n.map.texture,d.uniforms.resolution.value=n.mapSize,d.uniforms.radius.value=n.radius,t.setRenderTarget(n.mapPass),t.clear(),t.renderBufferDirect(i,null,a,d,m,null),p.uniforms.shadow_pass.value=n.mapPass.texture,p.uniforms.resolution.value=n.mapSize,p.uniforms.radius.value=n.radius,t.setRenderTarget(n.map),t.clear(),t.renderBufferDirect(i,null,a,p,m,null)}function x(e,n,i,r){let a=null;const s=!0===i.isPointLight?e.customDistanceMaterial:e.customDepthMaterial;if(void 0!==s)a=s;else if(a=!0===i.isPointLight?l:o,t.localClippingEnabled&&!0===n.clipShadows&&Array.isArray(n.clippingPlanes)&&0!==n.clippingPlanes.length||n.displacementMap&&0!==n.displacementScale||n.alphaMap&&n.alphaTest>0||n.map&&n.alphaTest>0){const t=a.uuid,e=n.uuid;let i=c[t];void 0===i&&(i={},c[t]=i);let r=i[e];void 0===r&&(r=a.clone(),i[e]=r,n.addEventListener("dispose",y)),a=r}if(a.visible=n.visible,a.wireframe=n.wireframe,a.side=r===ct?null!==n.shadowSide?n.shadowSide:n.side:null!==n.shadowSide?n.shadowSide:u[n.side],a.alphaMap=n.alphaMap,a.alphaTest=n.alphaTest,a.map=n.map,a.clipShadows=n.clipShadows,a.clippingPlanes=n.clippingPlanes,a.clipIntersection=n.clipIntersection,a.displacementMap=n.displacementMap,a.displacementScale=n.displacementScale,a.displacementBias=n.displacementBias,a.wireframeLinewidth=n.wireframeLinewidth,a.linewidth=n.linewidth,!0===i.isPointLight&&!0===a.isMeshDistanceMaterial){t.properties.get(a).light=i}return a}function S(n,r,a,s,o){if(!1===n.visible)return;if(n.layers.test(r.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&o===ct)&&(!n.frustumCulled||i.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,n.matrixWorld);const i=e.update(n),l=n.material;if(Array.isArray(l)){const e=i.groups;for(let c=0,h=e.length;c<h;c++){const h=e[c],u=l[h.materialIndex];if(u&&u.visible){const e=x(n,u,s,o);n.onBeforeShadow(t,n,r,a,i,e,h),t.renderBufferDirect(a,null,i,e,n,h),n.onAfterShadow(t,n,r,a,i,e,h)}}}else if(l.visible){const e=x(n,l,s,o);n.onBeforeShadow(t,n,r,a,i,e,null),t.renderBufferDirect(a,null,i,e,n,null),n.onAfterShadow(t,n,r,a,i,e,null)}}const l=n.children;for(let t=0,e=l.length;t<e;t++)S(l[t],r,a,s,o)}function y(t){t.target.removeEventListener("dispose",y);for(const e in c){const n=c[e],i=t.target.uuid;if(i in n){n[i].dispose(),delete n[i]}}}this.render=function(e,n,o){if(!1===g.enabled)return;if(!1===g.autoUpdate&&!1===g.needsUpdate)return;if(0===e.length)return;const l=t.getRenderTarget(),c=t.getActiveCubeFace(),u=t.getActiveMipmapLevel(),d=t.state;d.setBlending(0),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);const p=v!==ct&&this.type===ct,f=v===ct&&this.type!==ct;for(let m=0,g=e.length;m<g;m++){const l=e[m],c=l.shadow;if(void 0===c)continue;if(!1===c.autoUpdate&&!1===c.needsUpdate)continue;r.copy(c.mapSize);const u=c.getFrameExtents();if(r.multiply(u),a.copy(c.mapSize),(r.x>h||r.y>h)&&(r.x>h&&(a.x=Math.floor(h/u.x),r.x=a.x*u.x,c.mapSize.x=a.x),r.y>h&&(a.y=Math.floor(h/u.y),r.y=a.y*u.y,c.mapSize.y=a.y)),null===c.map||!0===p||!0===f){const t=this.type!==ct?{minFilter:Rt,magFilter:Rt}:{};null!==c.map&&c.map.dispose(),c.map=new Xe(r.x,r.y,t),c.map.texture.name=l.name+".shadowMap",c.camera.updateProjectionMatrix()}t.setRenderTarget(c.map),t.clear();const g=c.getViewportCount();for(let t=0;t<g;t++){const e=c.getViewport(t);s.set(a.x*e.x,a.y*e.y,a.x*e.z,a.y*e.w),d.viewport(s),c.updateMatrices(l,t),i=c.getFrustum(),S(n,o,c.camera,l,this.type)}!0!==c.isPointLightShadow&&this.type===ct&&_(c,o),c.needsUpdate=!1}v=this.type,g.needsUpdate=!1,t.setRenderTarget(l,c,u)}}function qs(t,e,n){const i=n.isWebGL2;const r=new function(){let e=!1;const n=new Ve;let i=null;const r=new Ve(0,0,0,0);return{setMask:function(n){i===n||e||(t.colorMask(n,n,n,n),i=n)},setLocked:function(t){e=t},setClear:function(e,i,a,s,o){!0===o&&(e*=s,i*=s,a*=s),n.set(e,i,a,s),!1===r.equals(n)&&(t.clearColor(e,i,a,s),r.copy(n))},reset:function(){e=!1,i=null,r.set(-1,0,0,0)}}},a=new function(){let e=!1,n=null,i=null,r=null;return{setTest:function(e){e?G(t.DEPTH_TEST):V(t.DEPTH_TEST)},setMask:function(i){n===i||e||(t.depthMask(i),n=i)},setFunc:function(e){if(i!==e){switch(e){case 0:t.depthFunc(t.NEVER);break;case 1:t.depthFunc(t.ALWAYS);break;case 2:t.depthFunc(t.LESS);break;case 3:default:t.depthFunc(t.LEQUAL);break;case 4:t.depthFunc(t.EQUAL);break;case 5:t.depthFunc(t.GEQUAL);break;case 6:t.depthFunc(t.GREATER);break;case 7:t.depthFunc(t.NOTEQUAL)}i=e}},setLocked:function(t){e=t},setClear:function(e){r!==e&&(t.clearDepth(e),r=e)},reset:function(){e=!1,n=null,i=null,r=null}}},s=new function(){let e=!1,n=null,i=null,r=null,a=null,s=null,o=null,l=null,c=null;return{setTest:function(n){e||(n?G(t.STENCIL_TEST):V(t.STENCIL_TEST))},setMask:function(i){n===i||e||(t.stencilMask(i),n=i)},setFunc:function(e,n,s){i===e&&r===n&&a===s||(t.stencilFunc(e,n,s),i=e,r=n,a=s)},setOp:function(e,n,i){s===e&&o===n&&l===i||(t.stencilOp(e,n,i),s=e,o=n,l=i)},setLocked:function(t){e=t},setClear:function(e){c!==e&&(t.clearStencil(e),c=e)},reset:function(){e=!1,n=null,i=null,r=null,a=null,s=null,o=null,l=null,c=null}}},o=new WeakMap,l=new WeakMap;let c={},h={},u=new WeakMap,d=[],p=null,f=!1,m=null,g=null,v=null,_=null,x=null,S=null,y=null,M=new pi(0,0,0),b=0,E=!1,T=null,w=null,A=null,C=null,R=null;const P=t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let U=!1,L=0;const W=t.getParameter(t.VERSION);-1!==W.indexOf("WebGL")?(L=parseFloat(/^WebGL (\d)/.exec(W)[1]),U=L>=1):-1!==W.indexOf("OpenGL ES")&&(L=parseFloat(/^OpenGL ES (\d)/.exec(W)[1]),U=L>=2);let N=null,I={};const O=t.getParameter(t.SCISSOR_BOX),D=t.getParameter(t.VIEWPORT),F=(new Ve).fromArray(O),k=(new Ve).fromArray(D);function z(e,n,r,a){const s=new Uint8Array(4),o=t.createTexture();t.bindTexture(e,o),t.texParameteri(e,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(e,t.TEXTURE_MAG_FILTER,t.NEAREST);for(let l=0;l<r;l++)!i||e!==t.TEXTURE_3D&&e!==t.TEXTURE_2D_ARRAY?t.texImage2D(n+l,0,t.RGBA,1,1,0,t.RGBA,t.UNSIGNED_BYTE,s):t.texImage3D(n,0,t.RGBA,1,1,a,0,t.RGBA,t.UNSIGNED_BYTE,s);return o}const B={};function G(e){!0!==c[e]&&(t.enable(e),c[e]=!0)}function V(e){!1!==c[e]&&(t.disable(e),c[e]=!1)}B[t.TEXTURE_2D]=z(t.TEXTURE_2D,t.TEXTURE_2D,1),B[t.TEXTURE_CUBE_MAP]=z(t.TEXTURE_CUBE_MAP,t.TEXTURE_CUBE_MAP_POSITIVE_X,6),i&&(B[t.TEXTURE_2D_ARRAY]=z(t.TEXTURE_2D_ARRAY,t.TEXTURE_2D_ARRAY,1,1),B[t.TEXTURE_3D]=z(t.TEXTURE_3D,t.TEXTURE_3D,1,1)),r.setClear(0,0,0,1),a.setClear(1),s.setClear(0),G(t.DEPTH_TEST),a.setFunc(3),j(!1),J(1),G(t.CULL_FACE),q(0);const H={[dt]:t.FUNC_ADD,101:t.FUNC_SUBTRACT,102:t.FUNC_REVERSE_SUBTRACT};if(i)H[103]=t.MIN,H[104]=t.MAX;else{const t=e.get("EXT_blend_minmax");null!==t&&(H[103]=t.MIN_EXT,H[104]=t.MAX_EXT)}const X={200:t.ZERO,201:t.ONE,202:t.SRC_COLOR,204:t.SRC_ALPHA,210:t.SRC_ALPHA_SATURATE,208:t.DST_COLOR,206:t.DST_ALPHA,203:t.ONE_MINUS_SRC_COLOR,205:t.ONE_MINUS_SRC_ALPHA,209:t.ONE_MINUS_DST_COLOR,207:t.ONE_MINUS_DST_ALPHA,211:t.CONSTANT_COLOR,212:t.ONE_MINUS_CONSTANT_COLOR,213:t.CONSTANT_ALPHA,214:t.ONE_MINUS_CONSTANT_ALPHA};function q(e,n,i,r,a,s,o,l,c,h){if(0!==e){if(!1===f&&(G(t.BLEND),f=!0),5===e)a=a||n,s=s||i,o=o||r,n===g&&a===x||(t.blendEquationSeparate(H[n],H[a]),g=n,x=a),i===v&&r===_&&s===S&&o===y||(t.blendFuncSeparate(X[i],X[r],X[s],X[o]),v=i,_=r,S=s,y=o),!1!==l.equals(M)&&c===b||(t.blendColor(l.r,l.g,l.b,c),M.copy(l),b=c),m=e,E=!1;else if(e!==m||h!==E){if(g===dt&&x===dt||(t.blendEquation(t.FUNC_ADD),g=dt,x=dt),h)switch(e){case 1:t.blendFuncSeparate(t.ONE,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA);break;case 2:t.blendFunc(t.ONE,t.ONE);break;case 3:t.blendFuncSeparate(t.ZERO,t.ONE_MINUS_SRC_COLOR,t.ZERO,t.ONE);break;case 4:t.blendFuncSeparate(t.ZERO,t.SRC_COLOR,t.ZERO,t.SRC_ALPHA)}else switch(e){case 1:t.blendFuncSeparate(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA);break;case 2:t.blendFunc(t.SRC_ALPHA,t.ONE);break;case 3:t.blendFuncSeparate(t.ZERO,t.ONE_MINUS_SRC_COLOR,t.ZERO,t.ONE);break;case 4:t.blendFunc(t.ZERO,t.SRC_COLOR)}v=null,_=null,S=null,y=null,M.set(0,0,0),b=0,m=e,E=h}}else!0===f&&(V(t.BLEND),f=!1)}function j(e){T!==e&&(e?t.frontFace(t.CW):t.frontFace(t.CCW),T=e)}function J(e){0!==e?(G(t.CULL_FACE),e!==w&&(1===e?t.cullFace(t.BACK):2===e?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):V(t.CULL_FACE),w=e}function K(e,n,i){e?(G(t.POLYGON_OFFSET_FILL),C===n&&R===i||(t.polygonOffset(n,i),C=n,R=i)):V(t.POLYGON_OFFSET_FILL)}return{buffers:{color:r,depth:a,stencil:s},enable:G,disable:V,bindFramebuffer:function(e,n){return h[e]!==n&&(t.bindFramebuffer(e,n),h[e]=n,i&&(e===t.DRAW_FRAMEBUFFER&&(h[t.FRAMEBUFFER]=n),e===t.FRAMEBUFFER&&(h[t.DRAW_FRAMEBUFFER]=n)),!0)},drawBuffers:function(i,r){let a=d,s=!1;if(i)if(a=u.get(r),void 0===a&&(a=[],u.set(r,a)),i.isWebGLMultipleRenderTargets){const e=i.texture;if(a.length!==e.length||a[0]!==t.COLOR_ATTACHMENT0){for(let n=0,i=e.length;n<i;n++)a[n]=t.COLOR_ATTACHMENT0+n;a.length=e.length,s=!0}}else a[0]!==t.COLOR_ATTACHMENT0&&(a[0]=t.COLOR_ATTACHMENT0,s=!0);else a[0]!==t.BACK&&(a[0]=t.BACK,s=!0);s&&(n.isWebGL2?t.drawBuffers(a):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(a))},useProgram:function(e){return p!==e&&(t.useProgram(e),p=e,!0)},setBlending:q,setMaterial:function(e,n){2===e.side?V(t.CULL_FACE):G(t.CULL_FACE);let i=e.side===ut;n&&(i=!i),j(i),1===e.blending&&!1===e.transparent?q(0):q(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.blendColor,e.blendAlpha,e.premultipliedAlpha),a.setFunc(e.depthFunc),a.setTest(e.depthTest),a.setMask(e.depthWrite),r.setMask(e.colorWrite);const o=e.stencilWrite;s.setTest(o),o&&(s.setMask(e.stencilWriteMask),s.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),s.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),K(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),!0===e.alphaToCoverage?G(t.SAMPLE_ALPHA_TO_COVERAGE):V(t.SAMPLE_ALPHA_TO_COVERAGE)},setFlipSided:j,setCullFace:J,setLineWidth:function(e){e!==A&&(U&&t.lineWidth(e),A=e)},setPolygonOffset:K,setScissorTest:function(e){e?G(t.SCISSOR_TEST):V(t.SCISSOR_TEST)},activeTexture:function(e){void 0===e&&(e=t.TEXTURE0+P-1),N!==e&&(t.activeTexture(e),N=e)},bindTexture:function(e,n,i){void 0===i&&(i=null===N?t.TEXTURE0+P-1:N);let r=I[i];void 0===r&&(r={type:void 0,texture:void 0},I[i]=r),r.type===e&&r.texture===n||(N!==i&&(t.activeTexture(i),N=i),t.bindTexture(e,n||B[e]),r.type=e,r.texture=n)},unbindTexture:function(){const e=I[N];void 0!==e&&void 0!==e.type&&(t.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{t.compressedTexImage2D.apply(t,arguments)}catch(e){}},compressedTexImage3D:function(){try{t.compressedTexImage3D.apply(t,arguments)}catch(e){}},texImage2D:function(){try{t.texImage2D.apply(t,arguments)}catch(e){}},texImage3D:function(){try{t.texImage3D.apply(t,arguments)}catch(e){}},updateUBOMapping:function(e,n){let i=l.get(n);void 0===i&&(i=new WeakMap,l.set(n,i));let r=i.get(e);void 0===r&&(r=t.getUniformBlockIndex(n,e.name),i.set(e,r))},uniformBlockBinding:function(e,n){const i=l.get(n).get(e);o.get(n)!==i&&(t.uniformBlockBinding(n,i,e.__bindingPointIndex),o.set(n,i))},texStorage2D:function(){try{t.texStorage2D.apply(t,arguments)}catch(e){}},texStorage3D:function(){try{t.texStorage3D.apply(t,arguments)}catch(e){}},texSubImage2D:function(){try{t.texSubImage2D.apply(t,arguments)}catch(e){}},texSubImage3D:function(){try{t.texSubImage3D.apply(t,arguments)}catch(e){}},compressedTexSubImage2D:function(){try{t.compressedTexSubImage2D.apply(t,arguments)}catch(e){}},compressedTexSubImage3D:function(){try{t.compressedTexSubImage3D.apply(t,arguments)}catch(e){}},scissor:function(e){!1===F.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),F.copy(e))},viewport:function(e){!1===k.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),k.copy(e))},reset:function(){t.disable(t.BLEND),t.disable(t.CULL_FACE),t.disable(t.DEPTH_TEST),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SCISSOR_TEST),t.disable(t.STENCIL_TEST),t.disable(t.SAMPLE_ALPHA_TO_COVERAGE),t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ONE,t.ZERO),t.blendFuncSeparate(t.ONE,t.ZERO,t.ONE,t.ZERO),t.blendColor(0,0,0,0),t.colorMask(!0,!0,!0,!0),t.clearColor(0,0,0,0),t.depthMask(!0),t.depthFunc(t.LESS),t.clearDepth(1),t.stencilMask(4294967295),t.stencilFunc(t.ALWAYS,0,4294967295),t.stencilOp(t.KEEP,t.KEEP,t.KEEP),t.clearStencil(0),t.cullFace(t.BACK),t.frontFace(t.CCW),t.polygonOffset(0,0),t.activeTexture(t.TEXTURE0),t.bindFramebuffer(t.FRAMEBUFFER,null),!0===i&&(t.bindFramebuffer(t.DRAW_FRAMEBUFFER,null),t.bindFramebuffer(t.READ_FRAMEBUFFER,null)),t.useProgram(null),t.lineWidth(1),t.scissor(0,0,t.canvas.width,t.canvas.height),t.viewport(0,0,t.canvas.width,t.canvas.height),c={},N=null,I={},h={},u=new WeakMap,d=[],p=null,f=!1,m=null,g=null,v=null,_=null,x=null,S=null,y=null,M=new pi(0,0,0),b=0,E=!1,T=null,w=null,A=null,C=null,R=null,F.set(0,0,t.canvas.width,t.canvas.height),k.set(0,0,t.canvas.width,t.canvas.height),r.reset(),a.reset(),s.reset()}}}function js(t,e,n,i,r,a,s){const o=r.isWebGL2,l=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,c="undefined"!=typeof navigator&&/OculusBrowser/g.test(navigator.userAgent),h=new WeakMap;let u;const d=new WeakMap;let p=!1;try{p="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(k){}function f(t,e){return p?new OffscreenCanvas(t,e):Te("canvas")}function m(t,e,n,i){let r=1;if((t.width>i||t.height>i)&&(r=i/Math.max(t.width,t.height)),r<1||!0===e){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const i=e?_e:Math.floor,a=i(r*t.width),s=i(r*t.height);void 0===u&&(u=f(a,s));const o=n?f(a,s):u;o.width=a,o.height=s;return o.getContext("2d").drawImage(t,0,0,a,s),o}return t}return t}function g(t){return ve(t.width)&&ve(t.height)}function v(t,e){return t.generateMipmaps&&e&&t.minFilter!==Rt&&t.minFilter!==Ut}function _(e){t.generateMipmap(e)}function x(n,i,r,a,s=!1){if(!1===o)return i;if(null!==n&&void 0!==t[n])return t[n];let l=i;if(i===t.RED&&(r===t.FLOAT&&(l=t.R32F),r===t.HALF_FLOAT&&(l=t.R16F),r===t.UNSIGNED_BYTE&&(l=t.R8)),i===t.RED_INTEGER&&(r===t.UNSIGNED_BYTE&&(l=t.R8UI),r===t.UNSIGNED_SHORT&&(l=t.R16UI),r===t.UNSIGNED_INT&&(l=t.R32UI),r===t.BYTE&&(l=t.R8I),r===t.SHORT&&(l=t.R16I),r===t.INT&&(l=t.R32I)),i===t.RG&&(r===t.FLOAT&&(l=t.RG32F),r===t.HALF_FLOAT&&(l=t.RG16F),r===t.UNSIGNED_BYTE&&(l=t.RG8)),i===t.RGBA){const e=s?ee:We.getTransfer(a);r===t.FLOAT&&(l=t.RGBA32F),r===t.HALF_FLOAT&&(l=t.RGBA16F),r===t.UNSIGNED_BYTE&&(l=e===ne?t.SRGB8_ALPHA8:t.RGBA8),r===t.UNSIGNED_SHORT_4_4_4_4&&(l=t.RGBA4),r===t.UNSIGNED_SHORT_5_5_5_1&&(l=t.RGB5_A1)}return l!==t.R16F&&l!==t.R32F&&l!==t.RG16F&&l!==t.RG32F&&l!==t.RGBA16F&&l!==t.RGBA32F||e.get("EXT_color_buffer_float"),l}function S(t,e,n){return!0===v(t,n)||t.isFramebufferTexture&&t.minFilter!==Rt&&t.minFilter!==Ut?Math.log2(Math.max(e.width,e.height))+1:void 0!==t.mipmaps&&t.mipmaps.length>0?t.mipmaps.length:t.isCompressedTexture&&Array.isArray(t.image)?e.mipmaps.length:1}function y(e){return e===Rt||1004===e||e===Pt?t.NEAREST:t.LINEAR}function M(t){const e=t.target;e.removeEventListener("dispose",M),function(t){const e=i.get(t);if(void 0===e.__webglInit)return;const n=t.source,r=d.get(n);if(r){const i=r[e.__cacheKey];i.usedTimes--,0===i.usedTimes&&E(t),0===Object.keys(r).length&&d.delete(n)}i.remove(t)}(e),e.isVideoTexture&&h.delete(e)}function b(e){const n=e.target;n.removeEventListener("dispose",b),function(e){const n=e.texture,r=i.get(e),a=i.get(n);void 0!==a.__webglTexture&&(t.deleteTexture(a.__webglTexture),s.memory.textures--);e.depthTexture&&e.depthTexture.dispose();if(e.isWebGLCubeRenderTarget)for(let i=0;i<6;i++){if(Array.isArray(r.__webglFramebuffer[i]))for(let e=0;e<r.__webglFramebuffer[i].length;e++)t.deleteFramebuffer(r.__webglFramebuffer[i][e]);else t.deleteFramebuffer(r.__webglFramebuffer[i]);r.__webglDepthbuffer&&t.deleteRenderbuffer(r.__webglDepthbuffer[i])}else{if(Array.isArray(r.__webglFramebuffer))for(let e=0;e<r.__webglFramebuffer.length;e++)t.deleteFramebuffer(r.__webglFramebuffer[e]);else t.deleteFramebuffer(r.__webglFramebuffer);if(r.__webglDepthbuffer&&t.deleteRenderbuffer(r.__webglDepthbuffer),r.__webglMultisampledFramebuffer&&t.deleteFramebuffer(r.__webglMultisampledFramebuffer),r.__webglColorRenderbuffer)for(let e=0;e<r.__webglColorRenderbuffer.length;e++)r.__webglColorRenderbuffer[e]&&t.deleteRenderbuffer(r.__webglColorRenderbuffer[e]);r.__webglDepthRenderbuffer&&t.deleteRenderbuffer(r.__webglDepthRenderbuffer)}if(e.isWebGLMultipleRenderTargets)for(let o=0,l=n.length;o<l;o++){const e=i.get(n[o]);e.__webglTexture&&(t.deleteTexture(e.__webglTexture),s.memory.textures--),i.remove(n[o])}i.remove(n),i.remove(e)}(n)}function E(e){const n=i.get(e);t.deleteTexture(n.__webglTexture);const r=e.source;delete d.get(r)[n.__cacheKey],s.memory.textures--}let T=0;function w(e,r){const a=i.get(e);if(e.isVideoTexture&&function(t){const e=s.render.frame;h.get(t)!==e&&(h.set(t,e),t.update())}(e),!1===e.isRenderTargetTexture&&e.version>0&&a.__version!==e.version){const t=e.image;if(null===t);else if(!1!==t.complete)return void L(a,e,r)}n.bindTexture(t.TEXTURE_2D,a.__webglTexture,t.TEXTURE0+r)}const A={[wt]:t.REPEAT,[At]:t.CLAMP_TO_EDGE,[Ct]:t.MIRRORED_REPEAT},C={[Rt]:t.NEAREST,1004:t.NEAREST_MIPMAP_NEAREST,[Pt]:t.NEAREST_MIPMAP_LINEAR,[Ut]:t.LINEAR,[Lt]:t.LINEAR_MIPMAP_NEAREST,[Wt]:t.LINEAR_MIPMAP_LINEAR},R={512:t.NEVER,519:t.ALWAYS,513:t.LESS,515:t.LEQUAL,514:t.EQUAL,518:t.GEQUAL,516:t.GREATER,517:t.NOTEQUAL};function P(n,a,s){if(a.type===Ft&&!1===e.has("OES_texture_float_linear")&&(a.magFilter===Ut||a.magFilter===Lt||a.magFilter===Pt||a.magFilter===Wt||a.minFilter===Ut||a.minFilter===Lt||a.minFilter===Pt||a.minFilter),s?(t.texParameteri(n,t.TEXTURE_WRAP_S,A[a.wrapS]),t.texParameteri(n,t.TEXTURE_WRAP_T,A[a.wrapT]),n!==t.TEXTURE_3D&&n!==t.TEXTURE_2D_ARRAY||t.texParameteri(n,t.TEXTURE_WRAP_R,A[a.wrapR]),t.texParameteri(n,t.TEXTURE_MAG_FILTER,C[a.magFilter]),t.texParameteri(n,t.TEXTURE_MIN_FILTER,C[a.minFilter])):(t.texParameteri(n,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(n,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),n!==t.TEXTURE_3D&&n!==t.TEXTURE_2D_ARRAY||t.texParameteri(n,t.TEXTURE_WRAP_R,t.CLAMP_TO_EDGE),a.wrapS!==At||a.wrapT,t.texParameteri(n,t.TEXTURE_MAG_FILTER,y(a.magFilter)),t.texParameteri(n,t.TEXTURE_MIN_FILTER,y(a.minFilter)),a.minFilter!==Rt&&a.minFilter),a.compareFunction&&(t.texParameteri(n,t.TEXTURE_COMPARE_MODE,t.COMPARE_REF_TO_TEXTURE),t.texParameteri(n,t.TEXTURE_COMPARE_FUNC,R[a.compareFunction])),!0===e.has("EXT_texture_filter_anisotropic")){const s=e.get("EXT_texture_filter_anisotropic");if(a.magFilter===Rt)return;if(a.minFilter!==Pt&&a.minFilter!==Wt)return;if(a.type===Ft&&!1===e.has("OES_texture_float_linear"))return;if(!1===o&&a.type===kt&&!1===e.has("OES_texture_half_float_linear"))return;(a.anisotropy>1||i.get(a).__currentAnisotropy)&&(t.texParameterf(n,s.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a.anisotropy,r.getMaxAnisotropy())),i.get(a).__currentAnisotropy=a.anisotropy)}}function U(e,n){let i=!1;void 0===e.__webglInit&&(e.__webglInit=!0,n.addEventListener("dispose",M));const r=n.source;let a=d.get(r);void 0===a&&(a={},d.set(r,a));const o=function(t){const e=[];return e.push(t.wrapS),e.push(t.wrapT),e.push(t.wrapR||0),e.push(t.magFilter),e.push(t.minFilter),e.push(t.anisotropy),e.push(t.internalFormat),e.push(t.format),e.push(t.type),e.push(t.generateMipmaps),e.push(t.premultiplyAlpha),e.push(t.flipY),e.push(t.unpackAlignment),e.push(t.colorSpace),e.join()}(n);if(o!==e.__cacheKey){void 0===a[o]&&(a[o]={texture:t.createTexture(),usedTimes:0},s.memory.textures++,i=!0),a[o].usedTimes++;const r=a[e.__cacheKey];void 0!==r&&(a[e.__cacheKey].usedTimes--,0===r.usedTimes&&E(n)),e.__cacheKey=o,e.__webglTexture=a[o].texture}return i}function L(e,s,l){let c=t.TEXTURE_2D;(s.isDataArrayTexture||s.isCompressedArrayTexture)&&(c=t.TEXTURE_2D_ARRAY),s.isData3DTexture&&(c=t.TEXTURE_3D);const h=U(e,s),u=s.source;n.bindTexture(c,e.__webglTexture,t.TEXTURE0+l);const d=i.get(u);if(u.version!==d.__version||!0===h){n.activeTexture(t.TEXTURE0+l);const e=We.getPrimaries(We.workingColorSpace),i=s.colorSpace===Qt?null:We.getPrimaries(s.colorSpace),p=s.colorSpace===Qt||e===i?t.NONE:t.BROWSER_DEFAULT_WEBGL;t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,s.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,s.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,s.unpackAlignment),t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL,p);const f=function(t){return!o&&(t.wrapS!==At||t.wrapT!==At||t.minFilter!==Rt&&t.minFilter!==Ut)}(s)&&!1===g(s.image);let y=m(s.image,f,!1,r.maxTextureSize);y=F(s,y);const M=g(y)||o,b=a.convert(s.format,s.colorSpace);let E,T=a.convert(s.type),w=x(s.internalFormat,b,T,s.colorSpace,s.isVideoTexture);P(c,s,M);const A=s.mipmaps,C=o&&!0!==s.isVideoTexture&&36196!==w,R=void 0===d.__version||!0===h,U=u.dataReady,L=S(s,y,M);if(s.isDepthTexture)w=t.DEPTH_COMPONENT,o?w=s.type===Ft?t.DEPTH_COMPONENT32F:s.type===Dt?t.DEPTH_COMPONENT24:s.type===zt?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT16:s.type,s.format===Gt&&w===t.DEPTH_COMPONENT&&s.type!==It&&s.type!==Dt&&(s.type=Dt,T=a.convert(s.type)),s.format===Vt&&w===t.DEPTH_COMPONENT&&(w=t.DEPTH_STENCIL,s.type!==zt&&(s.type=zt,T=a.convert(s.type))),R&&(C?n.texStorage2D(t.TEXTURE_2D,1,w,y.width,y.height):n.texImage2D(t.TEXTURE_2D,0,w,y.width,y.height,0,b,T,null));else if(s.isDataTexture)if(A.length>0&&M){C&&R&&n.texStorage2D(t.TEXTURE_2D,L,w,A[0].width,A[0].height);for(let e=0,i=A.length;e<i;e++)E=A[e],C?U&&n.texSubImage2D(t.TEXTURE_2D,e,0,0,E.width,E.height,b,T,E.data):n.texImage2D(t.TEXTURE_2D,e,w,E.width,E.height,0,b,T,E.data);s.generateMipmaps=!1}else C?(R&&n.texStorage2D(t.TEXTURE_2D,L,w,y.width,y.height),U&&n.texSubImage2D(t.TEXTURE_2D,0,0,0,y.width,y.height,b,T,y.data)):n.texImage2D(t.TEXTURE_2D,0,w,y.width,y.height,0,b,T,y.data);else if(s.isCompressedTexture)if(s.isCompressedArrayTexture){C&&R&&n.texStorage3D(t.TEXTURE_2D_ARRAY,L,w,A[0].width,A[0].height,y.depth);for(let e=0,i=A.length;e<i;e++)E=A[e],s.format!==Bt?null!==b&&(C?U&&n.compressedTexSubImage3D(t.TEXTURE_2D_ARRAY,e,0,0,0,E.width,E.height,y.depth,b,E.data,0,0):n.compressedTexImage3D(t.TEXTURE_2D_ARRAY,e,w,E.width,E.height,y.depth,0,E.data,0,0)):C?U&&n.texSubImage3D(t.TEXTURE_2D_ARRAY,e,0,0,0,E.width,E.height,y.depth,b,T,E.data):n.texImage3D(t.TEXTURE_2D_ARRAY,e,w,E.width,E.height,y.depth,0,b,T,E.data)}else{C&&R&&n.texStorage2D(t.TEXTURE_2D,L,w,A[0].width,A[0].height);for(let e=0,i=A.length;e<i;e++)E=A[e],s.format!==Bt?null!==b&&(C?U&&n.compressedTexSubImage2D(t.TEXTURE_2D,e,0,0,E.width,E.height,b,E.data):n.compressedTexImage2D(t.TEXTURE_2D,e,w,E.width,E.height,0,E.data)):C?U&&n.texSubImage2D(t.TEXTURE_2D,e,0,0,E.width,E.height,b,T,E.data):n.texImage2D(t.TEXTURE_2D,e,w,E.width,E.height,0,b,T,E.data)}else if(s.isDataArrayTexture)C?(R&&n.texStorage3D(t.TEXTURE_2D_ARRAY,L,w,y.width,y.height,y.depth),U&&n.texSubImage3D(t.TEXTURE_2D_ARRAY,0,0,0,0,y.width,y.height,y.depth,b,T,y.data)):n.texImage3D(t.TEXTURE_2D_ARRAY,0,w,y.width,y.height,y.depth,0,b,T,y.data);else if(s.isData3DTexture)C?(R&&n.texStorage3D(t.TEXTURE_3D,L,w,y.width,y.height,y.depth),U&&n.texSubImage3D(t.TEXTURE_3D,0,0,0,0,y.width,y.height,y.depth,b,T,y.data)):n.texImage3D(t.TEXTURE_3D,0,w,y.width,y.height,y.depth,0,b,T,y.data);else if(s.isFramebufferTexture){if(R)if(C)n.texStorage2D(t.TEXTURE_2D,L,w,y.width,y.height);else{let e=y.width,i=y.height;for(let r=0;r<L;r++)n.texImage2D(t.TEXTURE_2D,r,w,e,i,0,b,T,null),e>>=1,i>>=1}}else if(A.length>0&&M){C&&R&&n.texStorage2D(t.TEXTURE_2D,L,w,A[0].width,A[0].height);for(let e=0,i=A.length;e<i;e++)E=A[e],C?U&&n.texSubImage2D(t.TEXTURE_2D,e,0,0,b,T,E):n.texImage2D(t.TEXTURE_2D,e,w,b,T,E);s.generateMipmaps=!1}else C?(R&&n.texStorage2D(t.TEXTURE_2D,L,w,y.width,y.height),U&&n.texSubImage2D(t.TEXTURE_2D,0,0,0,b,T,y)):n.texImage2D(t.TEXTURE_2D,0,w,b,T,y);v(s,M)&&_(c),d.__version=u.version,s.onUpdate&&s.onUpdate(s)}e.__version=s.version}function W(e,r,s,o,c,h){const u=a.convert(s.format,s.colorSpace),d=a.convert(s.type),p=x(s.internalFormat,u,d,s.colorSpace);if(!i.get(r).__hasExternalTextures){const e=Math.max(1,r.width>>h),i=Math.max(1,r.height>>h);c===t.TEXTURE_3D||c===t.TEXTURE_2D_ARRAY?n.texImage3D(c,h,p,e,i,r.depth,0,u,d,null):n.texImage2D(c,h,p,e,i,0,u,d,null)}n.bindFramebuffer(t.FRAMEBUFFER,e),D(r)?l.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,o,c,i.get(s).__webglTexture,0,O(r)):(c===t.TEXTURE_2D||c>=t.TEXTURE_CUBE_MAP_POSITIVE_X&&c<=t.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&t.framebufferTexture2D(t.FRAMEBUFFER,o,c,i.get(s).__webglTexture,h),n.bindFramebuffer(t.FRAMEBUFFER,null)}function N(e,n,i){if(t.bindRenderbuffer(t.RENDERBUFFER,e),n.depthBuffer&&!n.stencilBuffer){let r=!0===o?t.DEPTH_COMPONENT24:t.DEPTH_COMPONENT16;if(i||D(n)){const e=n.depthTexture;e&&e.isDepthTexture&&(e.type===Ft?r=t.DEPTH_COMPONENT32F:e.type===Dt&&(r=t.DEPTH_COMPONENT24));const i=O(n);D(n)?l.renderbufferStorageMultisampleEXT(t.RENDERBUFFER,i,r,n.width,n.height):t.renderbufferStorageMultisample(t.RENDERBUFFER,i,r,n.width,n.height)}else t.renderbufferStorage(t.RENDERBUFFER,r,n.width,n.height);t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,e)}else if(n.depthBuffer&&n.stencilBuffer){const r=O(n);i&&!1===D(n)?t.renderbufferStorageMultisample(t.RENDERBUFFER,r,t.DEPTH24_STENCIL8,n.width,n.height):D(n)?l.renderbufferStorageMultisampleEXT(t.RENDERBUFFER,r,t.DEPTH24_STENCIL8,n.width,n.height):t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_STENCIL,n.width,n.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.RENDERBUFFER,e)}else{const e=!0===n.isWebGLMultipleRenderTargets?n.texture:[n.texture];for(let r=0;r<e.length;r++){const s=e[r],o=a.convert(s.format,s.colorSpace),c=a.convert(s.type),h=x(s.internalFormat,o,c,s.colorSpace),u=O(n);i&&!1===D(n)?t.renderbufferStorageMultisample(t.RENDERBUFFER,u,h,n.width,n.height):D(n)?l.renderbufferStorageMultisampleEXT(t.RENDERBUFFER,u,h,n.width,n.height):t.renderbufferStorage(t.RENDERBUFFER,h,n.width,n.height)}}t.bindRenderbuffer(t.RENDERBUFFER,null)}function I(e){const r=i.get(e),a=!0===e.isWebGLCubeRenderTarget;if(e.depthTexture&&!r.__autoAllocateDepthBuffer){if(a)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,r){if(r&&r.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(t.FRAMEBUFFER,e),!r.depthTexture||!r.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");i.get(r.depthTexture).__webglTexture&&r.depthTexture.image.width===r.width&&r.depthTexture.image.height===r.height||(r.depthTexture.image.width=r.width,r.depthTexture.image.height=r.height,r.depthTexture.needsUpdate=!0),w(r.depthTexture,0);const a=i.get(r.depthTexture).__webglTexture,s=O(r);if(r.depthTexture.format===Gt)D(r)?l.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,a,0,s):t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,a,0);else{if(r.depthTexture.format!==Vt)throw new Error("Unknown depthTexture format");D(r)?l.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,a,0,s):t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,a,0)}}(r.__webglFramebuffer,e)}else if(a){r.__webglDepthbuffer=[];for(let i=0;i<6;i++)n.bindFramebuffer(t.FRAMEBUFFER,r.__webglFramebuffer[i]),r.__webglDepthbuffer[i]=t.createRenderbuffer(),N(r.__webglDepthbuffer[i],e,!1)}else n.bindFramebuffer(t.FRAMEBUFFER,r.__webglFramebuffer),r.__webglDepthbuffer=t.createRenderbuffer(),N(r.__webglDepthbuffer,e,!1);n.bindFramebuffer(t.FRAMEBUFFER,null)}function O(t){return Math.min(r.maxSamples,t.samples)}function D(t){const n=i.get(t);return o&&t.samples>0&&!0===e.has("WEBGL_multisampled_render_to_texture")&&!1!==n.__useRenderToTexture}function F(t,n){const i=t.colorSpace,r=t.format;t.type;return!0===t.isCompressedTexture||!0===t.isVideoTexture||t.format===oe||i!==Yt&&i!==Qt&&We.getTransfer(i)===ne&&!1===o&&(!0===e.has("EXT_sRGB")&&r===Bt?(t.format=oe,t.minFilter=Ut,t.generateMipmaps=!1):n=De.sRGBToLinear(n)),n}this.allocateTextureUnit=function(){const t=T;return r.maxTextures,T+=1,t},this.resetTextureUnits=function(){T=0},this.setTexture2D=w,this.setTexture2DArray=function(e,r){const a=i.get(e);e.version>0&&a.__version!==e.version?L(a,e,r):n.bindTexture(t.TEXTURE_2D_ARRAY,a.__webglTexture,t.TEXTURE0+r)},this.setTexture3D=function(e,r){const a=i.get(e);e.version>0&&a.__version!==e.version?L(a,e,r):n.bindTexture(t.TEXTURE_3D,a.__webglTexture,t.TEXTURE0+r)},this.setTextureCube=function(e,s){const l=i.get(e);e.version>0&&l.__version!==e.version?function(e,s,l){if(6!==s.image.length)return;const c=U(e,s),h=s.source;n.bindTexture(t.TEXTURE_CUBE_MAP,e.__webglTexture,t.TEXTURE0+l);const u=i.get(h);if(h.version!==u.__version||!0===c){n.activeTexture(t.TEXTURE0+l);const e=We.getPrimaries(We.workingColorSpace),i=s.colorSpace===Qt?null:We.getPrimaries(s.colorSpace),d=s.colorSpace===Qt||e===i?t.NONE:t.BROWSER_DEFAULT_WEBGL;t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,s.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,s.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,s.unpackAlignment),t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL,d);const p=s.isCompressedTexture||s.image[0].isCompressedTexture,f=s.image[0]&&s.image[0].isDataTexture,y=[];for(let t=0;t<6;t++)y[t]=p||f?f?s.image[t].image:s.image[t]:m(s.image[t],!1,!0,r.maxCubemapSize),y[t]=F(s,y[t]);const M=y[0],b=g(M)||o,E=a.convert(s.format,s.colorSpace),T=a.convert(s.type),w=x(s.internalFormat,E,T,s.colorSpace),A=o&&!0!==s.isVideoTexture,C=void 0===u.__version||!0===c,R=h.dataReady;let U,L=S(s,M,b);if(P(t.TEXTURE_CUBE_MAP,s,b),p){A&&C&&n.texStorage2D(t.TEXTURE_CUBE_MAP,L,w,M.width,M.height);for(let e=0;e<6;e++){U=y[e].mipmaps;for(let i=0;i<U.length;i++){const r=U[i];s.format!==Bt?null!==E&&(A?R&&n.compressedTexSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i,0,0,r.width,r.height,E,r.data):n.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i,w,r.width,r.height,0,r.data)):A?R&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i,0,0,r.width,r.height,E,T,r.data):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i,w,r.width,r.height,0,E,T,r.data)}}}else{U=s.mipmaps,A&&C&&(U.length>0&&L++,n.texStorage2D(t.TEXTURE_CUBE_MAP,L,w,y[0].width,y[0].height));for(let e=0;e<6;e++)if(f){A?R&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,0,0,y[e].width,y[e].height,E,T,y[e].data):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,w,y[e].width,y[e].height,0,E,T,y[e].data);for(let i=0;i<U.length;i++){const r=U[i].image[e].image;A?R&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i+1,0,0,r.width,r.height,E,T,r.data):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i+1,w,r.width,r.height,0,E,T,r.data)}}else{A?R&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,0,0,E,T,y[e]):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,w,E,T,y[e]);for(let i=0;i<U.length;i++){const r=U[i];A?R&&n.texSubImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i+1,0,0,E,T,r.image[e]):n.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+e,i+1,w,E,T,r.image[e])}}}v(s,b)&&_(t.TEXTURE_CUBE_MAP),u.__version=h.version,s.onUpdate&&s.onUpdate(s)}e.__version=s.version}(l,e,s):n.bindTexture(t.TEXTURE_CUBE_MAP,l.__webglTexture,t.TEXTURE0+s)},this.rebindTextures=function(e,n,r){const a=i.get(e);void 0!==n&&W(a.__webglFramebuffer,e,e.texture,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,0),void 0!==r&&I(e)},this.setupRenderTarget=function(e){const l=e.texture,c=i.get(e),h=i.get(l);e.addEventListener("dispose",b),!0!==e.isWebGLMultipleRenderTargets&&(void 0===h.__webglTexture&&(h.__webglTexture=t.createTexture()),h.__version=l.version,s.memory.textures++);const u=!0===e.isWebGLCubeRenderTarget,d=!0===e.isWebGLMultipleRenderTargets,p=g(e)||o;if(u){c.__webglFramebuffer=[];for(let e=0;e<6;e++)if(o&&l.mipmaps&&l.mipmaps.length>0){c.__webglFramebuffer[e]=[];for(let n=0;n<l.mipmaps.length;n++)c.__webglFramebuffer[e][n]=t.createFramebuffer()}else c.__webglFramebuffer[e]=t.createFramebuffer()}else{if(o&&l.mipmaps&&l.mipmaps.length>0){c.__webglFramebuffer=[];for(let e=0;e<l.mipmaps.length;e++)c.__webglFramebuffer[e]=t.createFramebuffer()}else c.__webglFramebuffer=t.createFramebuffer();if(d&&r.drawBuffers){const n=e.texture;for(let e=0,r=n.length;e<r;e++){const r=i.get(n[e]);void 0===r.__webglTexture&&(r.__webglTexture=t.createTexture(),s.memory.textures++)}}if(o&&e.samples>0&&!1===D(e)){const i=d?l:[l];c.__webglMultisampledFramebuffer=t.createFramebuffer(),c.__webglColorRenderbuffer=[],n.bindFramebuffer(t.FRAMEBUFFER,c.__webglMultisampledFramebuffer);for(let n=0;n<i.length;n++){const r=i[n];c.__webglColorRenderbuffer[n]=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,c.__webglColorRenderbuffer[n]);const s=a.convert(r.format,r.colorSpace),o=a.convert(r.type),l=x(r.internalFormat,s,o,r.colorSpace,!0===e.isXRRenderTarget),h=O(e);t.renderbufferStorageMultisample(t.RENDERBUFFER,h,l,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+n,t.RENDERBUFFER,c.__webglColorRenderbuffer[n])}t.bindRenderbuffer(t.RENDERBUFFER,null),e.depthBuffer&&(c.__webglDepthRenderbuffer=t.createRenderbuffer(),N(c.__webglDepthRenderbuffer,e,!0)),n.bindFramebuffer(t.FRAMEBUFFER,null)}}if(u){n.bindTexture(t.TEXTURE_CUBE_MAP,h.__webglTexture),P(t.TEXTURE_CUBE_MAP,l,p);for(let n=0;n<6;n++)if(o&&l.mipmaps&&l.mipmaps.length>0)for(let i=0;i<l.mipmaps.length;i++)W(c.__webglFramebuffer[n][i],e,l,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+n,i);else W(c.__webglFramebuffer[n],e,l,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+n,0);v(l,p)&&_(t.TEXTURE_CUBE_MAP),n.unbindTexture()}else if(d){const r=e.texture;for(let a=0,s=r.length;a<s;a++){const s=r[a],o=i.get(s);n.bindTexture(t.TEXTURE_2D,o.__webglTexture),P(t.TEXTURE_2D,s,p),W(c.__webglFramebuffer,e,s,t.COLOR_ATTACHMENT0+a,t.TEXTURE_2D,0),v(s,p)&&_(t.TEXTURE_2D)}n.unbindTexture()}else{let i=t.TEXTURE_2D;if((e.isWebGL3DRenderTarget||e.isWebGLArrayRenderTarget)&&o&&(i=e.isWebGL3DRenderTarget?t.TEXTURE_3D:t.TEXTURE_2D_ARRAY),n.bindTexture(i,h.__webglTexture),P(i,l,p),o&&l.mipmaps&&l.mipmaps.length>0)for(let n=0;n<l.mipmaps.length;n++)W(c.__webglFramebuffer[n],e,l,t.COLOR_ATTACHMENT0,i,n);else W(c.__webglFramebuffer,e,l,t.COLOR_ATTACHMENT0,i,0);v(l,p)&&_(i),n.unbindTexture()}e.depthBuffer&&I(e)},this.updateRenderTargetMipmap=function(e){const r=g(e)||o,a=!0===e.isWebGLMultipleRenderTargets?e.texture:[e.texture];for(let s=0,o=a.length;s<o;s++){const o=a[s];if(v(o,r)){const r=e.isWebGLCubeRenderTarget?t.TEXTURE_CUBE_MAP:t.TEXTURE_2D,a=i.get(o).__webglTexture;n.bindTexture(r,a),_(r),n.unbindTexture()}}},this.updateMultisampleRenderTarget=function(e){if(o&&e.samples>0&&!1===D(e)){const r=e.isWebGLMultipleRenderTargets?e.texture:[e.texture],a=e.width,s=e.height;let o=t.COLOR_BUFFER_BIT;const l=[],h=e.stencilBuffer?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT,u=i.get(e),d=!0===e.isWebGLMultipleRenderTargets;if(d)for(let e=0;e<r.length;e++)n.bindFramebuffer(t.FRAMEBUFFER,u.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.RENDERBUFFER,null),n.bindFramebuffer(t.FRAMEBUFFER,u.__webglFramebuffer),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.TEXTURE_2D,null,0);n.bindFramebuffer(t.READ_FRAMEBUFFER,u.__webglMultisampledFramebuffer),n.bindFramebuffer(t.DRAW_FRAMEBUFFER,u.__webglFramebuffer);for(let n=0;n<r.length;n++){l.push(t.COLOR_ATTACHMENT0+n),e.depthBuffer&&l.push(h);const p=void 0!==u.__ignoreDepthValues&&u.__ignoreDepthValues;if(!1===p&&(e.depthBuffer&&(o|=t.DEPTH_BUFFER_BIT),e.stencilBuffer&&(o|=t.STENCIL_BUFFER_BIT)),d&&t.framebufferRenderbuffer(t.READ_FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.RENDERBUFFER,u.__webglColorRenderbuffer[n]),!0===p&&(t.invalidateFramebuffer(t.READ_FRAMEBUFFER,[h]),t.invalidateFramebuffer(t.DRAW_FRAMEBUFFER,[h])),d){const e=i.get(r[n]).__webglTexture;t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)}t.blitFramebuffer(0,0,a,s,0,0,a,s,o,t.NEAREST),c&&t.invalidateFramebuffer(t.READ_FRAMEBUFFER,l)}if(n.bindFramebuffer(t.READ_FRAMEBUFFER,null),n.bindFramebuffer(t.DRAW_FRAMEBUFFER,null),d)for(let e=0;e<r.length;e++){n.bindFramebuffer(t.FRAMEBUFFER,u.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.RENDERBUFFER,u.__webglColorRenderbuffer[e]);const a=i.get(r[e]).__webglTexture;n.bindFramebuffer(t.FRAMEBUFFER,u.__webglFramebuffer),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0+e,t.TEXTURE_2D,a,0)}n.bindFramebuffer(t.DRAW_FRAMEBUFFER,u.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=I,this.setupFrameBufferTexture=W,this.useMultisampledRTT=D}function Js(t,e,n){const i=n.isWebGL2;return{convert:function(n,r=""){let a;const s=We.getTransfer(r);if(n===Nt)return t.UNSIGNED_BYTE;if(1017===n)return t.UNSIGNED_SHORT_4_4_4_4;if(1018===n)return t.UNSIGNED_SHORT_5_5_5_1;if(1010===n)return t.BYTE;if(1011===n)return t.SHORT;if(n===It)return t.UNSIGNED_SHORT;if(n===Ot)return t.INT;if(n===Dt)return t.UNSIGNED_INT;if(n===Ft)return t.FLOAT;if(n===kt)return i?t.HALF_FLOAT:(a=e.get("OES_texture_half_float"),null!==a?a.HALF_FLOAT_OES:null);if(1021===n)return t.ALPHA;if(n===Bt)return t.RGBA;if(1024===n)return t.LUMINANCE;if(1025===n)return t.LUMINANCE_ALPHA;if(n===Gt)return t.DEPTH_COMPONENT;if(n===Vt)return t.DEPTH_STENCIL;if(n===oe)return a=e.get("EXT_sRGB"),null!==a?a.SRGB_ALPHA_EXT:null;if(1028===n)return t.RED;if(1029===n)return t.RED_INTEGER;if(1030===n)return t.RG;if(1031===n)return t.RG_INTEGER;if(1033===n)return t.RGBA_INTEGER;if(n===Ht||n===Xt||n===qt||n===jt)if(s===ne){if(a=e.get("WEBGL_compressed_texture_s3tc_srgb"),null===a)return null;if(n===Ht)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===Xt)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===qt)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===jt)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(a=e.get("WEBGL_compressed_texture_s3tc"),null===a)return null;if(n===Ht)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===Xt)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===qt)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===jt)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===n||35841===n||35842===n||35843===n){if(a=e.get("WEBGL_compressed_texture_pvrtc"),null===a)return null;if(35840===n)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===n)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===n)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===n)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===n)return a=e.get("WEBGL_compressed_texture_etc1"),null!==a?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(37492===n||37496===n){if(a=e.get("WEBGL_compressed_texture_etc"),null===a)return null;if(37492===n)return s===ne?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(37496===n)return s===ne?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}if(37808===n||37809===n||37810===n||37811===n||37812===n||37813===n||37814===n||37815===n||37816===n||37817===n||37818===n||37819===n||37820===n||37821===n){if(a=e.get("WEBGL_compressed_texture_astc"),null===a)return null;if(37808===n)return s===ne?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(37809===n)return s===ne?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(37810===n)return s===ne?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(37811===n)return s===ne?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(37812===n)return s===ne?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(37813===n)return s===ne?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(37814===n)return s===ne?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(37815===n)return s===ne?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(37816===n)return s===ne?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(37817===n)return s===ne?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(37818===n)return s===ne?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(37819===n)return s===ne?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(37820===n)return s===ne?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(37821===n)return s===ne?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}if(n===Jt||36494===n||36495===n){if(a=e.get("EXT_texture_compression_bptc"),null===a)return null;if(n===Jt)return s===ne?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(36494===n)return a.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(36495===n)return a.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}if(36283===n||36284===n||36285===n||36286===n){if(a=e.get("EXT_texture_compression_rgtc"),null===a)return null;if(n===Jt)return a.COMPRESSED_RED_RGTC1_EXT;if(36284===n)return a.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(36285===n)return a.COMPRESSED_RED_GREEN_RGTC2_EXT;if(36286===n)return a.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return n===zt?i?t.UNSIGNED_INT_24_8:(a=e.get("WEBGL_depth_texture"),null!==a?a.UNSIGNED_INT_24_8_WEBGL:null):void 0!==t[n]?t[n]:null}}}class Ks extends or{constructor(t=[]){super(),this.isArrayCamera=!0,this.cameras=t}}class Qs extends Zn{constructor(){super(),this.isGroup=!0,this.type="Group"}}const Zs={type:"move"};class Ys{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new Qs,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new Qs,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new Ke,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new Ke),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new Qs,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new Ke,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new Ke),this._grip}dispatchEvent(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this}connect(t){if(t&&t.hand){const e=this._hand;if(e)for(const n of t.hand.values())this._getHandJoint(e,n)}return this.dispatchEvent({type:"connected",data:t}),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(t,e,n){let i=null,r=null,a=null;const s=this._targetRay,o=this._grip,l=this._hand;if(t&&"visible-blurred"!==e.session.visibilityState){if(l&&t.hand){a=!0;for(const a of t.hand.values()){const t=e.getJointPose(a,n),i=this._getHandJoint(l,a);null!==t&&(i.matrix.fromArray(t.transform.matrix),i.matrix.decompose(i.position,i.rotation,i.scale),i.matrixWorldNeedsUpdate=!0,i.jointRadius=t.radius),i.visible=null!==t}const i=l.joints["index-finger-tip"],r=l.joints["thumb-tip"],s=i.position.distanceTo(r.position),o=.02,c=.005;l.inputState.pinching&&s>o+c?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!l.inputState.pinching&&s<=o-c&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else null!==o&&t.gripSpace&&(r=e.getPose(t.gripSpace,n),null!==r&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,r.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(r.linearVelocity)):o.hasLinearVelocity=!1,r.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(r.angularVelocity)):o.hasAngularVelocity=!1));null!==s&&(i=e.getPose(t.targetRaySpace,n),null===i&&null!==r&&(i=r),null!==i&&(s.matrix.fromArray(i.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),s.matrixWorldNeedsUpdate=!0,i.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(i.linearVelocity)):s.hasLinearVelocity=!1,i.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(i.angularVelocity)):s.hasAngularVelocity=!1,this.dispatchEvent(Zs)))}return null!==s&&(s.visible=null!==i),null!==o&&(o.visible=null!==r),null!==l&&(l.visible=null!==a),this}_getHandJoint(t,e){if(void 0===t.joints[e.jointName]){const n=new Qs;n.matrixAutoUpdate=!1,n.visible=!1,t.joints[e.jointName]=n,t.add(n)}return t.joints[e.jointName]}}class $s{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(t,e,n){if(null===this.texture){const i=new Ge;t.properties.get(i).__webglTexture=e.texture,e.depthNear==n.depthNear&&e.depthFar==n.depthFar||(this.depthNear=e.depthNear,this.depthFar=e.depthFar),this.texture=i}}render(t,e){if(null!==this.texture){if(null===this.mesh){const t=e.cameras[0].viewport,n=new nr({extensions:{fragDepth:!0},vertexShader:"\nvoid main() {\n\n\tgl_Position = vec4( position, 1.0 );\n\n}",fragmentShader:"\nuniform sampler2DArray depthColor;\nuniform float depthWidth;\nuniform float depthHeight;\n\nvoid main() {\n\n\tvec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );\n\n\tif ( coord.x >= 1.0 ) {\n\n\t\tgl_FragDepthEXT = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;\n\n\t} else {\n\n\t\tgl_FragDepthEXT = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;\n\n\t}\n\n}",uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new Ki(new yr(20,20),n)}t.render(this.mesh,e)}}reset(){this.texture=null,this.mesh=null}}class to extends he{constructor(t,n){super();const i=this;let r=null,a=1,s=null,o="local-floor",l=1,c=null,h=null,u=null,d=null,p=null,f=null;const m=new $s,g=n.getContextAttributes();let v=null,_=null;const x=[],S=[],y=new ye;let M=null;const b=new or;b.layers.enable(1),b.viewport=new Ve;const E=new or;E.layers.enable(2),E.viewport=new Ve;const T=[b,E],w=new Ks;w.layers.enable(1),w.layers.enable(2);let A=null,C=null;function R(t){const e=S.indexOf(t.inputSource);if(-1===e)return;const n=x[e];void 0!==n&&(n.update(t.inputSource,t.frame,c||s),n.dispatchEvent({type:t.type,data:t.inputSource}))}function P(){r.removeEventListener("select",R),r.removeEventListener("selectstart",R),r.removeEventListener("selectend",R),r.removeEventListener("squeeze",R),r.removeEventListener("squeezestart",R),r.removeEventListener("squeezeend",R),r.removeEventListener("end",P),r.removeEventListener("inputsourceschange",U);for(let t=0;t<x.length;t++){const e=S[t];null!==e&&(S[t]=null,x[t].disconnect(e))}A=null,C=null,m.reset(),t.setRenderTarget(v),p=null,d=null,u=null,r=null,_=null,O.stop(),i.isPresenting=!1,t.setPixelRatio(M),t.setSize(y.width,y.height,!1),i.dispatchEvent({type:"sessionend"})}function U(t){for(let e=0;e<t.removed.length;e++){const n=t.removed[e],i=S.indexOf(n);i>=0&&(S[i]=null,x[i].disconnect(n))}for(let e=0;e<t.added.length;e++){const n=t.added[e];let i=S.indexOf(n);if(-1===i){for(let t=0;t<x.length;t++){if(t>=S.length){S.push(n),i=t;break}if(null===S[t]){S[t]=n,i=t;break}}if(-1===i)break}const r=x[i];r&&r.connect(n)}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(t){let e=x[t];return void 0===e&&(e=new Ys,x[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=x[t];return void 0===e&&(e=new Ys,x[t]=e),e.getGripSpace()},this.getHand=function(t){let e=x[t];return void 0===e&&(e=new Ys,x[t]=e),e.getHandSpace()},this.setFramebufferScaleFactor=function(t){a=t,i.isPresenting},this.setReferenceSpaceType=function(t){o=t,i.isPresenting},this.getReferenceSpace=function(){return c||s},this.setReferenceSpace=function(t){c=t},this.getBaseLayer=function(){return null!==d?d:p},this.getBinding=function(){return u},this.getFrame=function(){return f},this.getSession=function(){return r},this.setSession=function(h){return e(this,null,(function*(){if(r=h,null!==r){if(v=t.getRenderTarget(),r.addEventListener("select",R),r.addEventListener("selectstart",R),r.addEventListener("selectend",R),r.addEventListener("squeeze",R),r.addEventListener("squeezestart",R),r.addEventListener("squeezeend",R),r.addEventListener("end",P),r.addEventListener("inputsourceschange",U),!0!==g.xrCompatible&&(yield n.makeXRCompatible()),M=t.getPixelRatio(),t.getSize(y),void 0===r.renderState.layers||!1===t.capabilities.isWebGL2){const e={antialias:void 0!==r.renderState.layers||g.antialias,alpha:!0,depth:g.depth,stencil:g.stencil,framebufferScaleFactor:a};p=new XRWebGLLayer(r,n,e),r.updateRenderState({baseLayer:p}),t.setPixelRatio(1),t.setSize(p.framebufferWidth,p.framebufferHeight,!1),_=new Xe(p.framebufferWidth,p.framebufferHeight,{format:Bt,type:Nt,colorSpace:t.outputColorSpace,stencilBuffer:g.stencil})}else{let e=null,i=null,s=null;g.depth&&(s=g.stencil?n.DEPTH24_STENCIL8:n.DEPTH_COMPONENT24,e=g.stencil?Vt:Gt,i=g.stencil?zt:Dt);const o={colorFormat:n.RGBA8,depthFormat:s,scaleFactor:a};u=new XRWebGLBinding(r,n),d=u.createProjectionLayer(o),r.updateRenderState({layers:[d]}),t.setPixelRatio(1),t.setSize(d.textureWidth,d.textureHeight,!1),_=new Xe(d.textureWidth,d.textureHeight,{format:Bt,type:Nt,depthTexture:new ra(d.textureWidth,d.textureHeight,i,void 0,void 0,void 0,void 0,void 0,void 0,e),stencilBuffer:g.stencil,colorSpace:t.outputColorSpace,samples:g.antialias?4:0});t.properties.get(_).__ignoreDepthValues=d.ignoreDepthValues}_.isXRRenderTarget=!0,this.setFoveation(l),c=null,s=yield r.requestReferenceSpace(o),O.setContext(r),O.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}}))},this.getEnvironmentBlendMode=function(){if(null!==r)return r.environmentBlendMode};const L=new Ke,W=new Ke;function N(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.copy(t.matrixWorld).invert()}this.updateCamera=function(t){if(null===r)return;null!==m.texture&&(t.near=m.depthNear,t.far=m.depthFar),w.near=E.near=b.near=t.near,w.far=E.far=b.far=t.far,A===w.near&&C===w.far||(r.updateRenderState({depthNear:w.near,depthFar:w.far}),A=w.near,C=w.far,b.near=A,b.far=C,E.near=A,E.far=C,b.updateProjectionMatrix(),E.updateProjectionMatrix(),t.updateProjectionMatrix());const e=t.parent,n=w.cameras;N(w,e);for(let i=0;i<n.length;i++)N(n[i],e);2===n.length?function(t,e,n){L.setFromMatrixPosition(e.matrixWorld),W.setFromMatrixPosition(n.matrixWorld);const i=L.distanceTo(W),r=e.projectionMatrix.elements,a=n.projectionMatrix.elements,s=r[14]/(r[10]-1),o=r[14]/(r[10]+1),l=(r[9]+1)/r[5],c=(r[9]-1)/r[5],h=(r[8]-1)/r[0],u=(a[8]+1)/a[0],d=s*h,p=s*u,f=i/(-h+u),m=f*-h;e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(m),t.translateZ(f),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.copy(t.matrixWorld).invert();const g=s+f,v=o+f,_=d-m,x=p+(i-m),S=l*o/v*g,y=c*o/v*g;t.projectionMatrix.makePerspective(_,x,S,y,g,v),t.projectionMatrixInverse.copy(t.projectionMatrix).invert()}(w,b,E):w.projectionMatrix.copy(b.projectionMatrix),function(t,e,n){null===n?t.matrix.copy(e.matrixWorld):(t.matrix.copy(n.matrixWorld),t.matrix.invert(),t.matrix.multiply(e.matrixWorld));t.matrix.decompose(t.position,t.quaternion,t.scale),t.updateMatrixWorld(!0),t.projectionMatrix.copy(e.projectionMatrix),t.projectionMatrixInverse.copy(e.projectionMatrixInverse),t.isPerspectiveCamera&&(t.fov=2*pe*Math.atan(1/t.projectionMatrix.elements[5]),t.zoom=1)}(t,w,e)},this.getCamera=function(){return w},this.getFoveation=function(){if(null!==d||null!==p)return l},this.setFoveation=function(t){l=t,null!==d&&(d.fixedFoveation=t),null!==p&&void 0!==p.fixedFoveation&&(p.fixedFoveation=t)},this.hasDepthSensing=function(){return null!==m.texture};let I=null;const O=new xr;O.setAnimationLoop((function(e,n){if(h=n.getViewerPose(c||s),f=n,null!==h){const e=h.views;null!==p&&(t.setRenderTargetFramebuffer(_,p.framebuffer),t.setRenderTarget(_));let n=!1;e.length!==w.cameras.length&&(w.cameras.length=0,n=!0);for(let r=0;r<e.length;r++){const i=e[r];let a=null;if(null!==p)a=p.getViewport(i);else{const e=u.getViewSubImage(d,i);a=e.viewport,0===r&&(t.setRenderTargetTextures(_,e.colorTexture,d.ignoreDepthValues?void 0:e.depthStencilTexture),t.setRenderTarget(_))}let s=T[r];void 0===s&&(s=new or,s.layers.enable(r),s.viewport=new Ve,T[r]=s),s.matrix.fromArray(i.transform.matrix),s.matrix.decompose(s.position,s.quaternion,s.scale),s.projectionMatrix.fromArray(i.projectionMatrix),s.projectionMatrixInverse.copy(s.projectionMatrix).invert(),s.viewport.set(a.x,a.y,a.width,a.height),0===r&&(w.matrix.copy(s.matrix),w.matrix.decompose(w.position,w.quaternion,w.scale)),!0===n&&w.cameras.push(s)}const i=r.enabledFeatures;if(i&&i.includes("depth-sensing")){const n=u.getDepthInformation(e[0]);n&&n.isValid&&n.texture&&m.init(t,n,r.renderState)}}for(let t=0;t<x.length;t++){const e=S[t],i=x[t];null!==e&&void 0!==i&&i.update(e,n,c||s)}m.render(t,w),I&&I(e,n),n.detectedPlanes&&i.dispatchEvent({type:"planesdetected",data:n}),f=null})),this.setAnimationLoop=function(t){I=t},this.dispose=function(){}}}function eo(t,e){function n(t,e){!0===t.matrixAutoUpdate&&t.updateMatrix(),e.value.copy(t.matrix)}function i(i,r){i.opacity.value=r.opacity,r.color&&i.diffuse.value.copy(r.color),r.emissive&&i.emissive.value.copy(r.emissive).multiplyScalar(r.emissiveIntensity),r.map&&(i.map.value=r.map,n(r.map,i.mapTransform)),r.alphaMap&&(i.alphaMap.value=r.alphaMap,n(r.alphaMap,i.alphaMapTransform)),r.bumpMap&&(i.bumpMap.value=r.bumpMap,n(r.bumpMap,i.bumpMapTransform),i.bumpScale.value=r.bumpScale,r.side===ut&&(i.bumpScale.value*=-1)),r.normalMap&&(i.normalMap.value=r.normalMap,n(r.normalMap,i.normalMapTransform),i.normalScale.value.copy(r.normalScale),r.side===ut&&i.normalScale.value.negate()),r.displacementMap&&(i.displacementMap.value=r.displacementMap,n(r.displacementMap,i.displacementMapTransform),i.displacementScale.value=r.displacementScale,i.displacementBias.value=r.displacementBias),r.emissiveMap&&(i.emissiveMap.value=r.emissiveMap,n(r.emissiveMap,i.emissiveMapTransform)),r.specularMap&&(i.specularMap.value=r.specularMap,n(r.specularMap,i.specularMapTransform)),r.alphaTest>0&&(i.alphaTest.value=r.alphaTest);const a=e.get(r).envMap;if(a&&(i.envMap.value=a,i.flipEnvMap.value=a.isCubeTexture&&!1===a.isRenderTargetTexture?-1:1,i.reflectivity.value=r.reflectivity,i.ior.value=r.ior,i.refractionRatio.value=r.refractionRatio),r.lightMap){i.lightMap.value=r.lightMap;const e=!0===t._useLegacyLights?Math.PI:1;i.lightMapIntensity.value=r.lightMapIntensity*e,n(r.lightMap,i.lightMapTransform)}r.aoMap&&(i.aoMap.value=r.aoMap,i.aoMapIntensity.value=r.aoMapIntensity,n(r.aoMap,i.aoMapTransform))}return{refreshFogUniforms:function(e,n){n.color.getRGB(e.fogColor.value,tr(t)),n.isFog?(e.fogNear.value=n.near,e.fogFar.value=n.far):n.isFogExp2&&(e.fogDensity.value=n.density)},refreshMaterialUniforms:function(t,r,a,s,o){r.isMeshBasicMaterial||r.isMeshLambertMaterial?i(t,r):r.isMeshToonMaterial?(i(t,r),function(t,e){e.gradientMap&&(t.gradientMap.value=e.gradientMap)}(t,r)):r.isMeshPhongMaterial?(i(t,r),function(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4)}(t,r)):r.isMeshStandardMaterial?(i(t,r),function(t,i){t.metalness.value=i.metalness,i.metalnessMap&&(t.metalnessMap.value=i.metalnessMap,n(i.metalnessMap,t.metalnessMapTransform));t.roughness.value=i.roughness,i.roughnessMap&&(t.roughnessMap.value=i.roughnessMap,n(i.roughnessMap,t.roughnessMapTransform));const r=e.get(i).envMap;r&&(t.envMapIntensity.value=i.envMapIntensity)}(t,r),r.isMeshPhysicalMaterial&&function(t,e,i){t.ior.value=e.ior,e.sheen>0&&(t.sheenColor.value.copy(e.sheenColor).multiplyScalar(e.sheen),t.sheenRoughness.value=e.sheenRoughness,e.sheenColorMap&&(t.sheenColorMap.value=e.sheenColorMap,n(e.sheenColorMap,t.sheenColorMapTransform)),e.sheenRoughnessMap&&(t.sheenRoughnessMap.value=e.sheenRoughnessMap,n(e.sheenRoughnessMap,t.sheenRoughnessMapTransform)));e.clearcoat>0&&(t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.clearcoatMap&&(t.clearcoatMap.value=e.clearcoatMap,n(e.clearcoatMap,t.clearcoatMapTransform)),e.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap,n(e.clearcoatRoughnessMap,t.clearcoatRoughnessMapTransform)),e.clearcoatNormalMap&&(t.clearcoatNormalMap.value=e.clearcoatNormalMap,n(e.clearcoatNormalMap,t.clearcoatNormalMapTransform),t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),e.side===ut&&t.clearcoatNormalScale.value.negate()));e.iridescence>0&&(t.iridescence.value=e.iridescence,t.iridescenceIOR.value=e.iridescenceIOR,t.iridescenceThicknessMinimum.value=e.iridescenceThicknessRange[0],t.iridescenceThicknessMaximum.value=e.iridescenceThicknessRange[1],e.iridescenceMap&&(t.iridescenceMap.value=e.iridescenceMap,n(e.iridescenceMap,t.iridescenceMapTransform)),e.iridescenceThicknessMap&&(t.iridescenceThicknessMap.value=e.iridescenceThicknessMap,n(e.iridescenceThicknessMap,t.iridescenceThicknessMapTransform)));e.transmission>0&&(t.transmission.value=e.transmission,t.transmissionSamplerMap.value=i.texture,t.transmissionSamplerSize.value.set(i.width,i.height),e.transmissionMap&&(t.transmissionMap.value=e.transmissionMap,n(e.transmissionMap,t.transmissionMapTransform)),t.thickness.value=e.thickness,e.thicknessMap&&(t.thicknessMap.value=e.thicknessMap,n(e.thicknessMap,t.thicknessMapTransform)),t.attenuationDistance.value=e.attenuationDistance,t.attenuationColor.value.copy(e.attenuationColor));e.anisotropy>0&&(t.anisotropyVector.value.set(e.anisotropy*Math.cos(e.anisotropyRotation),e.anisotropy*Math.sin(e.anisotropyRotation)),e.anisotropyMap&&(t.anisotropyMap.value=e.anisotropyMap,n(e.anisotropyMap,t.anisotropyMapTransform)));t.specularIntensity.value=e.specularIntensity,t.specularColor.value.copy(e.specularColor),e.specularColorMap&&(t.specularColorMap.value=e.specularColorMap,n(e.specularColorMap,t.specularColorMapTransform));e.specularIntensityMap&&(t.specularIntensityMap.value=e.specularIntensityMap,n(e.specularIntensityMap,t.specularIntensityMapTransform))}(t,r,o)):r.isMeshMatcapMaterial?(i(t,r),function(t,e){e.matcap&&(t.matcap.value=e.matcap)}(t,r)):r.isMeshDepthMaterial?i(t,r):r.isMeshDistanceMaterial?(i(t,r),function(t,n){const i=e.get(n).light;t.referencePosition.value.setFromMatrixPosition(i.matrixWorld),t.nearDistance.value=i.shadow.camera.near,t.farDistance.value=i.shadow.camera.far}(t,r)):r.isMeshNormalMaterial?i(t,r):r.isLineBasicMaterial?(function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,e.map&&(t.map.value=e.map,n(e.map,t.mapTransform))}(t,r),r.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(t,r)):r.isPointsMaterial?function(t,e,i,r){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*i,t.scale.value=.5*r,e.map&&(t.map.value=e.map,n(e.map,t.uvTransform));e.alphaMap&&(t.alphaMap.value=e.alphaMap,n(e.alphaMap,t.alphaMapTransform));e.alphaTest>0&&(t.alphaTest.value=e.alphaTest)}(t,r,a,s):r.isSpriteMaterial?function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map,n(e.map,t.mapTransform));e.alphaMap&&(t.alphaMap.value=e.alphaMap,n(e.alphaMap,t.alphaMapTransform));e.alphaTest>0&&(t.alphaTest.value=e.alphaTest)}(t,r):r.isShadowMaterial?(t.color.value.copy(r.color),t.opacity.value=r.opacity):r.isShaderMaterial&&(r.uniformsNeedUpdate=!1)}}}function no(t,e,n,i){let r={},a={},s=[];const o=n.isWebGL2?t.getParameter(t.MAX_UNIFORM_BUFFER_BINDINGS):0;function l(t,e,n,i){const r=t.value,a=e+"_"+n;if(void 0===i[a])return i[a]="number"==typeof r||"boolean"==typeof r?r:r.clone(),!0;{const t=i[a];if("number"==typeof r||"boolean"==typeof r){if(t!==r)return i[a]=r,!0}else if(!1===t.equals(r))return t.copy(r),!0}return!1}function c(t){const e={boundary:0,storage:0};return"number"==typeof t||"boolean"==typeof t?(e.boundary=4,e.storage=4):t.isVector2?(e.boundary=8,e.storage=8):t.isVector3||t.isColor?(e.boundary=16,e.storage=12):t.isVector4?(e.boundary=16,e.storage=16):t.isMatrix3?(e.boundary=48,e.storage=48):t.isMatrix4?(e.boundary=64,e.storage=64):t.isTexture,e}function h(e){const n=e.target;n.removeEventListener("dispose",h);const i=s.indexOf(n.__bindingPointIndex);s.splice(i,1),t.deleteBuffer(r[n.id]),delete r[n.id],delete a[n.id]}return{bind:function(t,e){const n=e.program;i.uniformBlockBinding(t,n)},update:function(n,u){let d=r[n.id];void 0===d&&(!function(t){const e=t.uniforms;let n=0;const i=16;for(let a=0,s=e.length;a<s;a++){const t=Array.isArray(e[a])?e[a]:[e[a]];for(let e=0,r=t.length;e<r;e++){const r=t[e],a=Array.isArray(r.value)?r.value:[r.value];for(let t=0,e=a.length;t<e;t++){const e=c(a[t]),s=n%i;0!==s&&i-s<e.boundary&&(n+=i-s),r.__data=new Float32Array(e.storage/Float32Array.BYTES_PER_ELEMENT),r.__offset=n,n+=e.storage}}}const r=n%i;r>0&&(n+=i-r);t.__size=n,t.__cache={}}(n),d=function(e){const n=function(){for(let t=0;t<o;t++)if(-1===s.indexOf(t))return s.push(t),t;return 0}();e.__bindingPointIndex=n;const i=t.createBuffer(),r=e.__size,a=e.usage;return t.bindBuffer(t.UNIFORM_BUFFER,i),t.bufferData(t.UNIFORM_BUFFER,r,a),t.bindBuffer(t.UNIFORM_BUFFER,null),t.bindBufferBase(t.UNIFORM_BUFFER,n,i),i}(n),r[n.id]=d,n.addEventListener("dispose",h));const p=u.program;i.updateUBOMapping(n,p);const f=e.render.frame;a[n.id]!==f&&(!function(e){const n=r[e.id],i=e.uniforms,a=e.__cache;t.bindBuffer(t.UNIFORM_BUFFER,n);for(let r=0,s=i.length;r<s;r++){const e=Array.isArray(i[r])?i[r]:[i[r]];for(let n=0,i=e.length;n<i;n++){const i=e[n];if(!0===l(i,r,n,a)){const e=i.__offset,n=Array.isArray(i.value)?i.value:[i.value];let r=0;for(let a=0;a<n.length;a++){const s=n[a],o=c(s);"number"==typeof s||"boolean"==typeof s?(i.__data[0]=s,t.bufferSubData(t.UNIFORM_BUFFER,e+r,i.__data)):s.isMatrix3?(i.__data[0]=s.elements[0],i.__data[1]=s.elements[1],i.__data[2]=s.elements[2],i.__data[3]=0,i.__data[4]=s.elements[3],i.__data[5]=s.elements[4],i.__data[6]=s.elements[5],i.__data[7]=0,i.__data[8]=s.elements[6],i.__data[9]=s.elements[7],i.__data[10]=s.elements[8],i.__data[11]=0):(s.toArray(i.__data,r),r+=o.storage/Float32Array.BYTES_PER_ELEMENT)}t.bufferSubData(t.UNIFORM_BUFFER,e,i.__data)}}}t.bindBuffer(t.UNIFORM_BUFFER,null)}(n),a[n.id]=f)},dispose:function(){for(const e in r)t.deleteBuffer(r[e]);s=[],r={},a={}}}}class io{constructor(t={}){const{canvas:e=we(),context:n=null,depth:i=!0,stencil:r=!0,alpha:a=!1,antialias:s=!1,premultipliedAlpha:o=!0,preserveDrawingBuffer:l=!1,powerPreference:c="default",failIfMajorPerformanceCaveat:h=!1}=t;let u;this.isWebGLRenderer=!0,u=null!==n?n.getContextAttributes().alpha:a;const d=new Uint32Array(4),p=new Int32Array(4);let f=null,m=null;const g=[],v=[];this.domElement=e,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=Zt,this._useLegacyLights=!1,this.toneMapping=gt,this.toneMappingExposure=1;const _=this;let x=!1,S=0,y=0,M=null,b=-1,E=null;const T=new Ve,w=new Ve;let A=null;const C=new pi(0);let R=0,P=e.width,U=e.height,L=1,W=null,N=null;const I=new Ve(0,0,P,U),O=new Ve(0,0,P,U);let D=!1;const F=new _r;let k=!1,z=!1,B=null;const G=new wn,V=new ye,H=new Ke,X={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function q(){return null===M?L:1}let j,J,K,Q,Z,Y,$,tt,et,nt,it,rt,at,ot,lt,ct,dt,pt,ft,mt,vt,_t,xt,St,yt=n;function Mt(t,n){for(let i=0;i<t.length;i++){const r=t[i],a=e.getContext(r,n);if(null!==a)return a}return null}try{const t={alpha:!0,depth:i,stencil:r,antialias:s,premultipliedAlpha:o,preserveDrawingBuffer:l,powerPreference:c,failIfMajorPerformanceCaveat:h};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${st}`),e.addEventListener("webglcontextlost",Tt,!1),e.addEventListener("webglcontextrestored",wt,!1),e.addEventListener("webglcontextcreationerror",At,!1),null===yt){const e=["webgl2","webgl","experimental-webgl"];if(!0===_.isWebGL1Renderer&&e.shift(),yt=Mt(e,t),null===yt)throw Mt(e)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}"undefined"!=typeof WebGLRenderingContext&&WebGLRenderingContext,void 0===yt.getShaderPrecisionFormat&&(yt.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(Kt){throw Kt}function bt(){j=new Qr(yt),J=new Rr(yt,j,t),j.init(J),_t=new Js(yt,j,J),K=new qs(yt,j,J),Q=new $r(yt),Z=new Ls,Y=new js(yt,j,K,Z,J,_t,Q),$=new Ur(_),tt=new Kr(_),et=new Sr(yt,J),xt=new Ar(yt,j,et,J),nt=new Zr(yt,et,Q,xt),it=new ia(yt,nt,et,Q),ft=new na(yt,J,Y),ct=new Pr(Z),rt=new Us(_,$,tt,j,J,xt,ct),at=new eo(_,Z),ot=new Os,lt=new Gs(j,J),pt=new wr(_,$,tt,K,it,u,o),dt=new Xs(_,it,J),St=new no(yt,Q,J,K),mt=new Cr(yt,j,Q,J),vt=new Yr(yt,j,Q,J),Q.programs=rt.programs,_.capabilities=J,_.extensions=j,_.properties=Z,_.renderLists=ot,_.shadowMap=dt,_.state=K,_.info=Q}bt();const Et=new to(_,yt);function Tt(t){t.preventDefault(),x=!0}function wt(){x=!1;const t=Q.autoReset,e=dt.enabled,n=dt.autoUpdate,i=dt.needsUpdate,r=dt.type;bt(),Q.autoReset=t,dt.enabled=e,dt.autoUpdate=n,dt.needsUpdate=i,dt.type=r}function At(t){}function Ct(t){const e=t.target;e.removeEventListener("dispose",Ct),function(t){(function(t){const e=Z.get(t).programs;void 0!==e&&(e.forEach((function(t){rt.releaseProgram(t)})),t.isShaderMaterial&&rt.releaseShaderCache(t))})(t),Z.remove(t)}(e)}function Rt(t,e,n){!0===t.transparent&&2===t.side&&!1===t.forceSinglePass?(t.side=ut,t.needsUpdate=!0,qt(t,e,n),t.side=ht,t.needsUpdate=!0,qt(t,e,n),t.side=2):qt(t,e,n)}this.xr=Et,this.getContext=function(){return yt},this.getContextAttributes=function(){return yt.getContextAttributes()},this.forceContextLoss=function(){const t=j.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){const t=j.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return L},this.setPixelRatio=function(t){void 0!==t&&(L=t,this.setSize(P,U,!1))},this.getSize=function(t){return t.set(P,U)},this.setSize=function(t,n,i=!0){Et.isPresenting||(P=t,U=n,e.width=Math.floor(t*L),e.height=Math.floor(n*L),!0===i&&(e.style.width=t+"px",e.style.height=n+"px"),this.setViewport(0,0,t,n))},this.getDrawingBufferSize=function(t){return t.set(P*L,U*L).floor()},this.setDrawingBufferSize=function(t,n,i){P=t,U=n,L=i,e.width=Math.floor(t*i),e.height=Math.floor(n*i),this.setViewport(0,0,t,n)},this.getCurrentViewport=function(t){return t.copy(T)},this.getViewport=function(t){return t.copy(I)},this.setViewport=function(t,e,n,i){t.isVector4?I.set(t.x,t.y,t.z,t.w):I.set(t,e,n,i),K.viewport(T.copy(I).multiplyScalar(L).floor())},this.getScissor=function(t){return t.copy(O)},this.setScissor=function(t,e,n,i){t.isVector4?O.set(t.x,t.y,t.z,t.w):O.set(t,e,n,i),K.scissor(w.copy(O).multiplyScalar(L).floor())},this.getScissorTest=function(){return D},this.setScissorTest=function(t){K.setScissorTest(D=t)},this.setOpaqueSort=function(t){W=t},this.setTransparentSort=function(t){N=t},this.getClearColor=function(t){return t.copy(pt.getClearColor())},this.setClearColor=function(){pt.setClearColor.apply(pt,arguments)},this.getClearAlpha=function(){return pt.getClearAlpha()},this.setClearAlpha=function(){pt.setClearAlpha.apply(pt,arguments)},this.clear=function(t=!0,e=!0,n=!0){let i=0;if(t){let t=!1;if(null!==M){const e=M.texture.format;t=1033===e||1031===e||1029===e}if(t){const t=M.texture.type,e=t===Nt||t===Dt||t===It||t===zt||1017===t||1018===t,n=pt.getClearColor(),i=pt.getClearAlpha(),r=n.r,a=n.g,s=n.b;e?(d[0]=r,d[1]=a,d[2]=s,d[3]=i,yt.clearBufferuiv(yt.COLOR,0,d)):(p[0]=r,p[1]=a,p[2]=s,p[3]=i,yt.clearBufferiv(yt.COLOR,0,p))}else i|=yt.COLOR_BUFFER_BIT}e&&(i|=yt.DEPTH_BUFFER_BIT),n&&(i|=yt.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),yt.clear(i)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Tt,!1),e.removeEventListener("webglcontextrestored",wt,!1),e.removeEventListener("webglcontextcreationerror",At,!1),ot.dispose(),lt.dispose(),Z.dispose(),$.dispose(),tt.dispose(),it.dispose(),xt.dispose(),St.dispose(),rt.dispose(),Et.dispose(),Et.removeEventListener("sessionstart",Ut),Et.removeEventListener("sessionend",Lt),B&&(B.dispose(),B=null),Ot.stop()},this.renderBufferDirect=function(t,e,n,i,r,a){null===e&&(e=X);const s=r.isMesh&&r.matrixWorld.determinant()<0,o=function(t,e,n,i,r){!0!==e.isScene&&(e=X);Y.resetTextureUnits();const a=e.fog,s=i.isMeshStandardMaterial?e.environment:null,o=null===M?_.outputColorSpace:!0===M.isXRRenderTarget?M.texture.colorSpace:Yt,l=(i.isMeshStandardMaterial?tt:$).get(i.envMap||s),c=!0===i.vertexColors&&!!n.attributes.color&&4===n.attributes.color.itemSize,h=!!n.attributes.tangent&&(!!i.normalMap||i.anisotropy>0),u=!!n.morphAttributes.position,d=!!n.morphAttributes.normal,p=!!n.morphAttributes.color;let f=gt;i.toneMapped&&(null!==M&&!0!==M.isXRRenderTarget||(f=_.toneMapping));const g=n.morphAttributes.position||n.morphAttributes.normal||n.morphAttributes.color,v=void 0!==g?g.length:0,x=Z.get(i),S=m.state.lights;if(!0===k&&(!0===z||t!==E)){const e=t===E&&i.id===b;ct.setState(i,t,e)}let y=!1;i.version===x.__version?x.needsLights&&x.lightsStateVersion!==S.state.version||x.outputColorSpace!==o||r.isBatchedMesh&&!1===x.batching?y=!0:r.isBatchedMesh||!0!==x.batching?r.isInstancedMesh&&!1===x.instancing?y=!0:r.isInstancedMesh||!0!==x.instancing?r.isSkinnedMesh&&!1===x.skinning?y=!0:r.isSkinnedMesh||!0!==x.skinning?r.isInstancedMesh&&!0===x.instancingColor&&null===r.instanceColor||r.isInstancedMesh&&!1===x.instancingColor&&null!==r.instanceColor||x.envMap!==l||!0===i.fog&&x.fog!==a?y=!0:void 0===x.numClippingPlanes||x.numClippingPlanes===ct.numPlanes&&x.numIntersection===ct.numIntersection?(x.vertexAlphas!==c||x.vertexTangents!==h||x.morphTargets!==u||x.morphNormals!==d||x.morphColors!==p||x.toneMapping!==f||!0===J.isWebGL2&&x.morphTargetsCount!==v)&&(y=!0):y=!0:y=!0:y=!0:y=!0:(y=!0,x.__version=i.version);let T=x.currentProgram;!0===y&&(T=qt(i,e,r));let w=!1,A=!1,C=!1;const R=T.getUniforms(),P=x.uniforms;K.useProgram(T.program)&&(w=!0,A=!0,C=!0);i.id!==b&&(b=i.id,A=!0);if(w||E!==t){R.setValue(yt,"projectionMatrix",t.projectionMatrix),R.setValue(yt,"viewMatrix",t.matrixWorldInverse);const e=R.map.cameraPosition;void 0!==e&&e.setValue(yt,H.setFromMatrixPosition(t.matrixWorld)),J.logarithmicDepthBuffer&&R.setValue(yt,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),(i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial)&&R.setValue(yt,"isOrthographic",!0===t.isOrthographicCamera),E!==t&&(E=t,A=!0,C=!0)}if(r.isSkinnedMesh){R.setOptional(yt,r,"bindMatrix"),R.setOptional(yt,r,"bindMatrixInverse");const t=r.skeleton;t&&J.floatVertexTextures&&(null===t.boneTexture&&t.computeBoneTexture(),R.setValue(yt,"boneTexture",t.boneTexture,Y))}r.isBatchedMesh&&(R.setOptional(yt,r,"batchingTexture"),R.setValue(yt,"batchingTexture",r._matricesTexture,Y));const W=n.morphAttributes;(void 0!==W.position||void 0!==W.normal||void 0!==W.color&&!0===J.isWebGL2)&&ft.update(r,n,T);(A||x.receiveShadow!==r.receiveShadow)&&(x.receiveShadow=r.receiveShadow,R.setValue(yt,"receiveShadow",r.receiveShadow));i.isMeshGouraudMaterial&&null!==i.envMap&&(P.envMap.value=l,P.flipEnvMap.value=l.isCubeTexture&&!1===l.isRenderTargetTexture?-1:1);A&&(R.setValue(yt,"toneMappingExposure",_.toneMappingExposure),x.needsLights&&(I=C,(N=P).ambientLightColor.needsUpdate=I,N.lightProbe.needsUpdate=I,N.directionalLights.needsUpdate=I,N.directionalLightShadows.needsUpdate=I,N.pointLights.needsUpdate=I,N.pointLightShadows.needsUpdate=I,N.spotLights.needsUpdate=I,N.spotLightShadows.needsUpdate=I,N.rectAreaLights.needsUpdate=I,N.hemisphereLights.needsUpdate=I),a&&!0===i.fog&&at.refreshFogUniforms(P,a),at.refreshMaterialUniforms(P,i,L,U,B),cs.upload(yt,jt(x),P,Y));var N,I;i.isShaderMaterial&&!0===i.uniformsNeedUpdate&&(cs.upload(yt,jt(x),P,Y),i.uniformsNeedUpdate=!1);i.isSpriteMaterial&&R.setValue(yt,"center",r.center);if(R.setValue(yt,"modelViewMatrix",r.modelViewMatrix),R.setValue(yt,"normalMatrix",r.normalMatrix),R.setValue(yt,"modelMatrix",r.matrixWorld),i.isShaderMaterial||i.isRawShaderMaterial){const t=i.uniformsGroups;for(let e=0,n=t.length;e<n;e++)if(J.isWebGL2){const n=t[e];St.update(n,T),St.bind(n,T)}}return T}(t,e,n,i,r);K.setMaterial(i,s);let l=n.index,c=1;if(!0===i.wireframe){if(l=nt.getWireframeAttribute(n),void 0===l)return;c=2}const h=n.drawRange,u=n.attributes.position;let d=h.start*c,p=(h.start+h.count)*c;null!==a&&(d=Math.max(d,a.start*c),p=Math.min(p,(a.start+a.count)*c)),null!==l?(d=Math.max(d,0),p=Math.min(p,l.count)):null!=u&&(d=Math.max(d,0),p=Math.min(p,u.count));const f=p-d;if(f<0||f===1/0)return;let g;xt.setup(r,i,o,n,l);let v=mt;if(null!==l&&(g=et.get(l),v=vt,v.setIndex(g)),r.isMesh)!0===i.wireframe?(K.setLineWidth(i.wireframeLinewidth*q()),v.setMode(yt.LINES)):v.setMode(yt.TRIANGLES);else if(r.isLine){let t=i.linewidth;void 0===t&&(t=1),K.setLineWidth(t*q()),r.isLineSegments?v.setMode(yt.LINES):r.isLineLoop?v.setMode(yt.LINE_LOOP):v.setMode(yt.LINE_STRIP)}else r.isPoints?v.setMode(yt.POINTS):r.isSprite&&v.setMode(yt.TRIANGLES);if(r.isBatchedMesh)v.renderMultiDraw(r._multiDrawStarts,r._multiDrawCounts,r._multiDrawCount);else if(r.isInstancedMesh)v.renderInstances(d,f,r.count);else if(n.isInstancedBufferGeometry){const t=void 0!==n._maxInstanceCount?n._maxInstanceCount:1/0,e=Math.min(n.instanceCount,t);v.renderInstances(d,f,e)}else v.render(d,f)},this.compile=function(t,e,n=null){null===n&&(n=t),m=lt.get(n),m.init(),v.push(m),n.traverseVisible((function(t){t.isLight&&t.layers.test(e.layers)&&(m.pushLight(t),t.castShadow&&m.pushShadow(t))})),t!==n&&t.traverseVisible((function(t){t.isLight&&t.layers.test(e.layers)&&(m.pushLight(t),t.castShadow&&m.pushShadow(t))})),m.setupLights(_._useLegacyLights);const i=new Set;return t.traverse((function(t){const e=t.material;if(e)if(Array.isArray(e))for(let r=0;r<e.length;r++){const a=e[r];Rt(a,n,t),i.add(a)}else Rt(e,n,t),i.add(e)})),v.pop(),m=null,i},this.compileAsync=function(t,e,n=null){const i=this.compile(t,e,n);return new Promise((e=>{function n(){i.forEach((function(t){Z.get(t).currentProgram.isReady()&&i.delete(t)})),0!==i.size?setTimeout(n,10):e(t)}null!==j.get("KHR_parallel_shader_compile")?n():setTimeout(n,10)}))};let Pt=null;function Ut(){Ot.stop()}function Lt(){Ot.start()}const Ot=new xr;function Gt(t,e,n,i){if(!1===t.visible)return;if(t.layers.test(e.layers))if(t.isGroup)n=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(e);else if(t.isLight)m.pushLight(t),t.castShadow&&m.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||F.intersectsSprite(t)){i&&H.setFromMatrixPosition(t.matrixWorld).applyMatrix4(G);const e=it.update(t),r=t.material;r.visible&&f.push(t,e,r,n,H.z,null)}}else if((t.isMesh||t.isLine||t.isPoints)&&(!t.frustumCulled||F.intersectsObject(t))){const e=it.update(t),r=t.material;if(i&&(void 0!==t.boundingSphere?(null===t.boundingSphere&&t.computeBoundingSphere(),H.copy(t.boundingSphere.center)):(null===e.boundingSphere&&e.computeBoundingSphere(),H.copy(e.boundingSphere.center)),H.applyMatrix4(t.matrixWorld).applyMatrix4(G)),Array.isArray(r)){const i=e.groups;for(let a=0,s=i.length;a<s;a++){const s=i[a],o=r[s.materialIndex];o&&o.visible&&f.push(t,e,o,n,H.z,s)}}else r.visible&&f.push(t,e,r,n,H.z,null)}const r=t.children;for(let a=0,s=r.length;a<s;a++)Gt(r[a],e,n,i)}function Vt(t,e,n,i){const r=t.opaque,a=t.transmissive,s=t.transparent;m.setupLightsView(n),!0===k&&ct.setGlobalState(_.clippingPlanes,n),a.length>0&&function(t,e,n,i){const r=!0===n.isScene?n.overrideMaterial:null;if(null!==r)return;const a=J.isWebGL2;null===B&&(B=new Xe(1,1,{generateMipmaps:!0,type:j.has("EXT_color_buffer_half_float")?kt:Nt,minFilter:Wt,samples:a?4:0}));_.getDrawingBufferSize(V),a?B.setSize(V.x,V.y):B.setSize(_e(V.x),_e(V.y));const s=_.getRenderTarget();_.setRenderTarget(B),_.getClearColor(C),R=_.getClearAlpha(),R<1&&_.setClearColor(16777215,.5);_.clear();const o=_.toneMapping;_.toneMapping=gt,Ht(t,n,i),Y.updateMultisampleRenderTarget(B),Y.updateRenderTargetMipmap(B);let l=!1;for(let c=0,h=e.length;c<h;c++){const t=e[c],r=t.object,a=t.geometry,s=t.material,o=t.group;if(2===s.side&&r.layers.test(i.layers)){const t=s.side;s.side=ut,s.needsUpdate=!0,Xt(r,n,i,a,s,o),s.side=t,s.needsUpdate=!0,l=!0}}!0===l&&(Y.updateMultisampleRenderTarget(B),Y.updateRenderTargetMipmap(B));_.setRenderTarget(s),_.setClearColor(C,R),_.toneMapping=o}(r,a,e,n),i&&K.viewport(T.copy(i)),r.length>0&&Ht(r,e,n),a.length>0&&Ht(a,e,n),s.length>0&&Ht(s,e,n),K.buffers.depth.setTest(!0),K.buffers.depth.setMask(!0),K.buffers.color.setMask(!0),K.setPolygonOffset(!1)}function Ht(t,e,n){const i=!0===e.isScene?e.overrideMaterial:null;for(let r=0,a=t.length;r<a;r++){const a=t[r],s=a.object,o=a.geometry,l=null===i?a.material:i,c=a.group;s.layers.test(n.layers)&&Xt(s,e,n,o,l,c)}}function Xt(t,e,n,i,r,a){t.onBeforeRender(_,e,n,i,r,a),t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),r.onBeforeRender(_,e,n,i,t,a),!0===r.transparent&&2===r.side&&!1===r.forceSinglePass?(r.side=ut,r.needsUpdate=!0,_.renderBufferDirect(n,e,i,r,t,a),r.side=ht,r.needsUpdate=!0,_.renderBufferDirect(n,e,i,r,t,a),r.side=2):_.renderBufferDirect(n,e,i,r,t,a),t.onAfterRender(_,e,n,i,r,a)}function qt(t,e,n){!0!==e.isScene&&(e=X);const i=Z.get(t),r=m.state.lights,a=m.state.shadowsArray,s=r.state.version,o=rt.getParameters(t,r.state,a,e,n),l=rt.getProgramCacheKey(o);let c=i.programs;i.environment=t.isMeshStandardMaterial?e.environment:null,i.fog=e.fog,i.envMap=(t.isMeshStandardMaterial?tt:$).get(t.envMap||i.environment),void 0===c&&(t.addEventListener("dispose",Ct),c=new Map,i.programs=c);let h=c.get(l);if(void 0!==h){if(i.currentProgram===h&&i.lightsStateVersion===s)return Jt(t,o),h}else o.uniforms=rt.getUniforms(t),t.onBuild(n,o,_),t.onBeforeCompile(o,_),h=rt.acquireProgram(o,l),c.set(l,h),i.uniforms=o.uniforms;const u=i.uniforms;return(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(u.clippingPlanes=ct.uniform),Jt(t,o),i.needsLights=function(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}(t),i.lightsStateVersion=s,i.needsLights&&(u.ambientLightColor.value=r.state.ambient,u.lightProbe.value=r.state.probe,u.directionalLights.value=r.state.directional,u.directionalLightShadows.value=r.state.directionalShadow,u.spotLights.value=r.state.spot,u.spotLightShadows.value=r.state.spotShadow,u.rectAreaLights.value=r.state.rectArea,u.ltc_1.value=r.state.rectAreaLTC1,u.ltc_2.value=r.state.rectAreaLTC2,u.pointLights.value=r.state.point,u.pointLightShadows.value=r.state.pointShadow,u.hemisphereLights.value=r.state.hemi,u.directionalShadowMap.value=r.state.directionalShadowMap,u.directionalShadowMatrix.value=r.state.directionalShadowMatrix,u.spotShadowMap.value=r.state.spotShadowMap,u.spotLightMatrix.value=r.state.spotLightMatrix,u.spotLightMap.value=r.state.spotLightMap,u.pointShadowMap.value=r.state.pointShadowMap,u.pointShadowMatrix.value=r.state.pointShadowMatrix),i.currentProgram=h,i.uniformsList=null,h}function jt(t){if(null===t.uniformsList){const e=t.currentProgram.getUniforms();t.uniformsList=cs.seqWithValue(e.seq,t.uniforms)}return t.uniformsList}function Jt(t,e){const n=Z.get(t);n.outputColorSpace=e.outputColorSpace,n.batching=e.batching,n.instancing=e.instancing,n.instancingColor=e.instancingColor,n.skinning=e.skinning,n.morphTargets=e.morphTargets,n.morphNormals=e.morphNormals,n.morphColors=e.morphColors,n.morphTargetsCount=e.morphTargetsCount,n.numClippingPlanes=e.numClippingPlanes,n.numIntersection=e.numClipIntersection,n.vertexAlphas=e.vertexAlphas,n.vertexTangents=e.vertexTangents,n.toneMapping=e.toneMapping}Ot.setAnimationLoop((function(t){Pt&&Pt(t)})),"undefined"!=typeof self&&Ot.setContext(self),this.setAnimationLoop=function(t){Pt=t,Et.setAnimationLoop(t),null===t?Ot.stop():Ot.start()},Et.addEventListener("sessionstart",Ut),Et.addEventListener("sessionend",Lt),this.render=function(t,e){if(void 0!==e&&!0!==e.isCamera)return;if(!0===x)return;!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),null===e.parent&&!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),!0===Et.enabled&&!0===Et.isPresenting&&(!0===Et.cameraAutoUpdate&&Et.updateCamera(e),e=Et.getCamera()),!0===t.isScene&&t.onBeforeRender(_,t,e,M),m=lt.get(t,v.length),m.init(),v.push(m),G.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),F.setFromProjectionMatrix(G),z=this.localClippingEnabled,k=ct.init(this.clippingPlanes,z),f=ot.get(t,g.length),f.init(),g.push(f),Gt(t,e,0,_.sortObjects),f.finish(),!0===_.sortObjects&&f.sort(W,N),this.info.render.frame++,!0===k&&ct.beginShadows();const n=m.state.shadowsArray;if(dt.render(n,t,e),!0===k&&ct.endShadows(),!0===this.info.autoReset&&this.info.reset(),!1!==Et.enabled&&!1!==Et.isPresenting&&!1!==Et.hasDepthSensing()||pt.render(f,t),m.setupLights(_._useLegacyLights),e.isArrayCamera){const n=e.cameras;for(let e=0,i=n.length;e<i;e++){const i=n[e];Vt(f,t,i,i.viewport)}}else Vt(f,t,e);null!==M&&(Y.updateMultisampleRenderTarget(M),Y.updateRenderTargetMipmap(M)),!0===t.isScene&&t.onAfterRender(_,t,e),xt.resetDefaultState(),b=-1,E=null,v.pop(),m=v.length>0?v[v.length-1]:null,g.pop(),f=g.length>0?g[g.length-1]:null},this.getActiveCubeFace=function(){return S},this.getActiveMipmapLevel=function(){return y},this.getRenderTarget=function(){return M},this.setRenderTargetTextures=function(t,e,n){Z.get(t.texture).__webglTexture=e,Z.get(t.depthTexture).__webglTexture=n;const i=Z.get(t);i.__hasExternalTextures=!0,i.__hasExternalTextures&&(i.__autoAllocateDepthBuffer=void 0===n,i.__autoAllocateDepthBuffer||!0===j.has("WEBGL_multisampled_render_to_texture")&&(i.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(t,e){const n=Z.get(t);n.__webglFramebuffer=e,n.__useDefaultFramebuffer=void 0===e},this.setRenderTarget=function(t,e=0,n=0){M=t,S=e,y=n;let i=!0,r=null,a=!1,s=!1;if(t){const o=Z.get(t);void 0!==o.__useDefaultFramebuffer?(K.bindFramebuffer(yt.FRAMEBUFFER,null),i=!1):void 0===o.__webglFramebuffer?Y.setupRenderTarget(t):o.__hasExternalTextures&&Y.rebindTextures(t,Z.get(t.texture).__webglTexture,Z.get(t.depthTexture).__webglTexture);const l=t.texture;(l.isData3DTexture||l.isDataArrayTexture||l.isCompressedArrayTexture)&&(s=!0);const c=Z.get(t).__webglFramebuffer;t.isWebGLCubeRenderTarget?(r=Array.isArray(c[e])?c[e][n]:c[e],a=!0):r=J.isWebGL2&&t.samples>0&&!1===Y.useMultisampledRTT(t)?Z.get(t).__webglMultisampledFramebuffer:Array.isArray(c)?c[n]:c,T.copy(t.viewport),w.copy(t.scissor),A=t.scissorTest}else T.copy(I).multiplyScalar(L).floor(),w.copy(O).multiplyScalar(L).floor(),A=D;if(K.bindFramebuffer(yt.FRAMEBUFFER,r)&&J.drawBuffers&&i&&K.drawBuffers(t,r),K.viewport(T),K.scissor(w),K.setScissorTest(A),a){const i=Z.get(t.texture);yt.framebufferTexture2D(yt.FRAMEBUFFER,yt.COLOR_ATTACHMENT0,yt.TEXTURE_CUBE_MAP_POSITIVE_X+e,i.__webglTexture,n)}else if(s){const i=Z.get(t.texture),r=e||0;yt.framebufferTextureLayer(yt.FRAMEBUFFER,yt.COLOR_ATTACHMENT0,i.__webglTexture,n||0,r)}b=-1},this.readRenderTargetPixels=function(t,e,n,i,r,a,s){if(!t||!t.isWebGLRenderTarget)return;let o=Z.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==s&&(o=o[s]),o){K.bindFramebuffer(yt.FRAMEBUFFER,o);try{const s=t.texture,o=s.format,l=s.type;if(o!==Bt&&_t.convert(o)!==yt.getParameter(yt.IMPLEMENTATION_COLOR_READ_FORMAT))return;const c=l===kt&&(j.has("EXT_color_buffer_half_float")||J.isWebGL2&&j.has("EXT_color_buffer_float"));if(!(l===Nt||_t.convert(l)===yt.getParameter(yt.IMPLEMENTATION_COLOR_READ_TYPE)||l===Ft&&(J.isWebGL2||j.has("OES_texture_float")||j.has("WEBGL_color_buffer_float"))||c))return;e>=0&&e<=t.width-i&&n>=0&&n<=t.height-r&&yt.readPixels(e,n,i,r,_t.convert(o),_t.convert(l),a)}finally{const t=null!==M?Z.get(M).__webglFramebuffer:null;K.bindFramebuffer(yt.FRAMEBUFFER,t)}}},this.copyFramebufferToTexture=function(t,e,n=0){const i=Math.pow(2,-n),r=Math.floor(e.image.width*i),a=Math.floor(e.image.height*i);Y.setTexture2D(e,0),yt.copyTexSubImage2D(yt.TEXTURE_2D,n,0,0,t.x,t.y,r,a),K.unbindTexture()},this.copyTextureToTexture=function(t,e,n,i=0){const r=e.image.width,a=e.image.height,s=_t.convert(n.format),o=_t.convert(n.type);Y.setTexture2D(n,0),yt.pixelStorei(yt.UNPACK_FLIP_Y_WEBGL,n.flipY),yt.pixelStorei(yt.UNPACK_PREMULTIPLY_ALPHA_WEBGL,n.premultiplyAlpha),yt.pixelStorei(yt.UNPACK_ALIGNMENT,n.unpackAlignment),e.isDataTexture?yt.texSubImage2D(yt.TEXTURE_2D,i,t.x,t.y,r,a,s,o,e.image.data):e.isCompressedTexture?yt.compressedTexSubImage2D(yt.TEXTURE_2D,i,t.x,t.y,e.mipmaps[0].width,e.mipmaps[0].height,s,e.mipmaps[0].data):yt.texSubImage2D(yt.TEXTURE_2D,i,t.x,t.y,s,o,e.image),0===i&&n.generateMipmaps&&yt.generateMipmap(yt.TEXTURE_2D),K.unbindTexture()},this.copyTextureToTexture3D=function(t,e,n,i,r=0){if(_.isWebGL1Renderer)return;const a=t.max.x-t.min.x+1,s=t.max.y-t.min.y+1,o=t.max.z-t.min.z+1,l=_t.convert(i.format),c=_t.convert(i.type);let h;if(i.isData3DTexture)Y.setTexture3D(i,0),h=yt.TEXTURE_3D;else{if(!i.isDataArrayTexture&&!i.isCompressedArrayTexture)return;Y.setTexture2DArray(i,0),h=yt.TEXTURE_2D_ARRAY}yt.pixelStorei(yt.UNPACK_FLIP_Y_WEBGL,i.flipY),yt.pixelStorei(yt.UNPACK_PREMULTIPLY_ALPHA_WEBGL,i.premultiplyAlpha),yt.pixelStorei(yt.UNPACK_ALIGNMENT,i.unpackAlignment);const u=yt.getParameter(yt.UNPACK_ROW_LENGTH),d=yt.getParameter(yt.UNPACK_IMAGE_HEIGHT),p=yt.getParameter(yt.UNPACK_SKIP_PIXELS),f=yt.getParameter(yt.UNPACK_SKIP_ROWS),m=yt.getParameter(yt.UNPACK_SKIP_IMAGES),g=n.isCompressedTexture?n.mipmaps[r]:n.image;yt.pixelStorei(yt.UNPACK_ROW_LENGTH,g.width),yt.pixelStorei(yt.UNPACK_IMAGE_HEIGHT,g.height),yt.pixelStorei(yt.UNPACK_SKIP_PIXELS,t.min.x),yt.pixelStorei(yt.UNPACK_SKIP_ROWS,t.min.y),yt.pixelStorei(yt.UNPACK_SKIP_IMAGES,t.min.z),n.isDataTexture||n.isData3DTexture?yt.texSubImage3D(h,r,e.x,e.y,e.z,a,s,o,l,c,g.data):n.isCompressedArrayTexture?yt.compressedTexSubImage3D(h,r,e.x,e.y,e.z,a,s,o,l,g.data):yt.texSubImage3D(h,r,e.x,e.y,e.z,a,s,o,l,c,g),yt.pixelStorei(yt.UNPACK_ROW_LENGTH,u),yt.pixelStorei(yt.UNPACK_IMAGE_HEIGHT,d),yt.pixelStorei(yt.UNPACK_SKIP_PIXELS,p),yt.pixelStorei(yt.UNPACK_SKIP_ROWS,f),yt.pixelStorei(yt.UNPACK_SKIP_IMAGES,m),0===r&&i.generateMipmaps&&yt.generateMipmap(h),K.unbindTexture()},this.initTexture=function(t){t.isCubeTexture?Y.setTextureCube(t,0):t.isData3DTexture?Y.setTexture3D(t,0):t.isDataArrayTexture||t.isCompressedArrayTexture?Y.setTexture2DArray(t,0):Y.setTexture2D(t,0),K.unbindTexture()},this.resetState=function(){S=0,y=0,M=null,K.reset(),xt.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return le}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(t){this._outputColorSpace=t;const e=this.getContext();e.drawingBufferColorSpace=t===$t?"display-p3":"srgb",e.unpackColorSpace=We.workingColorSpace===te?"display-p3":"srgb"}get outputEncoding(){return this.outputColorSpace===Zt?Kt:3e3}set outputEncoding(t){this.outputColorSpace=t===Kt?Zt:Yt}get useLegacyLights(){return this._useLegacyLights}set useLegacyLights(t){this._useLegacyLights=t}}(class extends io{}).prototype.isWebGL1Renderer=!0;class ro extends Zn{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,this.backgroundIntensity=t.backgroundIntensity,null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return null!==this.fog&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.object.backgroundBlurriness=this.backgroundBlurriness),1!==this.backgroundIntensity&&(e.object.backgroundIntensity=this.backgroundIntensity),e}}class ao{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return null}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,i=this.getPoint(0),r=0;e.push(0);for(let a=1;a<=t;a++)n=this.getPoint(a/t),r+=n.distanceTo(i),e.push(r),i=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e){const n=this.getLengths();let i=0;const r=n.length;let a;a=e||t*n[r-1];let s,o=0,l=r-1;for(;o<=l;)if(i=Math.floor(o+(l-o)/2),s=n[i]-a,s<0)o=i+1;else{if(!(s>0)){l=i;break}l=i-1}if(i=l,n[i]===a)return i/(r-1);const c=n[i];return(i+(a-c)/(n[i+1]-c))/(r-1)}getTangent(t,e){const n=1e-4;let i=t-n,r=t+n;i<0&&(i=0),r>1&&(r=1);const a=this.getPoint(i),s=this.getPoint(r),o=e||(a.isVector2?new ye:new Ke);return o.copy(s).sub(a).normalize(),o}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e){const n=new Ke,i=[],r=[],a=[],s=new Ke,o=new wn;for(let d=0;d<=t;d++){const e=d/t;i[d]=this.getTangentAt(e,new Ke)}r[0]=new Ke,a[0]=new Ke;let l=Number.MAX_VALUE;const c=Math.abs(i[0].x),h=Math.abs(i[0].y),u=Math.abs(i[0].z);c<=l&&(l=c,n.set(1,0,0)),h<=l&&(l=h,n.set(0,1,0)),u<=l&&n.set(0,0,1),s.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],s),a[0].crossVectors(i[0],r[0]);for(let d=1;d<=t;d++){if(r[d]=r[d-1].clone(),a[d]=a[d-1].clone(),s.crossVectors(i[d-1],i[d]),s.length()>Number.EPSILON){s.normalize();const t=Math.acos(me(i[d-1].dot(i[d]),-1,1));r[d].applyMatrix4(o.makeRotationAxis(s,t))}a[d].crossVectors(i[d],r[d])}if(!0===e){let e=Math.acos(me(r[0].dot(r[t]),-1,1));e/=t,i[0].dot(s.crossVectors(r[0],r[t]))>0&&(e=-e);for(let n=1;n<=t;n++)r[n].applyMatrix4(o.makeRotationAxis(i[n],e*n)),a[n].crossVectors(i[n],r[n])}return{tangents:i,normals:r,binormals:a}}clone(){return(new this.constructor).copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class so extends ao{constructor(t=0,e=0,n=1,i=1,r=0,a=2*Math.PI,s=!1,o=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=a,this.aClockwise=s,this.aRotation=o}getPoint(t,e){const n=e||new ye,i=2*Math.PI;let r=this.aEndAngle-this.aStartAngle;const a=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(r=a?0:i),!0!==this.aClockwise||a||(r===i?r=-i:r-=i);const s=this.aStartAngle+t*r;let o=this.aX+this.xRadius*Math.cos(s),l=this.aY+this.yRadius*Math.sin(s);if(0!==this.aRotation){const t=Math.cos(this.aRotation),e=Math.sin(this.aRotation),n=o-this.aX,i=l-this.aY;o=n*t-i*e+this.aX,l=n*e+i*t+this.aY}return n.set(o,l)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}function oo(){let t=0,e=0,n=0,i=0;function r(r,a,s,o){t=r,e=s,n=-3*r+3*a-2*s-o,i=2*r-2*a+s+o}return{initCatmullRom:function(t,e,n,i,a){r(e,n,a*(n-t),a*(i-e))},initNonuniformCatmullRom:function(t,e,n,i,a,s,o){let l=(e-t)/a-(n-t)/(a+s)+(n-e)/s,c=(n-e)/s-(i-e)/(s+o)+(i-n)/o;l*=s,c*=s,r(e,n,l,c)},calc:function(r){const a=r*r;return t+e*r+n*a+i*(a*r)}}}const lo=new Ke,co=new oo,ho=new oo,uo=new oo;function po(t,e,n,i,r){const a=.5*(i-e),s=.5*(r-n),o=t*t;return(2*n-2*i+a+s)*(t*o)+(-3*n+3*i-2*a-s)*o+a*t+n}function fo(t,e,n,i){return function(t,e){const n=1-t;return n*n*e}(t,e)+function(t,e){return 2*(1-t)*t*e}(t,n)+function(t,e){return t*t*e}(t,i)}function mo(t,e,n,i,r){return function(t,e){const n=1-t;return n*n*n*e}(t,e)+function(t,e){const n=1-t;return 3*n*n*t*e}(t,n)+function(t,e){return 3*(1-t)*t*t*e}(t,i)+function(t,e){return t*t*t*e}(t,r)}class go extends ao{constructor(t=new ye,e=new ye,n=new ye,i=new ye){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new ye){const n=e,i=this.v0,r=this.v1,a=this.v2,s=this.v3;return n.set(mo(t,i.x,r.x,a.x,s.x),mo(t,i.y,r.y,a.y,s.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class vo extends ao{constructor(t=new ye,e=new ye){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new ye){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new ye){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class _o extends ao{constructor(t=new ye,e=new ye,n=new ye){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new ye){const n=e,i=this.v0,r=this.v1,a=this.v2;return n.set(fo(t,i.x,r.x,a.x),fo(t,i.y,r.y,a.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class xo extends ao{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,e=new ye){const n=e,i=this.points,r=(i.length-1)*t,a=Math.floor(r),s=r-a,o=i[0===a?a:a-1],l=i[a],c=i[a>i.length-2?i.length-1:a+1],h=i[a>i.length-3?i.length-1:a+2];return n.set(po(s,o.x,l.x,c.x,h.x),po(s,o.y,l.y,c.y,h.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new ye).fromArray(n))}return this}}var So=Object.freeze({__proto__:null,ArcCurve:class extends so{constructor(t,e,n,i,r,a){super(t,e,n,n,i,r,a),this.isArcCurve=!0,this.type="ArcCurve"}},CatmullRomCurve3:class extends ao{constructor(t=[],e=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=i}getPoint(t,e=new Ke){const n=e,i=this.points,r=i.length,a=(r-(this.closed?0:1))*t;let s,o,l=Math.floor(a),c=a-l;this.closed?l+=l>0?0:(Math.floor(Math.abs(l)/r)+1)*r:0===c&&l===r-1&&(l=r-2,c=1),this.closed||l>0?s=i[(l-1)%r]:(lo.subVectors(i[0],i[1]).add(i[0]),s=lo);const h=i[l%r],u=i[(l+1)%r];if(this.closed||l+2<r?o=i[(l+2)%r]:(lo.subVectors(i[r-1],i[r-2]).add(i[r-1]),o=lo),"centripetal"===this.curveType||"chordal"===this.curveType){const t="chordal"===this.curveType?.5:.25;let e=Math.pow(s.distanceToSquared(h),t),n=Math.pow(h.distanceToSquared(u),t),i=Math.pow(u.distanceToSquared(o),t);n<1e-4&&(n=1),e<1e-4&&(e=n),i<1e-4&&(i=n),co.initNonuniformCatmullRom(s.x,h.x,u.x,o.x,e,n,i),ho.initNonuniformCatmullRom(s.y,h.y,u.y,o.y,e,n,i),uo.initNonuniformCatmullRom(s.z,h.z,u.z,o.z,e,n,i)}else"catmullrom"===this.curveType&&(co.initCatmullRom(s.x,h.x,u.x,o.x,this.tension),ho.initCatmullRom(s.y,h.y,u.y,o.y,this.tension),uo.initCatmullRom(s.z,h.z,u.z,o.z,this.tension));return n.set(co.calc(c),ho.calc(c),uo.calc(c)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new Ke).fromArray(n))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}},CubicBezierCurve:go,CubicBezierCurve3:class extends ao{constructor(t=new Ke,e=new Ke,n=new Ke,i=new Ke){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new Ke){const n=e,i=this.v0,r=this.v1,a=this.v2,s=this.v3;return n.set(mo(t,i.x,r.x,a.x,s.x),mo(t,i.y,r.y,a.y,s.y),mo(t,i.z,r.z,a.z,s.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}},EllipseCurve:so,LineCurve:vo,LineCurve3:class extends ao{constructor(t=new Ke,e=new Ke){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=e}getPoint(t,e=new Ke){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new Ke){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}},QuadraticBezierCurve:_o,QuadraticBezierCurve3:class extends ao{constructor(t=new Ke,e=new Ke,n=new Ke){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new Ke){const n=e,i=this.v0,r=this.v1,a=this.v2;return n.set(fo(t,i.x,r.x,a.x),fo(t,i.y,r.y,a.y),fo(t,i.z,r.z,a.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}},SplineCurve:xo});class yo extends ao{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);if(!t.equals(e)){const n=!0===t.isVector2?"LineCurve":"LineCurve3";this.curves.push(new So[n](e,t))}return this}getPoint(t,e){const n=t*this.getLength(),i=this.getCurveLengths();let r=0;for(;r<i.length;){if(i[r]>=n){const t=i[r]-n,a=this.curves[r],s=a.getLength(),o=0===s?0:1-t/s;return a.getPointAt(o,e)}r++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const a=r[i],s=a.isEllipseCurve?2*t:a.isLineCurve||a.isLineCurve3?1:a.isSplineCurve?t*a.points.length:t,o=a.getPoints(s);for(let t=0;t<o.length;t++){const i=o[t];n&&n.equals(i)||(e.push(i),n=i)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push(n.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const n=this.curves[e];t.curves.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push((new So[n.type]).fromJSON(n))}return this}}class Mo extends yo{constructor(t){super(),this.type="Path",this.currentPoint=new ye,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new vo(this.currentPoint.clone(),new ye(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,i){const r=new _o(this.currentPoint.clone(),new ye(t,e),new ye(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}bezierCurveTo(t,e,n,i,r,a){const s=new go(this.currentPoint.clone(),new ye(t,e),new ye(n,i),new ye(r,a));return this.curves.push(s),this.currentPoint.set(r,a),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new xo(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,i,r,a){const s=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(t+s,e+o,n,i,r,a),this}absarc(t,e,n,i,r,a){return this.absellipse(t,e,n,n,i,r,a),this}ellipse(t,e,n,i,r,a,s,o){const l=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(t+l,e+c,n,i,r,a,s,o),this}absellipse(t,e,n,i,r,a,s,o){const l=new so(t,e,n,i,r,a,s,o);if(this.curves.length>0){const t=l.getPoint(0);t.equals(this.currentPoint)||this.lineTo(t.x,t.y)}this.curves.push(l);const c=l.getPoint(1);return this.currentPoint.copy(c),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class bo extends Mo{constructor(t){super(t),this.uuid=fe(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const n=this.holes[e];t.holes.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push((new Mo).fromJSON(n))}return this}}const Eo=function(t,e,n=2){const i=e&&e.length,r=i?e[0]*n:t.length;let a=To(t,0,r,n,!0);const s=[];if(!a||a.next===a.prev)return s;let o,l,c,h,u,d,p;if(i&&(a=function(t,e,n,i){const r=[];let a,s,o,l,c;for(a=0,s=e.length;a<s;a++)o=e[a]*i,l=a<s-1?e[a+1]*i:t.length,c=To(t,o,l,i,!1),c===c.next&&(c.steiner=!0),r.push(Oo(c));for(r.sort(Lo),a=0;a<r.length;a++)n=Wo(r[a],n);return n}(t,e,a,n)),t.length>80*n){o=c=t[0],l=h=t[1];for(let e=n;e<r;e+=n)u=t[e],d=t[e+1],u<o&&(o=u),d<l&&(l=d),u>c&&(c=u),d>h&&(h=d);p=Math.max(c-o,h-l),p=0!==p?32767/p:0}return Ao(a,s,n,o,l,p,0),s};function To(t,e,n,i,r){let a,s;if(r===function(t,e,n,i){let r=0;for(let a=e,s=n-i;a<n;a+=i)r+=(t[s]-t[a])*(t[a+1]+t[s+1]),s=a;return r}(t,e,n,i)>0)for(a=e;a<n;a+=i)s=qo(a,t[a],t[a+1],s);else for(a=n-i;a>=e;a-=i)s=qo(a,t[a],t[a+1],s);return s&&zo(s,s.next)&&(jo(s),s=s.next),s}function wo(t,e){if(!t)return t;e||(e=t);let n,i=t;do{if(n=!1,i.steiner||!zo(i,i.next)&&0!==ko(i.prev,i,i.next))i=i.next;else{if(jo(i),i=e=i.prev,i===i.next)break;n=!0}}while(n||i!==e);return e}function Ao(t,e,n,i,r,a,s){if(!t)return;!s&&a&&function(t,e,n,i){let r=t;do{0===r.z&&(r.z=Io(r.x,r.y,e,n,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next}while(r!==t);r.prevZ.nextZ=null,r.prevZ=null,function(t){let e,n,i,r,a,s,o,l,c=1;do{for(n=t,t=null,a=null,s=0;n;){for(s++,i=n,o=0,e=0;e<c&&(o++,i=i.nextZ,i);e++);for(l=c;o>0||l>0&&i;)0!==o&&(0===l||!i||n.z<=i.z)?(r=n,n=n.nextZ,o--):(r=i,i=i.nextZ,l--),a?a.nextZ=r:t=r,r.prevZ=a,a=r;n=i}a.nextZ=null,c*=2}while(s>1)}(r)}(t,i,r,a);let o,l,c=t;for(;t.prev!==t.next;)if(o=t.prev,l=t.next,a?Ro(t,i,r,a):Co(t))e.push(o.i/n|0),e.push(t.i/n|0),e.push(l.i/n|0),jo(t),t=l.next,c=l.next;else if((t=l)===c){s?1===s?Ao(t=Po(wo(t),e,n),e,n,i,r,a,2):2===s&&Uo(t,e,n,i,r,a):Ao(wo(t),e,n,i,r,a,1);break}}function Co(t){const e=t.prev,n=t,i=t.next;if(ko(e,n,i)>=0)return!1;const r=e.x,a=n.x,s=i.x,o=e.y,l=n.y,c=i.y,h=r<a?r<s?r:s:a<s?a:s,u=o<l?o<c?o:c:l<c?l:c,d=r>a?r>s?r:s:a>s?a:s,p=o>l?o>c?o:c:l>c?l:c;let f=i.next;for(;f!==e;){if(f.x>=h&&f.x<=d&&f.y>=u&&f.y<=p&&Do(r,o,a,l,s,c,f.x,f.y)&&ko(f.prev,f,f.next)>=0)return!1;f=f.next}return!0}function Ro(t,e,n,i){const r=t.prev,a=t,s=t.next;if(ko(r,a,s)>=0)return!1;const o=r.x,l=a.x,c=s.x,h=r.y,u=a.y,d=s.y,p=o<l?o<c?o:c:l<c?l:c,f=h<u?h<d?h:d:u<d?u:d,m=o>l?o>c?o:c:l>c?l:c,g=h>u?h>d?h:d:u>d?u:d,v=Io(p,f,e,n,i),_=Io(m,g,e,n,i);let x=t.prevZ,S=t.nextZ;for(;x&&x.z>=v&&S&&S.z<=_;){if(x.x>=p&&x.x<=m&&x.y>=f&&x.y<=g&&x!==r&&x!==s&&Do(o,h,l,u,c,d,x.x,x.y)&&ko(x.prev,x,x.next)>=0)return!1;if(x=x.prevZ,S.x>=p&&S.x<=m&&S.y>=f&&S.y<=g&&S!==r&&S!==s&&Do(o,h,l,u,c,d,S.x,S.y)&&ko(S.prev,S,S.next)>=0)return!1;S=S.nextZ}for(;x&&x.z>=v;){if(x.x>=p&&x.x<=m&&x.y>=f&&x.y<=g&&x!==r&&x!==s&&Do(o,h,l,u,c,d,x.x,x.y)&&ko(x.prev,x,x.next)>=0)return!1;x=x.prevZ}for(;S&&S.z<=_;){if(S.x>=p&&S.x<=m&&S.y>=f&&S.y<=g&&S!==r&&S!==s&&Do(o,h,l,u,c,d,S.x,S.y)&&ko(S.prev,S,S.next)>=0)return!1;S=S.nextZ}return!0}function Po(t,e,n){let i=t;do{const r=i.prev,a=i.next.next;!zo(r,a)&&Bo(r,i,i.next,a)&&Ho(r,a)&&Ho(a,r)&&(e.push(r.i/n|0),e.push(i.i/n|0),e.push(a.i/n|0),jo(i),jo(i.next),i=t=a),i=i.next}while(i!==t);return wo(i)}function Uo(t,e,n,i,r,a){let s=t;do{let t=s.next.next;for(;t!==s.prev;){if(s.i!==t.i&&Fo(s,t)){let o=Xo(s,t);return s=wo(s,s.next),o=wo(o,o.next),Ao(s,e,n,i,r,a,0),void Ao(o,e,n,i,r,a,0)}t=t.next}s=s.next}while(s!==t)}function Lo(t,e){return t.x-e.x}function Wo(t,e){const n=function(t,e){let n,i=e,r=-1/0;const a=t.x,s=t.y;do{if(s<=i.y&&s>=i.next.y&&i.next.y!==i.y){const t=i.x+(s-i.y)*(i.next.x-i.x)/(i.next.y-i.y);if(t<=a&&t>r&&(r=t,n=i.x<i.next.x?i:i.next,t===a))return n}i=i.next}while(i!==e);if(!n)return null;const o=n,l=n.x,c=n.y;let h,u=1/0;i=n;do{a>=i.x&&i.x>=l&&a!==i.x&&Do(s<c?a:r,s,l,c,s<c?r:a,s,i.x,i.y)&&(h=Math.abs(s-i.y)/(a-i.x),Ho(i,t)&&(h<u||h===u&&(i.x>n.x||i.x===n.x&&No(n,i)))&&(n=i,u=h)),i=i.next}while(i!==o);return n}(t,e);if(!n)return e;const i=Xo(n,t);return wo(i,i.next),wo(n,n.next)}function No(t,e){return ko(t.prev,t,e.prev)<0&&ko(e.next,t,t.next)<0}function Io(t,e,n,i,r){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=(t-n)*r|0)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=(e-i)*r|0)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function Oo(t){let e=t,n=t;do{(e.x<n.x||e.x===n.x&&e.y<n.y)&&(n=e),e=e.next}while(e!==t);return n}function Do(t,e,n,i,r,a,s,o){return(r-s)*(e-o)>=(t-s)*(a-o)&&(t-s)*(i-o)>=(n-s)*(e-o)&&(n-s)*(a-o)>=(r-s)*(i-o)}function Fo(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){let n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&Bo(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}(t,e)&&(Ho(t,e)&&Ho(e,t)&&function(t,e){let n=t,i=!1;const r=(t.x+e.x)/2,a=(t.y+e.y)/2;do{n.y>a!=n.next.y>a&&n.next.y!==n.y&&r<(n.next.x-n.x)*(a-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next}while(n!==t);return i}(t,e)&&(ko(t.prev,t,e.prev)||ko(t,e.prev,e))||zo(t,e)&&ko(t.prev,t,t.next)>0&&ko(e.prev,e,e.next)>0)}function ko(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function zo(t,e){return t.x===e.x&&t.y===e.y}function Bo(t,e,n,i){const r=Vo(ko(t,e,n)),a=Vo(ko(t,e,i)),s=Vo(ko(n,i,t)),o=Vo(ko(n,i,e));return r!==a&&s!==o||(!(0!==r||!Go(t,n,e))||(!(0!==a||!Go(t,i,e))||(!(0!==s||!Go(n,t,i))||!(0!==o||!Go(n,e,i)))))}function Go(t,e,n){return e.x<=Math.max(t.x,n.x)&&e.x>=Math.min(t.x,n.x)&&e.y<=Math.max(t.y,n.y)&&e.y>=Math.min(t.y,n.y)}function Vo(t){return t>0?1:t<0?-1:0}function Ho(t,e){return ko(t.prev,t,t.next)<0?ko(t,e,t.next)>=0&&ko(t,t.prev,e)>=0:ko(t,e,t.prev)<0||ko(t,t.next,e)<0}function Xo(t,e){const n=new Jo(t.i,t.x,t.y),i=new Jo(e.i,e.x,e.y),r=t.next,a=e.prev;return t.next=e,e.prev=t,n.next=r,r.prev=n,i.next=n,n.prev=i,a.next=i,i.prev=a,i}function qo(t,e,n,i){const r=new Jo(t,e,n);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function jo(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function Jo(t,e,n){this.i=t,this.x=e,this.y=n,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}class Ko{static area(t){const e=t.length;let n=0;for(let i=e-1,r=0;r<e;i=r++)n+=t[i].x*t[r].y-t[r].x*t[i].y;return.5*n}static isClockWise(t){return Ko.area(t)<0}static triangulateShape(t,e){const n=[],i=[],r=[];Qo(t),Zo(n,t);let a=t.length;e.forEach(Qo);for(let o=0;o<e.length;o++)i.push(a),a+=e[o].length,Zo(n,e[o]);const s=Eo(n,i);for(let o=0;o<s.length;o+=3)r.push(s.slice(o,o+3));return r}}function Qo(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function Zo(t,e){for(let n=0;n<e.length;n++)t.push(e[n].x),t.push(e[n].y)}class Yo extends Ui{constructor(t=new bo([new ye(.5,.5),new ye(-.5,.5),new ye(-.5,-.5),new ye(.5,-.5)]),e={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,i=[],r=[];for(let s=0,o=t.length;s<o;s++){a(t[s])}function a(t){const a=[],s=void 0!==e.curveSegments?e.curveSegments:12,o=void 0!==e.steps?e.steps:1,l=void 0!==e.depth?e.depth:1;let c=void 0===e.bevelEnabled||e.bevelEnabled,h=void 0!==e.bevelThickness?e.bevelThickness:.2,u=void 0!==e.bevelSize?e.bevelSize:h-.1,d=void 0!==e.bevelOffset?e.bevelOffset:0,p=void 0!==e.bevelSegments?e.bevelSegments:3;const f=e.extrudePath,m=void 0!==e.UVGenerator?e.UVGenerator:$o;let g,v,_,x,S,y=!1;f&&(g=f.getSpacedPoints(o),y=!0,c=!1,v=f.computeFrenetFrames(o,!1),_=new Ke,x=new Ke,S=new Ke),c||(p=0,h=0,u=0,d=0);const M=t.extractPoints(s);let b=M.shape;const E=M.holes;if(!Ko.isClockWise(b)){b=b.reverse();for(let t=0,e=E.length;t<e;t++){const e=E[t];Ko.isClockWise(e)&&(E[t]=e.reverse())}}const T=Ko.triangulateShape(b,E),w=b;for(let e=0,n=E.length;e<n;e++){const t=E[e];b=b.concat(t)}function A(t,e,n){return t.clone().addScaledVector(e,n)}const C=b.length,R=T.length;function P(t,e,n){let i,r,a;const s=t.x-e.x,o=t.y-e.y,l=n.x-t.x,c=n.y-t.y,h=s*s+o*o,u=s*c-o*l;if(Math.abs(u)>Number.EPSILON){const u=Math.sqrt(h),d=Math.sqrt(l*l+c*c),p=e.x-o/u,f=e.y+s/u,m=((n.x-c/d-p)*c-(n.y+l/d-f)*l)/(s*c-o*l);i=p+s*m-t.x,r=f+o*m-t.y;const g=i*i+r*r;if(g<=2)return new ye(i,r);a=Math.sqrt(g/2)}else{let t=!1;s>Number.EPSILON?l>Number.EPSILON&&(t=!0):s<-Number.EPSILON?l<-Number.EPSILON&&(t=!0):Math.sign(o)===Math.sign(c)&&(t=!0),t?(i=-o,r=s,a=Math.sqrt(h)):(i=s,r=o,a=Math.sqrt(h/2))}return new ye(i/a,r/a)}const U=[];for(let e=0,n=w.length,i=n-1,r=e+1;e<n;e++,i++,r++)i===n&&(i=0),r===n&&(r=0),U[e]=P(w[e],w[i],w[r]);const L=[];let W,N=U.concat();for(let e=0,n=E.length;e<n;e++){const t=E[e];W=[];for(let e=0,n=t.length,i=n-1,r=e+1;e<n;e++,i++,r++)i===n&&(i=0),r===n&&(r=0),W[e]=P(t[e],t[i],t[r]);L.push(W),N=N.concat(W)}for(let e=0;e<p;e++){const t=e/p,n=h*Math.cos(t*Math.PI/2),i=u*Math.sin(t*Math.PI/2)+d;for(let e=0,r=w.length;e<r;e++){const t=A(w[e],U[e],i);D(t.x,t.y,-n)}for(let e=0,r=E.length;e<r;e++){const t=E[e];W=L[e];for(let e=0,r=t.length;e<r;e++){const r=A(t[e],W[e],i);D(r.x,r.y,-n)}}}const I=u+d;for(let e=0;e<C;e++){const t=c?A(b[e],N[e],I):b[e];y?(x.copy(v.normals[0]).multiplyScalar(t.x),_.copy(v.binormals[0]).multiplyScalar(t.y),S.copy(g[0]).add(x).add(_),D(S.x,S.y,S.z)):D(t.x,t.y,0)}for(let e=1;e<=o;e++)for(let t=0;t<C;t++){const n=c?A(b[t],N[t],I):b[t];y?(x.copy(v.normals[e]).multiplyScalar(n.x),_.copy(v.binormals[e]).multiplyScalar(n.y),S.copy(g[e]).add(x).add(_),D(S.x,S.y,S.z)):D(n.x,n.y,l/o*e)}for(let e=p-1;e>=0;e--){const t=e/p,n=h*Math.cos(t*Math.PI/2),i=u*Math.sin(t*Math.PI/2)+d;for(let e=0,r=w.length;e<r;e++){const t=A(w[e],U[e],i);D(t.x,t.y,l+n)}for(let e=0,r=E.length;e<r;e++){const t=E[e];W=L[e];for(let e=0,r=t.length;e<r;e++){const r=A(t[e],W[e],i);y?D(r.x,r.y+g[o-1].y,g[o-1].x+n):D(r.x,r.y,l+n)}}}function O(t,e){let n=t.length;for(;--n>=0;){const i=n;let r=n-1;r<0&&(r=t.length-1);for(let t=0,n=o+2*p;t<n;t++){const n=C*t,a=C*(t+1);k(e+i+n,e+r+n,e+r+a,e+i+a)}}}function D(t,e,n){a.push(t),a.push(e),a.push(n)}function F(t,e,r){z(t),z(e),z(r);const a=i.length/3,s=m.generateTopUV(n,i,a-3,a-2,a-1);B(s[0]),B(s[1]),B(s[2])}function k(t,e,r,a){z(t),z(e),z(a),z(e),z(r),z(a);const s=i.length/3,o=m.generateSideWallUV(n,i,s-6,s-3,s-2,s-1);B(o[0]),B(o[1]),B(o[3]),B(o[1]),B(o[2]),B(o[3])}function z(t){i.push(a[3*t+0]),i.push(a[3*t+1]),i.push(a[3*t+2])}function B(t){r.push(t.x),r.push(t.y)}!function(){const t=i.length/3;if(c){let t=0,e=C*t;for(let n=0;n<R;n++){const t=T[n];F(t[2]+e,t[1]+e,t[0]+e)}t=o+2*p,e=C*t;for(let n=0;n<R;n++){const t=T[n];F(t[0]+e,t[1]+e,t[2]+e)}}else{for(let t=0;t<R;t++){const e=T[t];F(e[2],e[1],e[0])}for(let t=0;t<R;t++){const e=T[t];F(e[0]+C*o,e[1]+C*o,e[2]+C*o)}}n.addGroup(t,i.length/3-t,0)}(),function(){const t=i.length/3;let e=0;O(w,e),e+=w.length;for(let n=0,i=E.length;n<i;n++){const t=E[n];O(t,e),e+=t.length}n.addGroup(t,i.length/3-t,1)}()}this.setAttribute("position",new bi(i,3)),this.setAttribute("uv",new bi(r,2)),this.computeVertexNormals()}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON();return function(t,e,n){if(n.shapes=[],Array.isArray(t))for(let i=0,r=t.length;i<r;i++){const e=t[i];n.shapes.push(e.uuid)}else n.shapes.push(t.uuid);n.options=Object.assign({},e),void 0!==e.extrudePath&&(n.options.extrudePath=e.extrudePath.toJSON());return n}(this.parameters.shapes,this.parameters.options,t)}static fromJSON(t,e){const n=[];for(let r=0,a=t.shapes.length;r<a;r++){const i=e[t.shapes[r]];n.push(i)}const i=t.options.extrudePath;return void 0!==i&&(t.options.extrudePath=(new So[i.type]).fromJSON(i)),new Yo(n,t.options)}}const $o={generateTopUV:function(t,e,n,i,r){const a=e[3*n],s=e[3*n+1],o=e[3*i],l=e[3*i+1],c=e[3*r],h=e[3*r+1];return[new ye(a,s),new ye(o,l),new ye(c,h)]},generateSideWallUV:function(t,e,n,i,r,a){const s=e[3*n],o=e[3*n+1],l=e[3*n+2],c=e[3*i],h=e[3*i+1],u=e[3*i+2],d=e[3*r],p=e[3*r+1],f=e[3*r+2],m=e[3*a],g=e[3*a+1],v=e[3*a+2];return Math.abs(o-h)<Math.abs(s-c)?[new ye(s,1-l),new ye(c,1-u),new ye(d,1-f),new ye(m,1-v)]:[new ye(o,1-l),new ye(h,1-u),new ye(p,1-f),new ye(g,1-v)]}};class tl extends gi{constructor(t){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new pi(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new pi(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new ye(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class el extends gi{constructor(t){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new pi(16777215),this.specular=new pi(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new pi(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new ye(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=pt,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class nl extends gi{constructor(t){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new pi(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new pi(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new ye(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}class il extends gi{constructor(t){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new pi(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new ye(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.flatShading=t.flatShading,this.fog=t.fog,this}}const rl={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};class al{constructor(t,e,n){const i=this;let r,a=!1,s=0,o=0;const l=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(t){o++,!1===a&&void 0!==i.onStart&&i.onStart(t,s,o),a=!0},this.itemEnd=function(t){s++,void 0!==i.onProgress&&i.onProgress(t,s,o),s===o&&(a=!1,void 0!==i.onLoad&&i.onLoad())},this.itemError=function(t){void 0!==i.onError&&i.onError(t)},this.resolveURL=function(t){return r?r(t):t},this.setURLModifier=function(t){return r=t,this},this.addHandler=function(t,e){return l.push(t,e),this},this.removeHandler=function(t){const e=l.indexOf(t);return-1!==e&&l.splice(e,2),this},this.getHandler=function(t){for(let e=0,n=l.length;e<n;e+=2){const n=l[e],i=l[e+1];if(n.global&&(n.lastIndex=0),n.test(t))return i}return null}}}const sl=new al;class ol{constructor(t){this.manager=void 0!==t?t:sl,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const n=this;return new Promise((function(i,r){n.load(t,i,e,r)}))}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}ol.DEFAULT_MATERIAL_NAME="__DEFAULT";const ll={};class cl extends Error{constructor(t,e){super(t),this.response=e}}class hl extends ol{constructor(t){super(t)}load(t,e,n,i){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const r=rl.get(t);if(void 0!==r)return this.manager.itemStart(t),setTimeout((()=>{e&&e(r),this.manager.itemEnd(t)}),0),r;if(void 0!==ll[t])return void ll[t].push({onLoad:e,onProgress:n,onError:i});ll[t]=[],ll[t].push({onLoad:e,onProgress:n,onError:i});const a=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),s=this.mimeType,o=this.responseType;fetch(a).then((e=>{if(200===e.status||0===e.status){if(e.status,"undefined"==typeof ReadableStream||void 0===e.body||void 0===e.body.getReader)return e;const n=ll[t],i=e.body.getReader(),r=e.headers.get("Content-Length")||e.headers.get("X-File-Size"),a=r?parseInt(r):0,s=0!==a;let o=0;const l=new ReadableStream({start(t){!function e(){i.read().then((({done:i,value:r})=>{if(i)t.close();else{o+=r.byteLength;const i=new ProgressEvent("progress",{lengthComputable:s,loaded:o,total:a});for(let t=0,e=n.length;t<e;t++){const e=n[t];e.onProgress&&e.onProgress(i)}t.enqueue(r),e()}}))}()}});return new Response(l)}throw new cl(`fetch for "${e.url}" responded with ${e.status}: ${e.statusText}`,e)})).then((t=>{switch(o){case"arraybuffer":return t.arrayBuffer();case"blob":return t.blob();case"document":return t.text().then((t=>(new DOMParser).parseFromString(t,s)));case"json":return t.json();default:if(void 0===s)return t.text();{const e=/charset="?([^;"\s]*)"?/i.exec(s),n=e&&e[1]?e[1].toLowerCase():void 0,i=new TextDecoder(n);return t.arrayBuffer().then((t=>i.decode(t)))}}})).then((e=>{rl.add(t,e);const n=ll[t];delete ll[t];for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onLoad&&i.onLoad(e)}})).catch((e=>{const n=ll[t];if(void 0===n)throw this.manager.itemError(t),e;delete ll[t];for(let t=0,i=n.length;t<i;t++){const i=n[t];i.onError&&i.onError(e)}this.manager.itemError(t)})).finally((()=>{this.manager.itemEnd(t)})),this.manager.itemStart(t)}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}}class ul extends ol{constructor(t){super(t)}load(t,e,n,i){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,a=rl.get(t);if(void 0!==a)return r.manager.itemStart(t),setTimeout((function(){e&&e(a),r.manager.itemEnd(t)}),0),a;const s=Te("img");function o(){c(),rl.add(t,this),e&&e(this),r.manager.itemEnd(t)}function l(e){c(),i&&i(e),r.manager.itemError(t),r.manager.itemEnd(t)}function c(){s.removeEventListener("load",o,!1),s.removeEventListener("error",l,!1)}return s.addEventListener("load",o,!1),s.addEventListener("error",l,!1),"data:"!==t.slice(0,5)&&void 0!==this.crossOrigin&&(s.crossOrigin=this.crossOrigin),r.manager.itemStart(t),s.src=t,s}}class dl extends ol{constructor(t){super(t)}load(t,e,n,i){const r=new Ge,a=new ul(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(t,(function(t){r.image=t,r.needsUpdate=!0,void 0!==e&&e(r)}),n,i),r}}class pl extends Zn{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new pi(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}const fl=new wn,ml=new Ke,gl=new Ke;class vl{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ye(512,512),this.map=null,this.mapPass=null,this.matrix=new wn,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new _r,this._frameExtents=new ye(1,1),this._viewportCount=1,this._viewports=[new Ve(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;ml.setFromMatrixPosition(t.matrixWorld),e.position.copy(ml),gl.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(gl),e.updateMatrixWorld(),fl.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(fl),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(fl)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const t={};return 0!==this.bias&&(t.bias=this.bias),0!==this.normalBias&&(t.normalBias=this.normalBias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class _l extends vl{constructor(){super(new or(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(t){const e=this.camera,n=2*pe*t.angle*this.focus,i=this.mapSize.width/this.mapSize.height,r=t.distance||e.far;n===e.fov&&i===e.aspect&&r===e.far||(e.fov=n,e.aspect=i,e.far=r,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}class xl extends pl{constructor(t,e,n=0,i=Math.PI/3,r=0,a=2){super(t,e),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Zn.DEFAULT_UP),this.updateMatrix(),this.target=new Zn,this.distance=n,this.angle=i,this.penumbra=r,this.decay=a,this.map=null,this.shadow=new _l}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}const Sl=new wn,yl=new Ke,Ml=new Ke;class bl extends vl{constructor(){super(new or(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new ye(4,2),this._viewportCount=6,this._viewports=[new Ve(2,1,1,1),new Ve(0,1,1,1),new Ve(3,1,1,1),new Ve(1,1,1,1),new Ve(3,0,1,1),new Ve(1,0,1,1)],this._cubeDirections=[new Ke(1,0,0),new Ke(-1,0,0),new Ke(0,0,1),new Ke(0,0,-1),new Ke(0,1,0),new Ke(0,-1,0)],this._cubeUps=[new Ke(0,1,0),new Ke(0,1,0),new Ke(0,1,0),new Ke(0,1,0),new Ke(0,0,1),new Ke(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,i=this.matrix,r=t.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),yl.setFromMatrixPosition(t.matrixWorld),n.position.copy(yl),Ml.copy(n.position),Ml.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(Ml),n.updateMatrixWorld(),i.makeTranslation(-yl.x,-yl.y,-yl.z),Sl.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Sl)}}class El extends pl{constructor(t,e,n=0,i=2){super(t,e),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new bl}get power(){return 4*this.intensity*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}class Tl extends vl{constructor(){super(new Lr(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class wl extends pl{constructor(t,e){super(t,e),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Zn.DEFAULT_UP),this.updateMatrix(),this.target=new Zn,this.shadow=new Tl}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}const Al=new ye;class Cl{constructor(t=new ye(1/0,1/0),e=new ye(-1/0,-1/0)){this.isBox2=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Al.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,Al).distanceTo(t)}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}class Rl{constructor(){this.type="ShapePath",this.color=new pi,this.subPaths=[],this.currentPath=null}moveTo(t,e){return this.currentPath=new Mo,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this}lineTo(t,e){return this.currentPath.lineTo(t,e),this}quadraticCurveTo(t,e,n,i){return this.currentPath.quadraticCurveTo(t,e,n,i),this}bezierCurveTo(t,e,n,i,r,a){return this.currentPath.bezierCurveTo(t,e,n,i,r,a),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(t){function e(t,e){const n=e.length;let i=!1;for(let r=n-1,a=0;a<n;r=a++){let n=e[r],s=e[a],o=s.x-n.x,l=s.y-n.y;if(Math.abs(l)>Number.EPSILON){if(l<0&&(n=e[a],o=-o,s=e[r],l=-l),t.y<n.y||t.y>s.y)continue;if(t.y===n.y){if(t.x===n.x)return!0}else{const e=l*(t.x-n.x)-o*(t.y-n.y);if(0===e)return!0;if(e<0)continue;i=!i}}else{if(t.y!==n.y)continue;if(s.x<=t.x&&t.x<=n.x||n.x<=t.x&&t.x<=s.x)return!0}}return i}const n=Ko.isClockWise,i=this.subPaths;if(0===i.length)return[];let r,a,s;const o=[];if(1===i.length)return a=i[0],s=new bo,s.curves=a.curves,o.push(s),o;let l=!n(i[0].getPoints());l=t?!l:l;const c=[],h=[];let u,d,p=[],f=0;h[f]=void 0,p[f]=[];for(let m=0,g=i.length;m<g;m++)a=i[m],u=a.getPoints(),r=n(u),r=t?!r:r,r?(!l&&h[f]&&f++,h[f]={s:new bo,p:u},h[f].s.curves=a.curves,l&&f++,p[f]=[]):p[f].push({h:a,p:u[0]});if(!h[0])return function(t){const e=[];for(let n=0,i=t.length;n<i;n++){const i=t[n],r=new bo;r.curves=i.curves,e.push(r)}return e}(i);if(h.length>1){let t=!1,n=0;for(let e=0,i=h.length;e<i;e++)c[e]=[];for(let i=0,r=h.length;i<r;i++){const r=p[i];for(let a=0;a<r.length;a++){const s=r[a];let o=!0;for(let r=0;r<h.length;r++)e(s.p,h[r].p)&&(i!==r&&n++,o?(o=!1,c[r].push(s)):t=!0);o&&c[i].push(s)}}n>0&&!1===t&&(p=c)}for(let m=0,g=h.length;m<g;m++){s=h[m].s,o.push(s),d=p[m];for(let t=0,e=d.length;t<e;t++)s.holes.push(d[t].h)}return o}}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:st}})),"undefined"!=typeof window&&(window.__THREE__||(window.__THREE__=st));const Pl=Zt;class Ul extends ol{constructor(t){super(t),this.defaultDPI=90,this.defaultUnit="px"}load(t,e,n,i){const r=this,a=new hl(r.manager);a.setPath(r.path),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(t,(function(n){try{e(r.parse(n))}catch(a){i&&i(a),r.manager.itemError(t)}}),n,i)}parse(t){const e=this;function n(t,e,n,r,a,s,o,l){if(0==e||0==n)return void t.lineTo(l.x,l.y);r=r*Math.PI/180,e=Math.abs(e),n=Math.abs(n);const c=(o.x-l.x)/2,h=(o.y-l.y)/2,u=Math.cos(r)*c+Math.sin(r)*h,d=-Math.sin(r)*c+Math.cos(r)*h;let p=e*e,f=n*n;const m=u*u,g=d*d,v=m/p+g/f;if(v>1){const t=Math.sqrt(v);p=(e*=t)*e,f=(n*=t)*n}const _=p*g+f*m,x=(p*f-_)/_;let S=Math.sqrt(Math.max(0,x));a===s&&(S=-S);const y=S*e*d/n,M=-S*n*u/e,b=Math.cos(r)*y-Math.sin(r)*M+(o.x+l.x)/2,E=Math.sin(r)*y+Math.cos(r)*M+(o.y+l.y)/2,T=i(1,0,(u-y)/e,(d-M)/n),w=i((u-y)/e,(d-M)/n,(-u-y)/e,(-d-M)/n)%(2*Math.PI);t.currentPath.absellipse(b,E,e,n,T,T+w,0===s,r)}function i(t,e,n,i){const r=t*n+e*i,a=Math.sqrt(t*t+e*e)*Math.sqrt(n*n+i*i);let s=Math.acos(Math.max(-1,Math.min(1,r/a)));return t*i-e*n<0&&(s=-s),s}function r(t,e){e=Object.assign({},e);let n={};if(t.hasAttribute("class")){const e=t.getAttribute("class").split(/\s/).filter(Boolean).map((t=>t.trim()));for(let t=0;t<e.length;t++)n=Object.assign(n,m["."+e[t]])}function i(i,r,a){void 0===a&&(a=function(t){return t.startsWith("url"),t}),t.hasAttribute(i)&&(e[r]=a(t.getAttribute(i))),n[i]&&(e[r]=a(n[i])),t.style&&""!==t.style[i]&&(e[r]=a(t.style[i]))}function r(t){return Math.max(0,Math.min(1,c(t)))}function a(t){return Math.max(0,c(t))}return t.hasAttribute("id")&&(n=Object.assign(n,m["#"+t.getAttribute("id")])),i("fill","fill"),i("fill-opacity","fillOpacity",r),i("fill-rule","fillRule"),i("opacity","opacity",r),i("stroke","stroke"),i("stroke-opacity","strokeOpacity",r),i("stroke-width","strokeWidth",a),i("stroke-linejoin","strokeLineJoin"),i("stroke-linecap","strokeLineCap"),i("stroke-miterlimit","strokeMiterLimit",a),i("visibility","visibility"),e}function a(t,e){return t-(e-t)}function s(t,e,n){if("string"!=typeof t)throw new TypeError("Invalid input: "+typeof t);const i={SEPARATOR:/[ \t\r\n\,.\-+]/,WHITESPACE:/[ \t\r\n]/,DIGIT:/[\d]/,SIGN:/[-+]/,POINT:/\./,COMMA:/,/,EXP:/e/i,FLAGS:/[01]/};let r=0,a=!0,s="",o="";const l=[];function c(t,e,n){const i=new SyntaxError('Unexpected character "'+t+'" at index '+e+".");throw i.partial=n,i}function h(){""!==s&&(""===o?l.push(Number(s)):l.push(Number(s)*Math.pow(10,Number(o)))),s="",o=""}let u;const d=t.length;for(let p=0;p<d;p++)if(u=t[p],Array.isArray(e)&&e.includes(l.length%n)&&i.FLAGS.test(u))r=1,s=u,h();else{if(0===r){if(i.WHITESPACE.test(u))continue;if(i.DIGIT.test(u)||i.SIGN.test(u)){r=1,s=u;continue}if(i.POINT.test(u)){r=2,s=u;continue}i.COMMA.test(u)&&(a&&c(u,p,l),a=!0)}if(1===r){if(i.DIGIT.test(u)){s+=u;continue}if(i.POINT.test(u)){s+=u,r=2;continue}if(i.EXP.test(u)){r=3;continue}i.SIGN.test(u)&&1===s.length&&i.SIGN.test(s[0])&&c(u,p,l)}if(2===r){if(i.DIGIT.test(u)){s+=u;continue}if(i.EXP.test(u)){r=3;continue}i.POINT.test(u)&&"."===s[s.length-1]&&c(u,p,l)}if(3===r){if(i.DIGIT.test(u)){o+=u;continue}if(i.SIGN.test(u)){if(""===o){o+=u;continue}1===o.length&&i.SIGN.test(o)&&c(u,p,l)}}i.WHITESPACE.test(u)?(h(),r=0,a=!1):i.COMMA.test(u)?(h(),r=0,a=!0):i.SIGN.test(u)?(h(),r=1,s=u):i.POINT.test(u)?(h(),r=2,s=u):c(u,p,l)}return h(),l}const o=["mm","cm","in","pt","pc","px"],l={mm:{mm:1,cm:.1,in:1/25.4,pt:72/25.4,pc:6/25.4,px:-1},cm:{mm:10,cm:1,in:1/2.54,pt:72/2.54,pc:6/2.54,px:-1},in:{mm:25.4,cm:2.54,in:1,pt:72,pc:6,px:-1},pt:{mm:25.4/72,cm:2.54/72,in:1/72,pt:1,pc:6/72,px:-1},pc:{mm:25.4/6,cm:2.54/6,in:1/6,pt:12,pc:1,px:-1},px:{px:1}};function c(t){let n,i="px";if("string"==typeof t||t instanceof String)for(let e=0,r=o.length;e<r;e++){const n=o[e];if(t.endsWith(n)){i=n,t=t.substring(0,t.length-n.length);break}}return"px"===i&&"px"!==e.defaultUnit?n=l.in[e.defaultUnit]/e.defaultDPI:(n=l[i][e.defaultUnit],n<0&&(n=l[i].in*e.defaultDPI)),n*parseFloat(t)}function h(t){const e=t.elements;return e[0]*e[4]-e[1]*e[3]<0}function u(t){const e=t.elements,n=e[0]*e[3]+e[1]*e[4];if(0===n)return!1;const i=d(t),r=p(t);return Math.abs(n/(i*r))>Number.EPSILON}function d(t){const e=t.elements;return Math.sqrt(e[0]*e[0]+e[1]*e[1])}function p(t){const e=t.elements;return Math.sqrt(e[3]*e[3]+e[4]*e[4])}const f=[],m={},g=[],v=new Me,_=new Me,x=new Me,S=new Me,y=new ye,M=new Ke,b=new Me,E=(new DOMParser).parseFromString(t,"image/svg+xml");!function t(e,i){if(1!==e.nodeType)return;const o=function(t){if(!(t.hasAttribute("transform")||"use"===t.nodeName&&(t.hasAttribute("x")||t.hasAttribute("y"))))return null;const e=function(t){const e=new Me,n=v;if("use"===t.nodeName&&(t.hasAttribute("x")||t.hasAttribute("y"))){const n=c(t.getAttribute("x")),i=c(t.getAttribute("y"));e.translate(n,i)}if(t.hasAttribute("transform")){const i=t.getAttribute("transform").split(")");for(let t=i.length-1;t>=0;t--){const r=i[t].trim();if(""===r)continue;const a=r.indexOf("("),o=r.length;if(a>0&&a<o){const t=r.slice(0,a),e=s(r.slice(a+1));switch(n.identity(),t){case"translate":if(e.length>=1){const t=e[0];let i=0;e.length>=2&&(i=e[1]),n.translate(t,i)}break;case"rotate":if(e.length>=1){let t=0,i=0,r=0;t=e[0]*Math.PI/180,e.length>=3&&(i=e[1],r=e[2]),_.makeTranslation(-i,-r),x.makeRotation(t),S.multiplyMatrices(x,_),_.makeTranslation(i,r),n.multiplyMatrices(_,S)}break;case"scale":if(e.length>=1){const t=e[0];let i=t;e.length>=2&&(i=e[1]),n.scale(t,i)}break;case"skewX":1===e.length&&n.set(1,Math.tan(e[0]*Math.PI/180),0,0,1,0,0,0,1);break;case"skewY":1===e.length&&n.set(1,0,0,Math.tan(e[0]*Math.PI/180),1,0,0,0,1);break;case"matrix":6===e.length&&n.set(e[0],e[2],e[4],e[1],e[3],e[5],0,0,1)}}e.premultiply(n)}}return e}(t);g.length>0&&e.premultiply(g[g.length-1]);return b.copy(e),g.push(e),e}(e);let l=!1,E=null;switch(e.nodeName){case"svg":case"g":i=r(e,i);break;case"style":!function(t){if(!t.sheet||!t.sheet.cssRules||!t.sheet.cssRules.length)return;for(let e=0;e<t.sheet.cssRules.length;e++){const n=t.sheet.cssRules[e];if(1!==n.type)continue;const i=n.selectorText.split(/,/gm).filter(Boolean).map((t=>t.trim()));for(let t=0;t<i.length;t++){const e=Object.fromEntries(Object.entries(n.style).filter((([,t])=>""!==t)));m[i[t]]=Object.assign(m[i[t]]||{},e)}}}(e);break;case"path":i=r(e,i),e.hasAttribute("d")&&(E=function(t){const e=new Rl,i=new ye,r=new ye,o=new ye;let l=!0,c=!1;const h=t.getAttribute("d");if(""===h||"none"===h)return null;const u=h.match(/[a-df-z][^a-df-z]*/gi);for(let d=0,p=u.length;d<p;d++){const t=u[d],h=t.charAt(0),p=t.slice(1).trim();let f;switch(!0===l&&(c=!0,l=!1),h){case"M":f=s(p);for(let t=0,n=f.length;t<n;t+=2)i.x=f[t+0],i.y=f[t+1],r.x=i.x,r.y=i.y,0===t?e.moveTo(i.x,i.y):e.lineTo(i.x,i.y),0===t&&o.copy(i);break;case"H":f=s(p);for(let t=0,n=f.length;t<n;t++)i.x=f[t],r.x=i.x,r.y=i.y,e.lineTo(i.x,i.y),0===t&&!0===c&&o.copy(i);break;case"V":f=s(p);for(let t=0,n=f.length;t<n;t++)i.y=f[t],r.x=i.x,r.y=i.y,e.lineTo(i.x,i.y),0===t&&!0===c&&o.copy(i);break;case"L":f=s(p);for(let t=0,n=f.length;t<n;t+=2)i.x=f[t+0],i.y=f[t+1],r.x=i.x,r.y=i.y,e.lineTo(i.x,i.y),0===t&&!0===c&&o.copy(i);break;case"C":f=s(p);for(let t=0,n=f.length;t<n;t+=6)e.bezierCurveTo(f[t+0],f[t+1],f[t+2],f[t+3],f[t+4],f[t+5]),r.x=f[t+2],r.y=f[t+3],i.x=f[t+4],i.y=f[t+5],0===t&&!0===c&&o.copy(i);break;case"S":f=s(p);for(let t=0,n=f.length;t<n;t+=4)e.bezierCurveTo(a(i.x,r.x),a(i.y,r.y),f[t+0],f[t+1],f[t+2],f[t+3]),r.x=f[t+0],r.y=f[t+1],i.x=f[t+2],i.y=f[t+3],0===t&&!0===c&&o.copy(i);break;case"Q":f=s(p);for(let t=0,n=f.length;t<n;t+=4)e.quadraticCurveTo(f[t+0],f[t+1],f[t+2],f[t+3]),r.x=f[t+0],r.y=f[t+1],i.x=f[t+2],i.y=f[t+3],0===t&&!0===c&&o.copy(i);break;case"T":f=s(p);for(let t=0,n=f.length;t<n;t+=2){const n=a(i.x,r.x),s=a(i.y,r.y);e.quadraticCurveTo(n,s,f[t+0],f[t+1]),r.x=n,r.y=s,i.x=f[t+0],i.y=f[t+1],0===t&&!0===c&&o.copy(i)}break;case"A":f=s(p,[3,4],7);for(let t=0,a=f.length;t<a;t+=7){if(f[t+5]==i.x&&f[t+6]==i.y)continue;const a=i.clone();i.x=f[t+5],i.y=f[t+6],r.x=i.x,r.y=i.y,n(e,f[t],f[t+1],f[t+2],f[t+3],f[t+4],a,i),0===t&&!0===c&&o.copy(i)}break;case"m":f=s(p);for(let t=0,n=f.length;t<n;t+=2)i.x+=f[t+0],i.y+=f[t+1],r.x=i.x,r.y=i.y,0===t?e.moveTo(i.x,i.y):e.lineTo(i.x,i.y),0===t&&o.copy(i);break;case"h":f=s(p);for(let t=0,n=f.length;t<n;t++)i.x+=f[t],r.x=i.x,r.y=i.y,e.lineTo(i.x,i.y),0===t&&!0===c&&o.copy(i);break;case"v":f=s(p);for(let t=0,n=f.length;t<n;t++)i.y+=f[t],r.x=i.x,r.y=i.y,e.lineTo(i.x,i.y),0===t&&!0===c&&o.copy(i);break;case"l":f=s(p);for(let t=0,n=f.length;t<n;t+=2)i.x+=f[t+0],i.y+=f[t+1],r.x=i.x,r.y=i.y,e.lineTo(i.x,i.y),0===t&&!0===c&&o.copy(i);break;case"c":f=s(p);for(let t=0,n=f.length;t<n;t+=6)e.bezierCurveTo(i.x+f[t+0],i.y+f[t+1],i.x+f[t+2],i.y+f[t+3],i.x+f[t+4],i.y+f[t+5]),r.x=i.x+f[t+2],r.y=i.y+f[t+3],i.x+=f[t+4],i.y+=f[t+5],0===t&&!0===c&&o.copy(i);break;case"s":f=s(p);for(let t=0,n=f.length;t<n;t+=4)e.bezierCurveTo(a(i.x,r.x),a(i.y,r.y),i.x+f[t+0],i.y+f[t+1],i.x+f[t+2],i.y+f[t+3]),r.x=i.x+f[t+0],r.y=i.y+f[t+1],i.x+=f[t+2],i.y+=f[t+3],0===t&&!0===c&&o.copy(i);break;case"q":f=s(p);for(let t=0,n=f.length;t<n;t+=4)e.quadraticCurveTo(i.x+f[t+0],i.y+f[t+1],i.x+f[t+2],i.y+f[t+3]),r.x=i.x+f[t+0],r.y=i.y+f[t+1],i.x+=f[t+2],i.y+=f[t+3],0===t&&!0===c&&o.copy(i);break;case"t":f=s(p);for(let t=0,n=f.length;t<n;t+=2){const n=a(i.x,r.x),s=a(i.y,r.y);e.quadraticCurveTo(n,s,i.x+f[t+0],i.y+f[t+1]),r.x=n,r.y=s,i.x=i.x+f[t+0],i.y=i.y+f[t+1],0===t&&!0===c&&o.copy(i)}break;case"a":f=s(p,[3,4],7);for(let t=0,a=f.length;t<a;t+=7){if(0==f[t+5]&&0==f[t+6])continue;const a=i.clone();i.x+=f[t+5],i.y+=f[t+6],r.x=i.x,r.y=i.y,n(e,f[t],f[t+1],f[t+2],f[t+3],f[t+4],a,i),0===t&&!0===c&&o.copy(i)}break;case"Z":case"z":e.currentPath.autoClose=!0,e.currentPath.curves.length>0&&(i.copy(o),e.currentPath.currentPoint.copy(i),l=!0)}c=!1}return e}(e));break;case"rect":i=r(e,i),E=function(t){const e=c(t.getAttribute("x")||0),n=c(t.getAttribute("y")||0),i=c(t.getAttribute("rx")||t.getAttribute("ry")||0),r=c(t.getAttribute("ry")||t.getAttribute("rx")||0),a=c(t.getAttribute("width")),s=c(t.getAttribute("height")),o=.448084975506,l=new Rl;l.moveTo(e+i,n),l.lineTo(e+a-i,n),(0!==i||0!==r)&&l.bezierCurveTo(e+a-i*o,n,e+a,n+r*o,e+a,n+r);l.lineTo(e+a,n+s-r),(0!==i||0!==r)&&l.bezierCurveTo(e+a,n+s-r*o,e+a-i*o,n+s,e+a-i,n+s);l.lineTo(e+i,n+s),(0!==i||0!==r)&&l.bezierCurveTo(e+i*o,n+s,e,n+s-r*o,e,n+s-r);l.lineTo(e,n+r),(0!==i||0!==r)&&l.bezierCurveTo(e,n+r*o,e+i*o,n,e+i,n);return l}(e);break;case"polygon":i=r(e,i),E=function(t){function e(t,e,n){const a=c(e),s=c(n);0===r?i.moveTo(a,s):i.lineTo(a,s),r++}const n=/([+-]?\d*\.?\d+(?:e[+-]?\d+)?)(?:,|\s)([+-]?\d*\.?\d+(?:e[+-]?\d+)?)/g,i=new Rl;let r=0;return t.getAttribute("points").replace(n,e),i.currentPath.autoClose=!0,i}(e);break;case"polyline":i=r(e,i),E=function(t){function e(t,e,n){const a=c(e),s=c(n);0===r?i.moveTo(a,s):i.lineTo(a,s),r++}const n=/([+-]?\d*\.?\d+(?:e[+-]?\d+)?)(?:,|\s)([+-]?\d*\.?\d+(?:e[+-]?\d+)?)/g,i=new Rl;let r=0;return t.getAttribute("points").replace(n,e),i.currentPath.autoClose=!1,i}(e);break;case"circle":i=r(e,i),E=function(t){const e=c(t.getAttribute("cx")||0),n=c(t.getAttribute("cy")||0),i=c(t.getAttribute("r")||0),r=new Mo;r.absarc(e,n,i,0,2*Math.PI);const a=new Rl;return a.subPaths.push(r),a}(e);break;case"ellipse":i=r(e,i),E=function(t){const e=c(t.getAttribute("cx")||0),n=c(t.getAttribute("cy")||0),i=c(t.getAttribute("rx")||0),r=c(t.getAttribute("ry")||0),a=new Mo;a.absellipse(e,n,i,r,0,2*Math.PI);const s=new Rl;return s.subPaths.push(a),s}(e);break;case"line":i=r(e,i),E=function(t){const e=c(t.getAttribute("x1")||0),n=c(t.getAttribute("y1")||0),i=c(t.getAttribute("x2")||0),r=c(t.getAttribute("y2")||0),a=new Rl;return a.moveTo(e,n),a.lineTo(i,r),a.currentPath.autoClose=!1,a}(e);break;case"defs":l=!0;break;case"use":i=r(e,i);const o=(e.getAttributeNS("http://www.w3.org/1999/xlink","href")||"").substring(1),h=e.viewportElement.getElementById(o);h&&t(h,i)}E&&(void 0!==i.fill&&"none"!==i.fill&&E.color.setStyle(i.fill,Pl),function(t,e){function n(t){M.set(t.x,t.y,1).applyMatrix3(e),t.set(M.x,M.y)}function i(t){const n=t.xRadius,i=t.yRadius,r=Math.cos(t.aRotation),a=Math.sin(t.aRotation),s=new Ke(n*r,n*a,0),o=new Ke(-i*a,i*r,0),l=s.applyMatrix3(e),c=o.applyMatrix3(e),u=v.set(l.x,c.x,0,l.y,c.y,0,0,0,1),d=_.copy(u).invert(),p=x.copy(d).transpose().multiply(d).elements,f=function(t,e,n){let i,r,a,s,o;const l=t+n,c=t-n,h=Math.sqrt(c*c+4*e*e);l>0?(i=.5*(l+h),o=1/i,r=t*o*n-e*o*e):l<0?r=.5*(l-h):(i=.5*h,r=-.5*h);a=c>0?c+h:c-h;Math.abs(a)>2*Math.abs(e)?(o=-2*e/a,s=1/Math.sqrt(1+o*o),a=o*s):0===Math.abs(e)?(a=1,s=0):(o=-.5*a/e,a=1/Math.sqrt(1+o*o),s=o*a);c>0&&(o=a,a=-s,s=o);return{rt1:i,rt2:r,cs:a,sn:s}}(p[0],p[1],p[4]),m=Math.sqrt(f.rt1),g=Math.sqrt(f.rt2);t.xRadius=1/m,t.yRadius=1/g,t.aRotation=Math.atan2(f.sn,f.cs);if(!((t.aEndAngle-t.aStartAngle)%(2*Math.PI)<Number.EPSILON)){const n=_.set(m,0,0,0,g,0,0,0,1),i=x.set(f.cs,f.sn,0,-f.sn,f.cs,0,0,0,1),r=n.multiply(i).multiply(u),a=t=>{const{x:e,y:n}=new Ke(Math.cos(t),Math.sin(t),0).applyMatrix3(r);return Math.atan2(n,e)};t.aStartAngle=a(t.aStartAngle),t.aEndAngle=a(t.aEndAngle),h(e)&&(t.aClockwise=!t.aClockwise)}}function r(t){const n=d(e),i=p(e);t.xRadius*=n,t.yRadius*=i;const r=n>Number.EPSILON?Math.atan2(e.elements[1],e.elements[0]):Math.atan2(-e.elements[3],e.elements[4]);t.aRotation+=r,h(e)&&(t.aStartAngle*=-1,t.aEndAngle*=-1,t.aClockwise=!t.aClockwise)}const a=t.subPaths;for(let s=0,o=a.length;s<o;s++){const t=a[s].curves;for(let a=0;a<t.length;a++){const s=t[a];s.isLineCurve?(n(s.v1),n(s.v2)):s.isCubicBezierCurve?(n(s.v0),n(s.v1),n(s.v2),n(s.v3)):s.isQuadraticBezierCurve?(n(s.v0),n(s.v1),n(s.v2)):s.isEllipseCurve&&(y.set(s.aX,s.aY),n(y),s.aX=y.x,s.aY=y.y,u(e)?i(s):r(s))}}}(E,b),f.push(E),E.userData={node:e,style:i});const T=e.childNodes;for(let n=0;n<T.length;n++){const e=T[n];l&&"style"!==e.nodeName&&"defs"!==e.nodeName||t(e,i)}o&&(g.pop(),g.length>0?b.copy(g[g.length-1]):b.identity())}(E.documentElement,{fill:"#000",fillOpacity:1,strokeOpacity:1,strokeWidth:1,strokeLineJoin:"miter",strokeLineCap:"butt",strokeMiterLimit:4});return{paths:f,xml:E.documentElement}}static createShapes(t){const e=999999999,n=0,i=1,r=2,a=3,s=4,o=5,l=6,c={loc:n,t:0};function h(t,e,i,a){const s=t.x,o=e.x,l=i.x,h=a.x,d=t.y,p=e.y,f=i.y,m=a.y,g=(h-l)*(d-f)-(m-f)*(s-l),v=(m-f)*(o-s)-(h-l)*(p-d),_=g/v,x=((o-s)*(d-f)-(p-d)*(s-l))/v;if(0===v&&0!==g||_<=0||_>=1||x<0||x>1)return null;if(0===g&&0===v){for(let l=0;l<2;l++){if(u(0===l?i:a,t,e),c.loc==n){const t=0===l?i:a;return{x:t.x,y:t.y,t:c.t}}if(c.loc==r){return{x:+(s+c.t*(o-s)).toPrecision(10),y:+(d+c.t*(p-d)).toPrecision(10),t:c.t}}}return null}for(let r=0;r<2;r++)if(u(0===r?i:a,t,e),c.loc==n){const t=0===r?i:a;return{x:t.x,y:t.y,t:c.t}}return{x:+(s+_*(o-s)).toPrecision(10),y:+(d+_*(p-d)).toPrecision(10),t:_}}function u(t,e,h){const u=h.x-e.x,d=h.y-e.y,p=t.x-e.x,f=t.y-e.y,m=u*f-p*d;if(t.x===e.x&&t.y===e.y)return c.loc=n,void(c.t=0);if(t.x===h.x&&t.y===h.y)return c.loc=i,void(c.t=1);if(m<-Number.EPSILON)return void(c.loc=a);if(m>Number.EPSILON)return void(c.loc=s);if(u*p<0||d*f<0)return void(c.loc=o);if(Math.sqrt(u*u+d*d)<Math.sqrt(p*p+f*f))return void(c.loc=l);let g;g=0!==u?p/u:f/d,c.loc=r,c.t=g}function d(t,e,n){const i=new ye;e.getCenter(i);const r=[];return n.forEach((e=>{if(e.boundingBox.containsPoint(i)){(function(t,e){const n=[],i=[];for(let r=1;r<t.length;r++){const a=t[r-1],s=t[r];for(let t=1;t<e.length;t++){const r=h(a,s,e[t-1],e[t]);null!==r&&void 0===n.find((t=>t.t<=r.t+Number.EPSILON&&t.t>=r.t-Number.EPSILON))&&(n.push(r),i.push(new ye(r.x,r.y)))}}return i})(t,e.points).forEach((t=>{r.push({identifier:e.identifier,isCW:e.isCW,point:t})}))}})),r.sort(((t,e)=>t.point.x-e.point.x)),r}let p=e,f=-999999999,m=t.subPaths.map((t=>{const n=t.getPoints();let i=-999999999,r=e,a=-999999999,s=e;for(let e=0;e<n.length;e++){const t=n[e];t.y>i&&(i=t.y),t.y<r&&(r=t.y),t.x>a&&(a=t.x),t.x<s&&(s=t.x)}return f<=a&&(f=a+1),p>=s&&(p=s-1),{curves:t.curves,points:n,isCW:Ko.isClockWise(n),identifier:-1,boundingBox:new Cl(new ye(s,r),new ye(a,i))}}));m=m.filter((t=>t.points.length>1));for(let _=0;_<m.length;_++)m[_].identifier=_;const g=m.map((e=>function(t,e,n,i,r){null!=r&&""!==r||(r="nonzero");const a=new ye;t.boundingBox.getCenter(a);const s=d([new ye(n,a.y),new ye(i,a.y)],t.boundingBox,e);s.sort(((t,e)=>t.point.x-e.point.x));const o=[],l=[];s.forEach((e=>{e.identifier===t.identifier?o.push(e):l.push(e)}));const c=o[0].point.x,h=[];let u=0;for(;u<l.length&&l[u].point.x<c;)h.length>0&&h[h.length-1]===l[u].identifier?h.pop():h.push(l[u].identifier),u++;if(h.push(t.identifier),"evenodd"===r){const e=h.length%2==0,n=h[h.length-2];return{identifier:t.identifier,isHole:e,for:n}}if("nonzero"===r){let n=!0,i=null,r=null;for(let t=0;t<h.length;t++){const a=h[t];n?(r=e[a].isCW,n=!1,i=a):r!==e[a].isCW&&(r=e[a].isCW,n=!0)}return{identifier:t.identifier,isHole:n,for:i}}}(e,m,p,f,t.userData?t.userData.style.fillRule:void 0))),v=[];return m.forEach((t=>{if(!g[t.identifier].isHole){const e=new bo;e.curves=t.curves;g.filter((e=>e.isHole&&e.for===t.identifier)).forEach((t=>{const n=m[t.identifier],i=new Mo;i.curves=n.curves,e.holes.push(i)})),v.push(e)}})),v}static getStrokeStyle(t,e,n,i,r){return{strokeColor:e=void 0!==e?e:"#000",strokeWidth:t=void 0!==t?t:1,strokeLineJoin:n=void 0!==n?n:"miter",strokeLineCap:i=void 0!==i?i:"butt",strokeMiterLimit:r=void 0!==r?r:4}}static pointsToStroke(t,e,n,i){const r=[],a=[],s=[];if(0===Ul.pointsToStrokeWithBuffers(t,e,n,i,r,a,s))return null;const o=new Ui;return o.setAttribute("position",new bi(r,3)),o.setAttribute("normal",new bi(a,3)),o.setAttribute("uv",new bi(s,2)),o}static pointsToStrokeWithBuffers(t,e,n,i,r,a,s,o){const l=new ye,c=new ye,h=new ye,u=new ye,d=new ye,p=new ye,f=new ye,m=new ye,g=new ye,v=new ye,_=new ye,x=new ye,S=new ye,y=new ye,M=new ye,b=new ye,E=new ye;n=void 0!==n?n:12,i=void 0!==i?i:.001,o=void 0!==o?o:0;const T=(t=function(t){let e=!1;for(let r=1,a=t.length-1;r<a;r++)if(t[r].distanceTo(t[r+1])<i){e=!0;break}if(!e)return t;const n=[];n.push(t[0]);for(let r=1,a=t.length-1;r<a;r++)t[r].distanceTo(t[r+1])>=i&&n.push(t[r]);return n.push(t[t.length-1]),n}(t)).length;if(T<2)return 0;const w=t[0].equals(t[T-1]);let A,C,R=t[0];const P=e.strokeWidth/2,U=1/(T-1);let L,W,N,I,O=0,D=!1,F=0,k=3*o,z=2*o;B(t[0],t[1],l).multiplyScalar(P),m.copy(t[0]).sub(l),g.copy(t[0]).add(l),v.copy(m),_.copy(g);for(let J=1;J<T;J++){A=t[J],C=J===T-1?w?t[1]:void 0:t[J+1];const n=l;if(B(R,A,n),h.copy(n).multiplyScalar(P),x.copy(A).sub(h),S.copy(A).add(h),L=O+U,W=!1,void 0!==C){B(A,C,c),h.copy(c).multiplyScalar(P),y.copy(A).sub(h),M.copy(A).add(h),N=!0,h.subVectors(C,R),n.dot(h)<0&&(N=!1),1===J&&(D=N),h.subVectors(C,A),h.normalize();const t=Math.abs(n.dot(h));if(t>Number.EPSILON){const n=P/t;h.multiplyScalar(-n),u.subVectors(A,R),d.copy(u).setLength(n).add(h),b.copy(d).negate();const i=d.length(),r=u.length();u.divideScalar(r),p.subVectors(C,A);const a=p.length();switch(p.divideScalar(a),u.dot(b)<r&&p.dot(b)<a&&(W=!0),E.copy(d).add(A),b.add(A),I=!1,W?N?(M.copy(b),S.copy(b)):(y.copy(b),x.copy(b)):H(),e.strokeLineJoin){case"bevel":X(N,W,L);break;case"round":q(N,W),N?V(A,x,y,L,0):V(A,M,S,L,1);break;default:const t=P*e.strokeMiterLimit/i;if(t<1){if("miter-clip"!==e.strokeLineJoin){X(N,W,L);break}q(N,W),N?(p.subVectors(E,x).multiplyScalar(t).add(x),f.subVectors(E,y).multiplyScalar(t).add(y),G(x,L,0),G(p,L,0),G(A,L,.5),G(A,L,.5),G(p,L,0),G(f,L,0),G(A,L,.5),G(f,L,0),G(y,L,0)):(p.subVectors(E,S).multiplyScalar(t).add(S),f.subVectors(E,M).multiplyScalar(t).add(M),G(S,L,1),G(p,L,1),G(A,L,.5),G(A,L,.5),G(p,L,1),G(f,L,1),G(A,L,.5),G(f,L,1),G(M,L,1))}else W?(N?(G(g,O,1),G(m,O,0),G(E,L,0),G(g,O,1),G(E,L,0),G(b,L,1)):(G(g,O,1),G(m,O,0),G(E,L,1),G(m,O,0),G(b,L,0),G(E,L,1)),N?y.copy(E):M.copy(E)):N?(G(x,L,0),G(E,L,0),G(A,L,.5),G(A,L,.5),G(E,L,0),G(y,L,0)):(G(S,L,1),G(E,L,1),G(A,L,.5),G(A,L,.5),G(E,L,1),G(M,L,1)),I=!0}}else H()}else H();w||J!==T-1||j(t[0],v,_,N,!0,O),O=L,R=A,m.copy(y),g.copy(M)}if(w){if(W&&r){let t=E,e=b;D!==N&&(t=b,e=E),N?(I||D)&&(e.toArray(r,0),e.toArray(r,9),I&&t.toArray(r,3)):!I&&D||(e.toArray(r,3),e.toArray(r,9),I&&t.toArray(r,0))}}else j(A,x,S,N,!1,L);return F;function B(t,e,n){return n.subVectors(e,t),n.set(-n.y,n.x).normalize()}function G(t,e,n){r&&(r[k]=t.x,r[k+1]=t.y,r[k+2]=0,a&&(a[k]=0,a[k+1]=0,a[k+2]=1),k+=3,s&&(s[z]=e,s[z+1]=n,z+=2)),F+=3}function V(t,e,i,r,a){l.copy(e).sub(t).normalize(),c.copy(i).sub(t).normalize();let s=Math.PI;const o=l.dot(c);Math.abs(o)<1&&(s=Math.abs(Math.acos(o))),s/=n,h.copy(e);for(let l=0,c=n-1;l<c;l++)u.copy(h).rotateAround(t,s),G(h,r,a),G(u,r,a),G(t,r,.5),h.copy(u);G(u,r,a),G(i,r,a),G(t,r,.5)}function H(){G(g,O,1),G(m,O,0),G(x,L,0),G(g,O,1),G(x,L,0),G(S,L,1)}function X(t,e,n){e?t?(G(g,O,1),G(m,O,0),G(x,L,0),G(g,O,1),G(x,L,0),G(b,L,1),G(x,n,0),G(y,n,0),G(b,n,.5)):(G(g,O,1),G(m,O,0),G(S,L,1),G(m,O,0),G(b,L,0),G(S,L,1),G(S,n,1),G(b,n,0),G(M,n,1)):t?(G(x,n,0),G(y,n,0),G(A,n,.5)):(G(S,n,1),G(M,n,0),G(A,n,.5))}function q(t,e){e&&(t?(G(g,O,1),G(m,O,0),G(x,L,0),G(g,O,1),G(x,L,0),G(b,L,1),G(x,O,0),G(A,L,.5),G(b,L,1),G(A,L,.5),G(y,O,0),G(b,L,1)):(G(g,O,1),G(m,O,0),G(S,L,1),G(m,O,0),G(b,L,0),G(S,L,1),G(S,O,1),G(b,L,0),G(A,L,.5),G(A,L,.5),G(b,L,0),G(M,O,1)))}function j(t,n,i,a,o,d){switch(e.strokeLineCap){case"round":o?V(t,i,n,d,.5):V(t,n,i,d,.5);break;case"square":if(o)l.subVectors(n,t),c.set(l.y,-l.x),h.addVectors(l,c).add(t),u.subVectors(c,l).add(t),a?(h.toArray(r,3),u.toArray(r,0),u.toArray(r,9)):(h.toArray(r,3),1===s[7]?u.toArray(r,9):h.toArray(r,9),u.toArray(r,0));else{l.subVectors(i,t),c.set(l.y,-l.x),h.addVectors(l,c).add(t),u.subVectors(c,l).add(t);const e=r.length;a?(h.toArray(r,e-3),u.toArray(r,e-6),u.toArray(r,e-12)):(u.toArray(r,e-6),h.toArray(r,e-3),u.toArray(r,e-12))}}}}}const Ll=[],Wl=["VARSITY TEAM","Super Bubble","Megalopolis X","Masque","LEMON MILK Bold","LEMON MILK Bold Italic","LEMON MILK Light","LEMON MILK Light Italic","LEMON MILK Medium","LEMON MILK Medium Italic","LEMON MILK Regular","LEMON MILK Regular Italic","Copyduck","Super Sunday","Super Cosmic","Crunch Chips","Bronco","Super Mario 256","ABeeZee","Abel","Abril Fatface","Acme","Alegreya Sans","Alegreya","Alfa Slab One","Alice","Almarai","Amatic SC","Amiri","Anton","Archivo Black","Archivo Narrow","Archivo","Arimo","Arvo","Asap Condensed","Asap","Assistant","Barlow Condensed","Barlow Semi Condensed","Barlow","Bebas Neue","Bitter","Black Ops One","Bree Serif","Cabin","Cairo","Cantarell","Cardo","Catamaran","Caveat","Chakra Petch","Changa","Chivo","Cinzel","Comfortaa","Concert One","Cormorant Garamond","Cormorant","Courgette","Crete Round","Crimson Text","Dancing Script","Didact Gothic","DM Sans","DM Serif Display","Domine","Dosis","EB Garamond","El Messiri","Encode Sans","Exo 2","Exo","Figtree","Fira Sans Condensed","Fira Sans","Fjalla One","Frank Ruhl Libre","Fraunces","Gothic A1","Great Vibes","Heebo","Hind Madurai","Hind Siliguri","Hind","IBM Plex Mono","IBM Plex Sans Arabic","IBM Plex Sans","IBM Plex Serif","Inconsolata","Indie Flower","Inter","Josefin Sans","Jost","Kalam","Kanit","Karla","Lato","Lexend Deca","Lexend","Libre Baskerville","Libre Franklin","Lilita One","Lobster Two","Lobster","Lora","M PLUS 1p","Rounded Mplus 1c","Manrope","Marcellus","Martel","Material Icons","Material Symbols Outlined 24pt","Material Symbols Rounded 24pt","Maven Pro","Merriweather Sans","Merriweather","Montserrat Alternates","Montserrat","Mukta","Mulish","Nanum Brush Script","NanumGothicCoding","NanumGothic","NanumMyeongjo","Nanum Pen","Neuton","Noticia Text","Noto Kufi Arabic","Noto Sans Arabic","Noto Sans Display","Noto Sans HK","Noto Sans JP","Noto Sans KR","Noto Sans SC","Noto Sans TC","Noto Sans Thai","Noto Sans","Noto Serif JP","Noto Serif KR","Noto Serif TC","Noto Serif","Nunito Sans 12pt","Nunito","Old Standard TT","Open Sans","Orbitron","Oswald","Outfit","Overpass","Oxygen","Pacifico","Passion One","Patua One","Paytone One","Permanent Marker","Philosopher","Play","Playfair Display","Plus Jakarta Sans","Poppins","Prata","Prompt","PT Sans Caption","PT Sans Narrow","PT Sans","PT Serif","Public Sans","Questrial","Quicksand","Rajdhani","Raleway","Red Hat Display","Righteous","Roboto Condensed","Roboto Flex","Roboto Mono","Roboto Slab","Roboto","Rowdies","Rubik","Russo One","Sacramento","Saira Condensed","Sarabun","Satisfy","Sawarabi Mincho","Shadows Into Light","Signika Negative","Signika","Slabo 27px","Sora","Source Code Pro","Source Sans 3","Source Serif 4","Space Grotesk","Space Mono","Spectral","Tajawal","Teko","Tinos","Titan One","Titillium Web","Ubuntu Condensed","Ubuntu Mono","Ubuntu","Urbanist","Varela Round","Vollkorn","Work Sans","Yanone Kaffeesatz","Zeyada","Zilla Slab"],Nl=["三极泼墨体","荆南波波黑","YouSheBiaoTiYuan","PangMenZhengDao-Cu"];for(let fc of Ll)fc.lang="en";const Il=[];for(let fc of Nl){let t={name:fc,lang:"zh"};t.preview=`https://www.tinygimp.com/mystatic/img/fontpreview/${fc}.png`,Il.push(t)}for(let fc of Wl){let t={name:fc,lang:"en"};t.preview=`https://www.tinygimp.com/mystatic/img/fontpreview/${fc}.png`,Ll.push(t)}const Ol=Ll.concat(Il),Dl={};for(let fc of Ol)Dl[fc.name]=fc.url;const Fl=zl;function kl(){const t=["WQr9dmknvt9AdxFcT8oY","rCkReSkhWPK","W6VcU8kpAG","W7BdRSk6W7dcKa7dSSkE","W7tcJvmoW7lcICoRW43dNG3cU8ogCvpcJmomW4H1a0K","W5ZcM8o3m2PyW7rtWOxdPq","WRdcLSkLswpdJWlcJCobWR/cRG","WQDbW4axh1m","agPxF8oksbmyfmoT","ivdcMeRcOWawqq","kCktW4BcJbyVqCkJyG","WRnWWPLh","WQjbW5OyjfpdJItdJ8kudwW","WPPYWOHZW4ddTa","hSkozgjfcYFcHmklfSoJW7xdQ8kmW5b7W4fa","qSkvFmk6eSkqFmkl","WRNcR8ouvJFdMda","WRdcUJNcIWjSv080WQddG8kOpG","W5RdKSkoWRxdI8ofWRi1W5ZcVHLYkW","WRPUcwnGyxtdNSk3","W4lcGCoWnwn9W6y","W4LaWOLqpHddOCkg","WR5ZhMG","FX8SW6HXW55AEG","bCkzAh4zchVcH8kEcmoVW7O","mmktW43cKhuJamk+zfXkfdnvyGq3oCkSx8kD","WPVdHSkVhG","ah5kCG","WR0OWPZcQKFcMCk4oSohDJPrp8ow","W6NcVSkC","CGyiW7i","WQHqWOhcN29+yxzNkSksgG","WP/dRmot","WR0HWPhcN0pcQmk6d8oiDHa","aLW6","bLSKWR9k","WQujA8k+i1ef","W6RcOCo7emk8xq","WQHLcmkrqcbvgLRcQ8o0hKqg","WRJcUZxcJchdLCowWRVcVmkI","nr1/W7u","W77cSSkE","W7CpW57dJI0","mexcI0ZcUG","kmo5vmosWOfucCkca8kZkIxcOmoDWRaq","WRKSWOBcMuO","aCkKWQFdGSoVb8kTfY7cR8ogjCo7W7COlq","W57dHCkFWQZcMCotW6u","W7VdPSkW","imkFW4FcGsuZr8kIA0TdgsLMBX0","WQtcTmolAZRdGtRcUq","W6dcSSkzESkxsmkjW58D","WRJcVSowztRdGa","WPb0WODkWQ3cISk6W6xcNCk0WQrwidZcNfpcJKZdLbS","WRbXWQSTWPpcSZldM8o8","gmk7WQW","WQBcQCkVW6NcKmkXW7mZWPfVqGaq","iHDRW67dGq","W4pdKSkfWQNcQmojW7m+W5u","WRBdPIOZW4m5fCon","a8k9WQ/dMCoM","WRy2W4NcMwi8W7xdGdijimkDuCkJWP3dPq","W4pcM8oMmw5GW7bmWOm","p8oZqmojW4a","m8oSsCoiW7rFsCkgkmkYiIBcRmoa","WRTbW5eerepcGtRdHmkgfNW2c8ooAG","WRZcI8k1rfJdHZFcGmoiWQFcR8opW47dLCkVq8kXW74","qSk6e8kFW4/dSCoGWPpcMvlcOqhdI8k2WQu","ACo5W59IeWlcHmo8","WRufzmkMjW","WQpcJmkZsxtdJYNcJSok","CXpdGMagz8kOWQNdVtNcLq","W57dKSkeWRlcImoeW78KW5VcQr5Dl8oXw8kKwG","W6HTrW","WRlcTmowDGddItJcSG","BX/dNNyLCSkQWR7dVshcLWlcRh42dqe","ogvQC8kEWQ/dJXpdRhNcRmkOt8kAW4KWWOq","W6hdQSkloNNdRYZcGmocWOpdKG","ASogW4OVEvHUW67cKCkaW5ONqGiIjW","pKhcN0ZcUG","WQBcVsVcJa","W5nyWRtcJ0rfs8ksW68","WQjNh8kqDa","ju/cJ0lcPrWwumoe","b8kzyN5ddZtcIq","eLdcPWBcSaWIWRm","BGfeWQldUa","nmkzW4BcJtiUqCkJ","WQpcSspcNstdOmowWRS","W6JdP3ddI0uibLWJ","W73cTSkEEG","k8kyW7BcIc8Krq","W6hcPSoLgSk+txC7AaBdRSkvWRLvBsm","W5RdN8kFWQlcK8opW7KJW4e","BG1c","ig9QACkuWQxdGHpdPgm","W6JcOmoZgSkXB384CWi","W4hcKCoHjxzRW7zlWPNdTSkAW73cOa7dRxT3","WRxdOSohWR0BxK4ewCkYf2S","WQtdRdWZWRKPxSoqw8o6zHD7hmkrkW","rSkFD8kNsCktymkkb8kFuHCyWPlcMJu9mCk+CWZcNCoC","WRy2W40","rCorW4i","WQhcSsNcNx7dPW","WRdcSSoo","aCkty2nEbtRcIW","a8oaW4tdT8kV","b1a9WQ1wW6S","sSoSW4HYfGVcHSo6oeL1","W7ZcKCoGpKTVW6fCWPhdSmkYW5/cTqBdUMb3W4S","wmoFW4NdGSkBv3ZcPW","EXuNW7u2W5mBzeabpmoKW4HfW5yV","WQ4OWPdcMXJcMmo7mSoDBIXrbSoxW4C","WR1bW5Ofg1m","WQeRW4lcKgq","W6xdS8oXWRtdLW","cvK1WR5TW7CwDSoiiCkz","WRv8WRa3WPpcVJBdHa","WPa6W43cMw0","WRP0cg9xz3FdNW","ASoLW5TIaWBcISoInvPI","WQr9dmknrsbFc1/cRq","WQu2W5/cIgK","WRZdOmoBjmoZeCkIW7SXWRCEW7q","W6hcPSoH","WPhdHCkRaG","W7pdO8kHW6RcKapdTSkblq","WPpdQCop","W63dRCkLWOr+E8kw","W7PSvW","EeK0AmoAxbuFoa","FSoSW4P1dG","A0qSqCkOW7NcMW","W5JcMSoNm2H9W7XlWOK","FGfmWQlcO2C","W43dMmkAWQ7cIG","WRLfW4ufeG","WRe3W5RcJKiNW7JdIH0C","WR3dPIaIW6yBeComqCoS","W6ZcS8ko","WRBdPse/","WQPHaCkRFZ9E","zH8SWQXPW55BFW","W6pdV8oUWQJcKmoLW6K8WPTlsHSyqW8","bmogW54","lmkeW5dcGG","WQdcVSoaDN3dJhVcPmoIWQBdRSoRW6rUyCkM","WQqdC8kVlG","EGTDWRJdPe8VB14R","W5XDWOHwoa","W7xcJvypW4hcQ8oVW4ZdMWq","WQD9vZj0pSkufrb6","W4FcGf4lW4pcLG","WQy6W4pcIdiSWRldItmEdCk/x8kOWPa","WQldRdCYW6y5","jrfX","fmooW5RdV8k4WPm","WRP+cxvtA3VdHCkStadcSCokq1/dHSkk","yWPeWQpdPfCJCei","hCk6WR/dImoGemkqbI8","WQrNcCkm","ohj9DSkhWQ/dMW","WR7cNmkYrgtdLctcJ8oCWQ7cTmoi","WQbWgq","b8okW5W","C8ogW4eZguGHW6NcM8kvW40T","w8ovW53dHSkkugFcUG","zWfhWR7dGgSPzLe","WP7dI8k+bCo2","WRldMmk+dSoXW73cHCoBW6VdRI5S","WQD+cg5WENNdN8kHwXFcLG","heu1WQq","W73dKSkAWQtcM8ovWRWwW53cSq8","WPf4WO17W5O","rCovW4NdG8k7uxZcPW","WQy6W4pcIdiSWRldHJiyoCkLBmkHWO3dPq","WOj2WO9XW4tdLmk3ESohWOG","W4hcLCoHjwm","WRadD8k+k1Skxq","nSktW5hcKsuI","w8k6gmkdWQJdUSoiWPG","gCkzEw1cga","a1a6WQ1kW7C","imkFW4m","W7tdJcruAL8YAMVdISomW6hdVmk6WRFcHq","amkXWRpdMCk9b8oxaJNcQmkCnCouW7COaq","WQHbW501g0ldGI/dHCkbpxewaa","e8kEF3i","W6rOwW","WQ3dJ8k4fCoUW7/cLmooW7ldSci","W6JcJuedW5NcLmoHW44","pmkzy2j6bdRcI8kCm8oRW6ldJCkFW5r/W58","W7xdOwxdKa","FbxdGgON","W5jsWQa","w8oaW5/dImkAuNlcUW","W7FdQCkkmhZcMMC","WOBdQmotWQ1LwXqcq8k6bfqkWRJcPhzgca","W59OusCXASodwJb5W47cGW","W7VdS8o4WRNdSmoXWQy7WPTxyq","agrkC8osDruc","W5/dQCkKW6xcLWy","WOddQmokWR0xtg4eu8kV","qCkkBSk9","F0qLCSkavL4dlCojW4W1W4a","W7xdPKldKL4+","CCoSW4nY","W4JdMmkyWRxcTSoaW7e1","kmktW5VcGZiV","WP7dHCkKeSo7W6lcG8oxW77dQdi","W6rMrZe0smoBfHf5","W6VdOSkPWOnGF8kMC0hcKG","W6FdTCoLWRxdL8oOWQG2","WR7cLSkLsvVdTItcJConWQO","WOD+cg5WENNdN8kHwXFcLSoMt07dKCkzpSkzEG","gvq4WR9B","WQSjyCkVlM4kxCkmpW","W7hdPNpdL0u1deO","AmocW54UlW","WQD4WRyI","zX8pW7KnWR/cGu/dQa","bmooW5ZdUq","WRuRWO7cNe7cIa","W5ZcKCoGpLjHW7Pr","W6JcQSoKf8kotx86yGBdSmk9","WQiWW5lcKNueW7xdIdqC","W5RdKSkoWRxdI8ofWRi9W4BcSY9NpSo5ea","BaTAWQldNMiRBq","e1dcUGNcKaS","emkyDe9CctVcKCk3f8o5W6ldJCkdW5HS","WRhcV8orDIhdMG","WROWW4NcLxSNW7ldMZ0e","W5xcNCoL","WQ9+WOffWPBcKmk+W7JcIG","W6ejW5VdHsOfwxTJoa","yaa6W69dW5HBygSanmoNW4ry","W4PBWOnvlW","rZiol8kFjd4wf8oSdSk9","WQf8WRqMWPy","D0G2WRxcGCkZWQGpW5JcVbiI","W6BcOmo7emkV","W6ZdQhG","fCkvzG","W7qiW5pdItiSva","pvdcMeFcKamzr8oLt3FdHW59","EeqP","WQVcPCoNga","WRf0WPPfWORcLG","EGvgWQxdTq","hCkvFM95hdtcHSksemoT","WQz+fwfxzG","WQxcUYlcGdNdQSoyWRK","WRFcKmkZsvtdLcZcJSowWQ7cQSoGW6tdK8kQuG","EreZW7rG","WPNdJ8k6eSo2","WR3dVsGtW7m9fq","nX11W7xdMSoKWQet","kMvUzCkc","WQ5Ydq","W7rkWOLrgHhdOCkgWOTKrY1KwsyOW50","iCkyW5BcIYiUqmkQ","WQ1+WODlWORcL8k0W6u","W4ZdKSkaWQtcLa","WP9bW5Sdb0ldJd7dGSkdgG","lrDOW6RdSSoZ","WQpcLSkYrupdIsRcJW","WRhcVslcMsldSmos","wq8EW6iTWQlcH0/dGNVcOhvbW5xcKmkK","WQ4jD8kJofCfrCkynG","tCoEW5VdICkdw3C","aCkDyNLp","xSkRh8kBWO/cR8kiW5NcGedcPe7dI8kWWRNdO8ovW7G7pSogWRpcNJ/dJSkQFZ8VWOZcQfWSWOZdKq/cReldOSk+fsdcGqXtW60","WQdcTmoWzZBdUYhcPCoJWQhdPW","dfZcRGS","wmovW4JdMmkFw3dcVCkUWRDyx8k3idvzW6y","k8keW4hcJcKGxmkSDujgnGnGAGW1na","DCo7W45PcqNcL8oVivD5vwH6iXpcL8od","W6dcOCo2hCkXxhO","o3b5BG","W7ZcKCoGpLjHW7PrWR3dOCklW5VcSWRdQwu","c1WI","wSovW5FdHmkzwW","WQ52WQyMWPBcIZBdHmo6eW","cLS1WQHsW7Ot","rSktE8k/aW","rCkVbmkFWRddVmoaWP7cGW","Erzx","B0GR","WOhdVCokWRC","CG7dGfeSz8kS","WRH/WPvaWPlcM8k/","W7BdJc5umfH9DG","WQxcTsxcGt4","pw5kCSo1AbSchmoPbmkxWQTQWONdLY8kmKG","W7pdRSkVW6NcNapdP8kb","kgvPr8o1auC","W6JdHI5ji1rYBMxdLq","WQT8WQmN","WRxdHmoMWOK","AX/dLhfMC8oNWQFdTspcLZpcPhi/","WRNdPYiO","WRBcVSoozYi","W6hcUmklDSkyrSkjW58oWPW3W5XrWP3dMCkA","WQSdCCkRlLyoqSkk","WR5+WPHnWOW","WPCOWPVcH3JcImk0mConyWPmo8otWP0fWQLnWOFcMq","mCoZsmodW55MrSkEgCkL","BmoSW4H1dW3cHmoI","x8kFFmk7nSkrFmkldG","WRZdPIuJW6mJf8o/qmoSyHn+eSklfa","WQWSWOtcMK4","WRFcTmouBtW","W6BcRSo5cCk8sG","W51vWQ7cI3bFqCks","BCoGW551dG","ArWWW653","bmk7WRJdHmo6cSkwha","W5lcM8o/oxq","h1O9WQrkW5mEDCojoW","W7pcRSo7cSk4","W6tdGcO","W7ldHILhmvv5AxC","WOSdDSkIfLCex8k0o18Hqru7aa","zaueW6qnWOhcGuBdP24","WRG7uYW","W71SwYbRESkufrr5W4hcUSkxw8ksW4hdN0qq","WPxdH8k+hG","h1ONWQnkW7yyFa","lM92DmkGWQVdGqi","W5FcMmo2lG","c1dcRbRdLWDJWRGgW5BdJ8ovWP5zD8knW6/cNG50iW","W5nsWQpcGNH7rCkqW71I","pZj9WRZdLLOe","WPz+WPC","ogfQC8kl","WQ1+WP1mWORcM8kP","yr8XW6q","W4b7sJa9BCozhWPOW6lcJ8kgu8kqW4tdN1W","iCkyW5tcHIOIsG","WRbPWQ03WRBcTdddGmo7","bM5lBSopFXSa","gfdcOcVcIayGWRGgW5BdQmoEWOrs","ASoMW4LOeGFcISoG","b8okW4FdTCk4WPnVuW","nY5zW4S/W77dNW","lCkBW5tcGYmur8k3ya","W7ddTSoVWQZdI8ovWQGiWPnnBG","WQOIWPVcHL/cLCk6mq","AbpdIhe9","W6pdSSo/WR/dImoVWQiRWOe","W6ZdRhpdLMiOaKOZWPFdTCk+","WRCIWOZcIKFcQSk0m8oCzW","W41yWRm","W59zWQpdH2DDs8kiW4rUwSoJqq","xmovW4ldN8oCwJ3cUCkOWRjuAmk/iJ5Z","W51gWOW","W7upW4q","W7ihW5ZdNt8","oSoZwG","WRbTWQm3WP8","ACoSW44","WQtdOca","W6ldJcPfnq","WQOIWOhcGv/cSmk8omobDG","W7pdS8oG","WRLVaMPg","EmopW500oa","W5xcNCoHm2v6W7XqWP7dOCktW7lcQatdOh0","WRTbW5eerepcGsFdJSkbhMqXaCotqa","W6tdQSk8W6xdLbVcVSkwzSkWWP1UBSoDsG","WO3dJ8k4fCoUW7/cLmooW7ldScjmymkOcSklhW","WRtdUmkMsCoPcfOEtrpdJCkq","WRqWW40","nHfJW7xdMW","W51pWQlcHMbiD8kuW6L3wmo4","WRe+W5BcMxmPW4JdLIWn","FbuRW5jSW41q","WQddRdy0W7OOe8ouxCo/AIbZhSkAa8om","FCoSW45ecGVcImoRp0Tst2j/","Eb/dG2GWy8k7WRm","W4RdNSka","BruPW6rP","nKNcJ0ZcTrGExmopxhRdVajOWRFdOa","W4hcM8o6ohjcW7XyWPJdTa","WQn8gW","WPPYWObW","rSkFD8kNvCkDpCkvbSoxwaSqWO/cHWG","W7hcQSoVc8oUxtaYAqNdTSkkWRLiya","W7hcJfegW5JcMCoRW5m","EXuNW7u2W5mBD0aEoSoI","cfZcSbRcJa","W59aWPrngrddTmkn","W5FcM8o9iLvNW69A","WPddJ8k5dSonW67cLSouW7/dPZvR","luRdNh0","W41kWOjnEr3cOmkmWOLprYXTxWKMW59tWPNdTNu","yHuSW6LwW4nuEKStj8o0","v8oSW4LPnrRcHmoGnv5IuMz6oHpcL8olvLC","W6iwW5FdIcSLuw4","kmo9xSobW5De","rKqUBSoNxr8cbSooW4S1W4yWW6CM","W6VcVSkgDW","W6hdVSk8W6S","AXKTW6rMW4nCE0etoCoCW4HnW5ab","FGfmWQlcO2DOA1CYC8o0zq","FSoGW4W","qSkaWPBcPmoYWPrRtCk0","W5CjW5ZdNW","W6z7vZW3ECoigXr0W4BcJCkXv8kpW4JdJfe","W6hcSSkeDCkZsa","WOvCWOXEAGhdO8keWOjAg3TPxZS5WOSiW6ldQhjMumoxzCo6gGeqW6qkW5itW7ZcJmoHaCoCkwnalmoLqc7cH8kpvvu","k8oZxSonW4farSkrcq","WQD6cwfkyftdLmkJtG","EGuFW6CyWQhcGvVdQG","WRy+W4JcLgqS","mrD0W6JdH8oUWQ8r","W6mpW5xdGYPKuN15","C8oNW5XU","W70jW5u","WR9YWPj8W7ZdR8kXymoMWOXwntWOpSkL","W5RdKSkoWRxdI8ofWRiJW5VcPr4","Faa+W68","WQmizmkOlL0p","W4hcM8oGp3jNW7Pr","i8k/WOK1v1NcTmoKpvLIwa","W4PyWR/cKYDjcSkFW6DRuSo5","hw5kCSo1AbSchmoPbmkx","WRdcUJdcIYhdPSot","WQdcVSoaDN3dJhVcO8oIWQBdO8oPW6rUyCkM","WRhcVspcJc7dT8oEWRJcP8kMpIjXWRvWrW","E8k6gmkdWQZdVCoiWPJcKhRcSHtdMSkRWR7dU8oE","WRTbW5eerepcGtNdM8kqhh0ZbCosCmo0FJNcMW","mCkyW5ZcKduxs8k/qeC","iw5+BW","WR4KWP4","DHtdIMO","WOTAWPfWdIddQq","W6tdQSo5WQJdR8oOWQaWWOy","WQNdG8kKh8ozW7pcMSok","w8k6h8kkWO7dVmogWPRcO07cOWu","h1q6WQ9sW4SEzSonkG","W7JdRmk3WO9MD8kDza","W4ZdRhpdLMe0deOWWRVdPSkUnmoNWQ/dPmku","cvKXWRi","amkXWRpdMCk9b8oxfZJcUSkxlCoy","jKJcLeRcVqisqmos","j8kXWQRdN8oTc8ozfdNcTCkb","AK0X","WQ55WP1mWPFcKmk+W7JcIG","WPNcJSobW7tdGCkzW5GQW53cUWnq","WRD6hSkwCIzuaa","WRWIWOBcM23cNCk4nSofEW","kmkzW5i","nmktW4FcLZyItCk5BfXkfIfSyHSM","deCWWRK","zK45y8oFzbeapSok","W7hcQSoVc8oUxta4BWddQSkTWOnhDsFcRCk6qq7cOgZcSa","WOpcGCo4h0jxW7i","WQipCW","W41kWOjnEr3cOmkeWOvhqWPXsIWGW59a","CH/dN20fF8kMWQtdSW","WRdcMmkSsuxdGrhcMmoiWQO","z3BcTepcKdu1","W6hcKCoHjxzRW7zlWPNdTSkA","kmktWOnVEaGOW7FcUCkcW4Sp","WQbXWQmXWQNcRtBdI8oMgaK","WQ92WQuS","WQSsACkEo0Go","WQBdQcGYW68","W41hWP9x","WOddOSoEWR4+uv8swa","k2HXBmkkWRJdIqK","W63dRSk7W6ZcQqxdVmkCoq","WRL+dW","WPX2WOXX","W6RcJuCnW4xcK8oRW5pdNq","rSkWaSkfWOJdMCooWPhcN0m","xMfkDCoi","W6ZdPmkPW6dcKapdTmkTomoOWPyR","W7hcQSoVc8oUxtaKArtdQ8kTWRLDAW8","AWJdJxmWzCk6WQ8","e2PnECoo","W5ZcLCoJ","zGTvWRldJ24NFfmTF8oNAeyDWPBcNSkbDZG","j3jSAmkbWQ3dNGBdTwFcOmkiBCkwW4eNWPCY","WQ4dBmkTkKW","W7WjW5BdJJiFuxb+kq","EHzrWQddUwyX","W6VcH0y","jwL2","WR/cLSkM","W6ipW4JdJG","w8k6gmkdWQ/dOCogWPJcK1BcOqq","WQiWW4JcLxuHW7pdGq","AXKP","W45yWRxcLgrir8kiW6fXwmoivmoXuaXW","WQ92WQmNWPpcSZddT8oIfXPmW4iNWQZdIW","lbDJW6tdN8orWQetW6VcRW","f8ktFN5SdtJcJmkxbW","WOBcRCkhaq8","l8oOvCokW5C","WQXRWRyRWPxcUIxdICo/hGDkW7mVWQddGIOw","WONdJ8kYeSkTW77dMCoEW77dTJnN","WRb+WPbhWPlcQmk6W6FcJmkW","ja5hWRNdVG","eLdcOa/cIa0OWQ4B","e8ohW4hdTSk0WOL4wCo5","W63dPmkSW6hcLtVdSSkEk8oI","WQ4OWPdcMXJcMmo6","WP7cNmkYrgtdLctcJ8oCWQ7cTmoiW4ddLCk2q8kXW7BdLSoW","W73dS8kOWOLZESkTBf7cMuTxhMhdPG","bLGZ","W6hdOSkinNJcMMxcTCopWOBdSCoMW6a","FCoSW45dcrVcI8oQoff3DuDYkXJcKCoWuLGp","WO3dHCk5d8oQW7pcMmou","WR8WW5/cMw0EW73dGYKn","W6uImCklbaTC","agrqDmosubmlemo8","W6ZdQSkY","muhcK1/cTW","BbeRW6jT","v8oSW4LPmGhcISoGhf5Ku1LYlXO","Dq4jW48pWQJcHLxdG3pcP2rwW5lcLmk6","BXxdN2WHFSkMWQq","WO7dJ8kTc8o7W7tcG8oj","WQ5HWPvm","WQH+dwnp","mX10W6JdICoI","bCkzAh4zchVcLSkEgCoNW7pdHSkzW44","DHtdNhaHq8kSWRldOa","WRSPWOW","BSoSW4j1bXZcGmoV","fLJcTqNcGtaKWQCn","lgLU","W63dJc9icK99DgddMmoxW7e","WPNdG8k8","n8kgW5tcIG","W7RcH0qpW4e","W6ZcH0OEWP7cMCkGW43dMG3cJSolzgNdHa","WOldUmozWRWvufyowq","fgjp","a8kzFM5phG","jSktW4pcGsO","WRJcSslcGr3dQ8oyWRNcRG","p0/cMuZcUJOwx8ouwa","WO3dMmkJc8o/W6JcJG","DWSaW68lWQW","zCk2b8kDWPNdP8oQWPFcG1lcOqNdNSk1","W7tcJvu","W6VcUmkezSkjqCklW5q","ECoMW5zUfa","WRKLWONcNxJcJmk0pmoaBb8","mCoOqmoYW4TaqG","W41kWOjnEr3cOmkBWO1FqXHYEYeU","gg5qFCooAa","WQpdUsuP","hwrDF8oksHSadCoT","WQXiW4atha","d8oDW5ZdSmkYWObVs8o6hCkWzI5bEghdVSkk","WOXRWRyRWPxcUIxdICo/hGDk","og9RACkAWQpdGWK","aColW4W","WRidFCk+CvXfqCkwkuiWwHm0nG","EqSFW60qWQpcVe7dVW","BXxdHwSHw8kGWQ3dVcm","ya8vW75kWQNdHLhdOx3cH3LjW5K","db10W6NdO8oVWQ8rW7NcHWCqW7JdTb7dHLS","W6xdRmkGWOn+smktzKtcKG","W61Gvq","WOajA8k+","w8kRb8k/WOxdPCoc","iLxcJKe","WRC5WOtcU1lcJmkW","W6dcUmkoD8kRDSkhW50pWQy","WR/dQmoyWReBxK4csSkRo2yoWRZcTxzjaW","W63dHJHfnw19DNhdNa","zem3y8oqrG","o8o5wmoJW55vsSkxaSk0asJcGmow","iSkzW5VcKbuUvmkO","gCk7WQ/dImoInCkyhIpcVG","WQDWWRq","W57dMmkfWQJcJmoiW7m+","fSooW4tdRCk4","kmkxW5FcGsO","uSk2hq","a8okp8oJ","CrGFW6ul","WQD5ttm","WRFcKmk3","WQO4WPRcIMJcK8k5mmoB","wSkFzSk0dSkn","jrf1W6tdKmoZWQKqW7dcQWOOW7tdOr/dKW","WRb8WRy","W79SusaXFCoBfG","WQpcMmk1rgpdJXBcT8o/","emk9WR0","W7ihW5/dJIWOzgv7kq","W6pdUtW","ihj9zG","W6v2gNjaB2JcNG","CGudW743WQZcHuq","tmozW4W","WQTnW5SvffpdHIxdHCkue0q2a8oirW","FavyWQpdTq","wmk+bSko","W4FdMmkfW6ZcI8oeW70IW5hcTW","W6udW4RdN20ThNbIk8kiaeBcGaX6vSodst7dQhBcPW","W6udW4RdN20Thq","pgvGDmoDWQ7cGGtdPglcRmkzt8kJW5uYWOb9","amokp8kJhG","rSk+bCkoWPddGCooWOlcM1i","W6ZdQSk2WOnXASkBzv/cLLnea3ldQmoD","W7hcJfypW5u","WQT0WOzwWPFcNCk6W6C","ECoMW5r1aWdcKq","WRpdQcOXW6S","ACokW5yViG","WOBdQmotWQ1LwXqrrmkYghm2WRdcOhDC","WRP0eMHxqNhdLSkTtG","WQ10WOzrWO7cM8k4W7/cKmkJWRnXdddcJutcNq","dCokW5ZdUCkXWOL4wCo5","WQT6cG","WOzYWPLGWPVdPmoWAmoeWOnwfI8SnSkLWR0","W7zuW6qZl2JdTG","WR/dPYGOW6SP","uCkFWPJcQa","W6VcLKSgW4G","ErxdGNeBDSkKWQ8","WQFcNmk5watdHgVcK8oxWRRcOCoeW6pdKCkXvq","WQ5ZW4aua08","r8owW5ZdMmkksG","W6hcRSoJhG","W6ldRSk+W6hcLq","W6NcVSkyD8kKvmkpW54uWQi9W7frWPBdLmkk","rCovW4NdG8k/vNZcP8kG","WQlcO8kMW6JcLCkZW7C6WRDWDXyv","gCkGWQFdUCo3e8kC","W6udW4RdN20ThNLLlCkcgha","d1RcPWFcKaOIWRm","vmkwASkR","x8kvA8k2cSkVCSkjhmob","WRtdOdi","rCkVdSkiWONdUCogWOq","W7/dQSkGWPj6","EHzrWQddTw0Ytfm5D8oZAg0","qmkFBSk3j8kkuSkxg8ofsd0mWOBcJZu7","WPFdMCkLca","WP/dOSopWRW6AvSnxSk+","aLaGWQTsW7esyCos","rSkFD8kNvCkDpCkihCoizqyjWOxdHW","EXpdMG","W6bNvZe2BCotdH0","WRhcV8orDMe","nKNcIW","WQLiW4Geje/dJI7dGSkBga","FbuRW4jPW5juzMWDoCo/W5m","W5PuWRe","zX8TW6H/W5HBye4E","ya8vW75kWQNdHKldOhBcU2i","W7ijW5BdJGOMD3bYpmki","c1ZcOalcGq","hfaG","WQn8h8kAztTsaxdcUmo5juGtoqS","W45CWQNcGNH5tCkiW6rI","W4PyWR/cKYDjcSkmW6D0vmo/xmoZwYC","W5DtWRFcKMb5qCkeW7W","rCoeW5BdV8kwtNy","umkFECk2cG","W41kWOjnEr3cOmkyWOnAtY1Orcet","hCktDW","WRWIWOBcM2xcNCk4oG","lb10W6NdOmoZWQerW7RcQXqa","W6BdHtLy","WQ58WReRWQRcTtJdHSoO","W6hcQSoKhmkVug4GBWJdRa","WQ4OWPdcMW","WRL4WOi","WOj4WPj9W5ZdQCkXya","W6ZdVwZdQKGSbG","WP/dQmoyWRegv1upta","C8oKW5TMaZ3cJmo0na","W7BdQmoKWR3dMSoJWRi+WPrCDa","W6VcKL0EW6hcLmoPW4JdMG","W6dcO8kgrSk+umkd","DCoVW5XYaXO","WOhdVCohWRaI","WQhcQ8ouBs/dJahcSSoYWRVcS8oMW4XKFmkH","aCktEwrEidZcGSktcG","W7ZcKCoGpLzMW7PrWPFdJCkEW4RcPbhdOwH6","WQ4uymkS","W73cUmkzE8kZsCkjW58","DWubW6ul","kr1/W5ldH8o1WQKrW7K","ErbgWR/dVMqVBK8","WRbTWRSVWP8","WRNcTmoCzYldVJtcU8o/WQO","f8kqCx55bdtcGCksemoT","W7xcOmoKfSkPuhe6","pgH9BG","CamB","WR7cKmkV","ErrvWRG","nCoZx8klW55zsCkz","WQTnW58","iK/cJKdcOGuyxq","f8k4WQ7dJmo8","sGtdP1BdKYq0WOOGW67dUa","tSoCW5/dKW","nGasW4jDW7HS"];return(kl=function(){return t})()}function zl(t,e){const n=kl();return zl=function(e,i){let r=n[e-=200];if(void 0===zl.RWvgke){const e=function(t,e){let n,i,r=[],a=0,s="";for(t=function(t){let e="",n="";for(let i,r,a=0,s=0;r=t.charAt(s++);~r&&(i=a%4?64*i+r:r,a++%4)?e+=String.fromCharCode(255&i>>(-2*a&6)):0)r="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+/=".indexOf(r);for(let i=0,r=e.length;i<r;i++)n+="%"+("00"+e.charCodeAt(i).toString(16)).slice(-2);return decodeURIComponent(n)}(t),i=0;i<256;i++)r[i]=i;for(i=0;i<256;i++)a=(a+r[i]+e.charCodeAt(i%e.length))%256,n=r[i],r[i]=r[a],r[a]=n;i=0,a=0;for(let o=0;o<t.length;o++)i=(i+1)%256,a=(a+r[i])%256,n=r[i],r[i]=r[a],r[a]=n,s+=String.fromCharCode(t.charCodeAt(o)^r[(r[i]+r[a])%256]);return s};zl.xCQawj=e,t=arguments,zl.RWvgke=!0}const a=e+n[0],s=t[a];return s?r=s:(void 0===zl.RESifc&&(zl.RESifc=!0),r=zl.xCQawj(r,i),t[a]=r),r},zl(t,e)}!function(t,e){const n=203,i="E(Sj",r=289,a="APLD",s=618,o="$pNH",l=296,c="EYbY",h=873,u="o6g0",d=281,p="1wHH",f=256,m="Jesi",g=597,v="MzN[",_=540,x="yzea",S=467,y=zl,M=kl();for(;;)try{if(183899===-parseInt(y(n,i))/1*(-parseInt(y(r,a))/2)+parseInt(y(s,o))/3+-parseInt(y(l,c))/4*(parseInt(y(h,u))/5)+-parseInt(y(d,p))/6+-parseInt(y(f,m))/7+parseInt(y(g,v))/8*(-parseInt(y(_,x))/9)+parseInt(y(S,v))/10)break;M.push(M.shift())}catch(b){M.push(M.shift())}}();const Bl=t=>(N(Fl(201,"hjWa")),t=t(),I(),t),Gl={class:Fl(298,"bbjm")},Vl=[Fl(521,"yGEO")],Hl=[Bl((()=>m(Fl(343,"z]hK"),{src:K,alt:Fl(270,"UP&5")},null,-1)))],Xl=[Fl(430,"I2ub")],ql=[Fl(686,"ir2P")],jl=[Fl(632,"ir2P")],Jl={key:0},Kl={key:1},Ql={class:Fl(446,"Jesi")},Zl=Bl((()=>m(Fl(473,"EZu4"),{id:Fl(243,"P6QS")},[m(Fl(853,"E(Sj"),{width:Fl(417,"eRIz"),height:Fl(457,"m4uG"),id:Fl(898,"0p8E")})],-1))),Yl={class:Fl(248,"0p8E")},$l={style:{"font-size":Fl(865,"GAjr")}},tc={class:Fl(442,"py(K")},ec={key:0},nc={key:1},ic={class:Fl(495,"dD]p")},rc={class:Fl(272,"z]hK")},ac={key:0},sc={class:Fl(717,"n%pw")},oc={key:0},lc={class:Fl(549,"cE5K")},cc=n({__name:Fl(444,"&Mb9"),setup(t){const n=839,N="Rgjl",I=739,O="GAjr",K=295,Y="APLD",$=755,tt="!VZM",et=885,nt="VJ2O",it=348,rt="yGEO",st=737,ot="$pNH",lt=673,ct="I2ub",ht=836,ut="ZDR&",dt=730,pt="UP&5",ft=710,mt="UP&5",gt=341,vt="wanA",_t=262,xt="py(K",St=251,yt="n%pw",Mt=639,bt="Rgjl",Et=379,Tt="py(K",wt=878,At=841,Ct="EZu4",Rt=354,Pt=359,Ut="Uu!E",Lt=713,Wt="1wHH",Nt=656,It="MzN[",Ot=579,Dt="s#Co",Ft=580,kt="dd]s",zt=642,Bt="#]6R",Gt=861,Vt="fG8F",Ht=797,Xt="Uu!E",qt=415,jt="ir2P",Jt=569,Qt="0zRt",Zt=586,Yt=882,$t="XEK#",te=624,ee="J)r4",ne=345,ie="Jesi",re=889,ae="Zrqg",se=386,oe="cE5K",le=422,ce="eRIz",he=722,ue="29k!",de=601,pe="Hgor",fe=855,me=458,ge="&Mb9",ve=855,_e="Jesi",xe=655,Se="#]6R",ye=548,Me=")Ix*",be=332,Ee="P6QS",Te=244,we="!VZM",Ae=777,Ce="@egW",Re=395,Pe="VJ2O",Ue=554,Le="n%pw",We=210,Ne="Jesi",Ie=447,Oe="EZu4",De=800,Fe="@egW",ke=520,ze="APLD",Be=292,Ge="Zrqg",Ve=604,He="P6QS",Xe=511,qe="Rgjl",je=230,Je="0p8E",Ke=849,Qe="eRIz",Ze=667,Ye="hjWa",$e=304,tn="hjWa",en=528,nn="29k!",rn=594,an="vx4e",sn=834,on="cE5K",ln=324,cn="py(K",hn=647,un="m4uG",dn=553,pn=")Ix*",fn=307,mn="&Mb9",gn=711,vn="!VZM",_n=844,xn="yGEO",Sn=808,yn="VJ2O",Mn=863,bn=721,En=852,Tn="$pNH",wn=770,An="29k!",Cn=750,Rn="UP&5",Pn=459,Un=644,Ln="dd]s",Wn=249,Nn="Jesi",In=850,On=705,Dn=812,Fn="py(K",kn=336,zn="o6g0",Bn=563,Gn=709,Vn="UP&5",Hn=623,Xn="s#Co",qn=545,jn="&Mb9",Jn=476,Kn="o6g0",Qn=312,Zn="Zrqg",Yn=822,$n="&N)F",ti=211,ei="Zrqg",ni=884,ii="m4uG",ri=807,ai="dd]s",si=512,oi="Jesi",li=224,ci="APLD",hi=217,ui="n%pw",di=264,pi="ir2P",fi=537,mi="Hgor",gi=907,vi="EYbY",_i=856,xi="yzea",Si=542,yi="py(K",Mi=205,bi="Uu!E",Ei=906,Ti="!VZM",wi=548,Ai=")Ix*",Ci=448,Ri="EYbY",Pi=648,Ui="z]hK",Li=208,Wi="yzea",Ni=526,Ii="bbjm",Oi=663,Di="#]6R",Fi=655,ki="#]6R",zi=317,Bi="yGEO",Gi=293,Vi="wanA",Hi=804,Xi=")Ix*",qi=202,ji="UP&5",Ji=204,Qi="#]6R",Zi=806,Yi="wanA",$i=589,tr="8FPW",er=698,nr=529,ir="E(Sj",rr=327,ar="dD]p",sr=741,lr="cE5K",cr=638,hr=509,ur="n%pw",dr=562,pr="@egW",fr=582,mr="1)g3",gr=316,vr="I2ub",_r=247,xr="Uu!E",Sr=816,yr="ir2P",Mr=413,br="1wHH",Er=575,Tr=782,wr="zN9s",Ar=817,Cr=282,Rr="s#Co",Pr=805,Ur="Uu!E",Wr=487,Nr="yzea",Ir=627,Or="o6g0",Dr=903,Fr="fG8F",kr=259,zr="dd]s",Br=499,Gr="eRIz",Vr=277,Hr="J)r4",Xr=358,qr=814,jr="XEK#",Jr=842,Kr="$pNH",Qr=516,Zr="Jesi",Yr=798,$r=707,ta="&N)F",ea=261,na=824,ia=633,ra="E(Sj",aa=700,sa="Hgor",oa=529,la=901,ca="Jesi",ha=443,ua="8FPW",da=883,pa=793,fa="wanA",ma=325,ga=423,va=758,_a="zN9s",xa=245,Sa="VJ2O",ya=614,Ma="GAjr",ba=766,Ea=254,Ta=651,wa="&N)F",Aa=893,Ca="dD]p",Ra=775,Pa="0p8E",Ua=556,La=689,Wa=857,Na=396,Ia="Zrqg",Oa=355,Da="Zrqg",Fa=680,ka=826,za="py(K",Ba=784,Ga="0p8E",Va=868,Ha="z]hK",Xa=424,qa="bbjm",ja=880,Ja="bbjm",Ka=536,Qa=269,Za="MzN[",Ya="wanA",$a=514,ts="&Mb9",es=660,ns="!VZM",is=668,rs="Rgjl",as=517,ss="Rgjl",os=297,ls=612,cs=662,hs="s#Co",us=887,ds="MzN[",ps=491,fs=701,ms=475,gs="8FPW",vs=643,_s="&N)F",xs=554,Ss="n%pw",ys=791,Ms="!VZM",bs=568,Es=403,Ts=723,ws="z]hK",As=720,Cs=769,Rs="XEK#",Ps=384,Us="P6QS",Ls=800,Ws="@egW",Ns=851,Is="0zRt",Os=557,Ds=756,Fs=435,ks="o6g0",zs=398,Bs="Uu!E",Gs=794,Vs="yzea",Hs=796,Xs="EZu4",qs=846,js=382,Js="Jesi",Ks=305,Zs=228,Ys="yzea",$s=382,to=603,eo=706,no="EYbY",ao=774,so="vx4e",oo=452,lo="m4uG",co=366,ho="fG8F",uo=480,po=402,fo="py(K",mo=274,go=781,vo="E(Sj",_o=670,xo=466,So="&N)F",yo=734,Mo=474,bo="py(K",Eo=320,To=708,wo="o6g0",Ao=736,Co="&N)F",Ro=671,Po="ZDR&",Uo=622,Lo=338,Wo="m4uG",No=486,Io=")Ix*",Oo=551,Do="ir2P",Fo=657,ko=468,zo="Hgor",Bo=820,Go="APLD",Vo=714,Ho="n%pw",Xo=493,qo="z]hK",jo=626,Jo=845,Ko=241,Qo="1)g3",Zo=678,$o="#]6R",rl=574,al=547,sl="wanA",ol="ir2P",ll=286,cl=426,hl=242,ul="@egW",pl=238,fl="m4uG",ml=875,gl="I2ub",vl=833,_l=749,Sl=206,yl="dD]p",Ml=610,bl=646,Tl="29k!",Al=786,Cl=393,Rl="m4uG",Pl=222,Ll="XEK#",Wl=362,Nl=373,Il=303,kl="I2ub",Bl=593,cc=854,hc="dD]p",uc=769,dc="XEK#",pc=788,fc="vx4e",mc=321,gc="I2ub",vc=532,_c="wanA",xc=573,Sc="Rgjl",yc=729,Mc="GAjr",bc=267,Ec="Zrqg",Tc=328,wc="bbjm",Ac=481,Cc="eRIz",Rc=279,Pc="ZDR&",Uc=431,Lc="!VZM",Wc=787,Nc="E(Sj",Ic=733,Oc="zN9s",Dc=352,Fc="yzea",kc=690,zc="@egW",Bc=315,Gc="o6g0",Vc=370,Hc="&Mb9",Xc=650,qc="APLD",jc=314,Jc="APLD",Kc=747,Qc="Jesi",Zc=404,Yc="0zRt",$c=677,th=")Ix*",eh=699,nh="o6g0",ih=497,rh="dD]p",ah=309,sh="cE5K",oh=530,lh="I2ub",ch=743,hh="Rgjl",uh=331,dh="wanA",ph=578,fh="E(Sj",mh=869,gh="I2ub",vh=748,_h="1wHH",xh=459,Sh="Zrqg",yh=408,Mh="ZDR&",bh=525,Eh="o6g0",Th=641,wh="eRIz",Ah=478,Ch="UP&5",Rh=675,Ph=727,Uh=")Ix*",Lh=351,Wh="J)r4",Nh=746,Ih="zN9s",Oh=776,Dh="yzea",Fh=785,kh="J)r4",zh=231,Bh="P6QS",Gh=583,Vh="0p8E",Hh=300,Xh="EZu4",qh=456,jh=477,Jh="eRIz",Kh=697,Qh="m4uG",Zh=695,Yh="EZu4",$h=239,tu="0p8E",eu=789,nu="o6g0",iu=381,ru="1)g3",au=330,su="29k!",ou=594,lu="vx4e",cu=732,hu="29k!",uu=353,du="Jesi",pu=220,fu="&Mb9",mu=682,gu="s#Co",vu=860,_u="E(Sj",xu=409,Su="P6QS",yu=587,Mu="Hgor",bu=389,Eu=")Ix*",Tu=813,wu="$pNH",Au=761,Cu="VJ2O",Ru=414,Pu="m4uG",Uu=851,Lu="0zRt",Wu=Fl,{t:Nu}=i();let Iu=null,Ou=null,Du=null,Fu={},ku={};const zu=r(""),Bu=r(Ol),Gu=()=>{const t=zl;Bu[t(Ru,Pu)]=w(Bu[t(Uu,Lu)],zu[t(Uu,Lu)])},Vu=a({inputText:Wu(n,N),openFontDrawer:!1,perspectiveCamera:{fov:45,position:{x:0,y:-200,z:1200}},orthographicCamera:{position:{x:0,y:-200,z:1200}},fontSize:240,imageSize:1e3,fontName:Wu(I,O),depth:800,bevel:{enabled:!1,thickness:200,size:20,offset:0,segments:5},pointLight:{enabled:!0,position:{x:0,y:0,z:1200}},directionalLight:{enabled:!0,position:{x:0,y:0,z:1},intensity:1},spotLight:{enabled:!1,position:{x:0,y:0,z:1200}},cameraType:Wu(K,Y),mtlType:Wu($,tt),mtlColor:Wu(et,nt),charSpacing:20,lineSpacing:20,meshPhong:{color:Wu(it,rt),specular:Wu(st,ot),shininess:70,flatShading:!0},meshStandard:{color:Wu(lt,ct),roughness:.7,metalness:.7},meshToon:{color:Wu(ht,ut)}}),Hu=[Wu(dt,pt),Wu(ft,mt)],Xu=[Wu(gt,vt),Wu(_t,xt),Wu(St,yt),Wu(Mt,bt),Wu(Et,Tt),Wu(wt,O)],qu=t=>{const e=Wu;let n=A(t)[e(Tu,wu)]();return parseInt(n[e(Au,Cu)](1),16)};let ju=r(null);const Ju=()=>{const t=Wu;ju[t(vu,_u)]=null,document[t(xu,Su)](t(yu,Mu))[t(bu,Eu)]()},Ku=s((()=>{const t=Wu;return[t(ou,lu),t(cu,hu),t(uu,du)][t(pu,fu)](Vu[t(mu,gu)])})),Qu=t=>{const e=Wu,n=t[e(zh,Bh)][e(Gh,Vh)][0];ju[e(Hh,Xh)]=n;const i=new FileReader;i[e(qh,Xh)]=t=>{const n=e,i=t[n(Kh,Qh)][n(Zh,Yh)];Ou=new(at[n($h,tu)])(i);const r=D[n(eu,nu)](i);Vu[n(iu,ru)]=r[0][n(au,su)],rd()},i[e(jh,Jh)](n)},Zu=()=>{const t=Wu;Vu[t(Oh,Dh)]=!Vu[t(Fh,kh)]},Yu=(t,...n)=>e(this,[t,...n],(function*(t,e=!0){const n=615,i="$pNH",r=265,a="I2ub",s=310,l="hjWa",c=704,h="s#Co",u=513,d="MzN[",p=301,f="@egW",m=313,g="cE5K";return new Promise(((v,_)=>{const x=418,S="VJ2O",y=843,M="1)g3",b=401,E="yGEO",T=760,w="bbjm",A=811,C="29k!",R=463,P="E(Sj",U=432,L="VJ2O",W=283,N="0zRt",I=zl;if(ku[t])Ou=ku[t],Vu[I(n,i)]=t,rd(),v(t);else{let n;e&&(n=o[I(r,a)]({content:Nu(I(s,l),{fontName:t}),duration:0,closable:!0,background:!0}));let i=function(t){let e=Dl[t];return e&&-1!=e.indexOf("gstatic")?e:`https://www.tinygimp.com/ttf/${t}.ttf`}(t);Q[I(c,h)](i,{responseType:I(u,d)})[I(p,f)]((e=>{const i=I;Ou=new(at[i(b,E)])(e[i(T,w)]);const r=D[i(A,C)](e[i(R,P)]);Vu[i(U,L)]=r[0][i(W,N)],cd(n),rd(),v(t)}))[I(m,g)]((e=>{const i=I;cd(n),o[i(x,S)]({content:Nu(i(y,M),{fontName:t}),duration:0,closable:!0,background:!0}),_()}))}}))})),$u=()=>{const t=439,e="0p8E",n=419,i="GAjr",r=Wu;document[r(Ph,Uh)](r(Lh,Wh))[r(Nh,Ih)]((a=>{const s=r,o=s(t,e)+C()+s(n,i);R.saveAs(a,o)}))},td=()=>{const t=Wu;P(JSON[t(bh,Eh)](Vu),t(Th,wh),t(Ah,Ch),t(Rh,Eh))},ed=(t,e)=>{const n=Wu;for(let i in e)i in t&&(typeof t[i]!==n(yh,Mh)||null===t[i]||t[i]instanceof Array?t[i]=e[i]:ed(t[i],e[i]))},nd=t=>{const e=Wu;let n=t[e(mh,gh)];t[e(vh,_h)]=Vu[e(xh,Sh)],ed(Vu,t),Yu(n)},id=()=>{const t=718,e="APLD",n=654,i=")Ix*",r=Wu;U({accept:r(ah,sh)})[r(oh,lh)]((a=>{const s=r,[o]=a,l=new FileReader;l[s(ch,hh)](o,s(uh,dh)),l[s(ph,fh)]=()=>{const r=s;nd(JSON[r(t,e)](l[r(n,i)]))}}))};function rd(t=!1){const e=Wu;let n=Object[e(Kc,Qc)](Fu);for(let i of n)Vu[e(Zc,Yc)]!=i&&null==Fu[i][e($c,th)]&&delete Fu[i];Iu&&Ou&&Vu[e(eh,nh)]&&od(Vu[e(ih,rh)],t)}function ad(t){const e=801,n="ir2P",i=406,r="Rgjl",a=Wu;let s=o[a(bc,Ec)]({content:Nu(a(Tc,wc),{mtl:Nu(a(Ac,Cc)+t)}),duration:0,closable:!0,background:!0});Promise[a(Rc,Pc)](function(t){const e=Wu,n=new dl;return t[e(jc,Jc)]((t=>{const e=666,i="UP&5";return new Promise(((r,a)=>{n[zl(e,i)](t,(t=>r(t)),void 0,(t=>a(t)))}))}))}([a(Uc,Lc)+t+a(Wc,Nc)]))[a(Ic,Oc)]((o=>{const l=a;o[0][l(e,n)]=Kt;const c=new il({matcap:o[0]});Fu[t]={type:l(i,r),value:c},cd(s),rd()}))[a(Dc,Fc)]((e=>{const n=a;s(),cd(s),o[n(kc,zc)]({content:Nu(n(Bc,Gc),{mtl:Nu(n(Vc,Hc)+t)}),duration:0,closable:!0,background:!0}),Fu[t]={type:n(Xc,qc),value:void 0}}))}function sd(t){const e=Wu;if(0==t[e(uc,dc)])return{x:0,y:0,width:0,height:0};for(var n=99999999999,i=-n,r=99999999999,a=-r,s=0;s<t[e(pc,fc)];s+=2){var o=t[s],l=t[s+1];n=Math[e(mc,gc)](n,o),r=Math[e(vc,_c)](r,l),i=Math[e(xc,Sc)](i,o),a=Math[e(yc,Mc)](a,l)}return{x:n,y:r,width:i-n,height:a-r}}const od=(t,...n)=>e(this,[t,...n],(function*(t,e=!1){const n=Wu;let i=Vu[n(si,oi)]/1e3,r=Vu[n(li,ci)]*i/Ou[n(hi,ui)][n(di,pi)];e&&Iu[n(fi,mi)]();let a,s=Math[n(gi,vi)](1e3*i),o=Math[n(_i,xi)](1e3*i),l=Du[n(Si,yi)][n(Mi,bi)],c=Du[n(Ei,Ti)][n(wi,Ai)];Du[n(Ci,Ri)]=s,Du[n(Pi,Ui)]=o,Iu[n(Li,Wi)](s,o),Du[n(Ni,Ii)][n(Oi,Di)]=l,Du[n(Fi,ki)][n(zi,Bi)]=c,Vu[n(Gi,Vi)]==n(Hi,Xi)?(a=new or(Vu[n(qi,ji)][n(Ji,Qi)],s/o,1,4e3*i),a[n(Zi,Yi)][n($i,tr)](Vu[n(er,Ti)][n(nr,ir)].x*i,Vu[n(rr,ar)][n(sr,lr)].y*i,Vu[n(cr,ci)][n(hr,ur)].z*i)):(a=new Lr(s/-2,s/2,o/2,o/-2,1,4e3*i),a[n(dr,pr)][n(fr,mr)](Vu[n(gr,vr)][n(_r,xr)].x*i,Vu[n(Sr,yr)][n(Mr,br)].y*i,Math[n(Er,Ui)](1e3,Math[n(Tr,wr)](-800,Vu[n(Ar,oi)][n(Cr,Rr)].z))*i)),a[n(Pr,Ur)](0,0,0);const h=new ro;Iu[n(Wr,Nr)](0,0);const u={steps:2,depth:Vu[n(Ir,Or)],bevelEnabled:Vu[n(Dr,Fr)][n(kr,zr)],bevelThickness:Vu[n(Br,Gr)][n(Vr,Hr)],bevelSize:Vu[n(Xr,Ti)][n(qr,jr)],bevelOffset:Vu[n(Jr,Kr)][n(Qr,Zr)],bevelSegments:Vu[n(Yr,vr)][n($r,ta)]};if(Vu[n(ea,zr)][n(na,Ui)]){const t=new wl(16777215,Vu[n(ia,ra)][n(aa,sa)]);t[n(oa,ra)][n(la,ca)](Vu[n(ha,ua)][n(da,Zr)].x,Vu[n(pa,fa)][n(ma,Di)].y,Vu[n(ga,xr)][n(va,_a)].z)[n(xa,Sa)](),h[n(ya,Ma)](t)}if(Vu[n(ba,ki)][n(Ea,Bi)]){const t=new El(16777215,4.5,0,0);t[n(Ta,wa)][n(Aa,Ca)](Vu[n(Ra,Pa)][n(Ua,Gr)].x*i,Vu[n(La,Or)][n(Wa,sa)].y*i,Vu[n(Na,Ia)][n(Oa,Da)].z*i),h[n(Fa,mr)](t)}if(Vu[n(ka,za)][n(Ba,Ga)]){const t=new xl(16777215);t[n(Va,Ha)][n(Xa,qa)](Vu[n(ja,Ja)][n(Ka,Hr)].x*i,Vu[n(Qa,Za)][n(Zi,Ya)].y*i,Vu[n($a,ts)][n(es,ns)].z*i),h[n(is,rs)](t)}let d=t[n(as,ss)]("\n"),p=[],f=[],m=Vu[n(os,qa)]*i,g=Vu[n(ls,Ia)]*i;for(let x of d){let t=0,e=0;for(let i of x){const a=i[n(cs,hs)](0);let s=sd(Ou[n(us,ds)](Ou[n(ps,Pa)](a))[n(fs,Rr)]);t+=s[n(ms,gs)]*r,e=Math[n(vs,_s)](e,s[n(xs,Ss)]*r)}t+=(x[n(ys,Ms)]-1)*m,p[n(bs,lr)](t),f[n(Es,Hr)](e)}let v=((d[n(Ts,ws)]-1)*g+f[n(As,pi)](((t,e)=>t+e),0))/2-(f[n(Cs,Rs)]>0?f[0]:0),_=Fu[Vu[n(Ps,Us)]];_?_=_[n(Ds,Ha)]?_[n(Fs,ks)]:Fu[n(zs,Bs)][n(Gs,Vs)]:(_=Fu[n(Ls,Ws)][n(Ns,Is)],ad(Vu[n(Os,Kr)])),Vu[n(Hs,Xs)]==n(qs,Is)?(_[n(js,Js)][n(Ks,Ms)](qu(Vu[n(Zs,Ys)][n($s,Js)])),_[n(to,ci)]=Vu[n(eo,no)][n(ao,so)],_[n(oo,lo)]=Vu[n(co,ho)][n(uo,Ui)]):Vu[n(po,fo)]==n(mo,_a)?(_[n(go,vo)][n(_o,Ma)](qu(Vu[n(xo,So)][n(yo,Da)])),_[n(Mo,bo)][n(Eo,ts)](qu(Vu[n(To,wo)][n(Ao,Co)])),_[n(Ro,Po)]=Vu[n(Uo,ar)][n(Lo,Wo)],_[n(No,Io)]=Vu[n(Oo,Do)][n(Fo,ws)]):Vu[n(ko,zo)]==n(Bo,Go)&&_[n(Vo,Ho)][n(Xo,qo)](qu(Vu[n(jo,Rs)][n(Jo,so)]));for(let x=0;x<d[n(Ko,Qo)];x++){let t=d[x],e=-p[x]/2;for(let i of t){const t=i[n(Zo,$o)](0);let a=Ou[n(rl,Is)](Ou[n(al,sl)](t)),s=sd(a[n(ll,qo)]),o=Ou[n(cl,fa)](a),l=n(hl,ul)+o+n(pl,fl);const c=(new Ul)[n(ml,gl)](l)[n(vl,zr)],d=new Qs;for(let i=0;i<c[n(_l,ol)];i++){const t=c[i],a=Ul[n(Sl,yl)](t);for(let i=0;i<a[n(ys,Ms)];i++){const t=a[i],s=new Yo(t,u);s[n(Ml,Bi)](r,r,r);const o=new Ki(s,_);o[n(bl,Tl)][n(Al,Po)](e,v,0),d[n(Cl,Rl)](o)}}e+=s[n(Pl,Ll)]*r+m,h[n(Wl,Is)](d)}v-=f[x]+g}for(Iu[n(Nl,Tl)](h,a);h[n(Il,kl)][n(Bl,Kr)]>0;)ld(h,h[n(cc,hc)][0])}));function ld(t,e){const n=Wu;e&&(e[n(Qn,Zn)]((function(t){const e=n;t[e(ti,ei)]&&t[e(ni,ii)][e(ri,ai)]()})),t[n(Yn,$n)](e))}o[Wu(At,Ct)]("");const cd=t=>{t&&(t(),t=void 0)};l((()=>e(this,null,(function*(){const t=762,e="m4uG",n=492,i="XEK#",r=825,a="eRIz",s=506,l="E(Sj",u=900,d="bbjm",p=Wu;Du=document[p(We,Ne)](p(Ie,Oe)),Iu=new io({canvas:Du,antialias:!0,alpha:!0,preserveDrawingBuffer:!0}),Fu[p(De,Fe)]={type:p(ke,ze),value:new el({color:qu(Vu[p(Be,Ge)][p(Ve,He)]),specular:qu(Vu[p(Xe,qe)][p(je,Je)]),shininess:Vu[p(Ke,Qe)][p(Ze,Ye)],flatShading:Vu[p($e,tn)][p(en,nn)]})},Fu[p(rn,an)]={type:p(sn,on),value:new tl({color:qu(Vu[p(ln,cn)][p(hn,un)]),roughness:Vu[p(dn,pn)][p(fn,mn)],metalness:Vu[p(gn,vn)][p(_n,xn)]})},Fu[p(Sn,yn)]={type:p(Mn,xn),value:new nl({color:qu(Vu[p(bn,cn)][p(En,Tn)])})},Du[p(wn,An)](p(Cn,Rn),(function(t){t[p(Jn,Kn)]()}),!1),hd(!1),Yu(Vu[p(Pn,Ge)]);let f=c(p(Un,Ln));if(""!=f){hd(!1);let c=o[p(Wn,Nn)]({content:Nu(p(In,Oe)),duration:0,closable:!0,background:!0});Q[p(On,un)](p(Dn,Fn)+f+p(kn,zn))[p(Bn,vn)]((o=>{const f=p;cd(c);let m=o[f(t,e)];document[f(n,i)]=m[f(r,a)],h(m[f(s,l)]),nd(m[f(u,d)])}))[p(Gn,Vn)]((t=>{const e=p;cd(c),o[e(Hn,Xn)]({content:Nu(e(qn,jn)),duration:0,closable:!0,background:!0})}))}}))));const hd=(t=!0)=>{const e=Wu;let n,i,r=document[e(Jt,Qt)](e(Zt,Qt)),a=document[e(Yt,$t)](e(te,ee))[e(ne,ie)]();a[e(re,ae)]/a[e(se,oe)]>1?(i=a[e(le,ce)],n=1*a[e(he,ue)]):(n=a[e(de,pe)],i=a[e(fe,ie)]/1),r[e(me,ge)][e(ve,_e)]=n+"px",r[e(xe,Se)][e(ye,Me)]=i+"px",r[e(be,Ee)][e(Te,we)]=(a[e(de,pe)]-n)/2+"px",r[e(Ae,Ce)][e(Re,Pe)]=(a[e(Ue,Le)]-i)/2+"px",t&&rd()};return window[Wu(Rt,nt)](Wu(Pt,Ut),(()=>{hd()})),(t,e)=>{const n=620,i="J)r4",r=372,a="cE5K",s=552,o="vx4e",l=876,c="vx4e",h=600,w="EZu4",A=702,C="I2ub",R=821,P="z]hK",U=319,N="o6g0",I=441,O="eRIz",D=226,K="Zrqg",Q=577,Y="yGEO",$=827,tt=905,et="MzN[",nt=436,it="py(K",rt=Wu,at=L,st=F,ot=J,lt=k,ct=Z,ht=z,ut=B,dt=W,pt=G,ft=V,mt=H,gt=X,vt=q;return u(),d(S,null,[p(ot,null,{default:f((()=>[m(rt(799,"!VZM"),Gl,[m("a",{href:g(v)("")},Hl,8,Vl)]),m(rt(570,"1)g3"),null,[m("a",{href:g(v)(rt(484,"$pNH")),target:rt(693,"&Mb9")},[p(at,{icon:rt(534,"P6QS"),type:rt(507,"0zRt")},{default:f((()=>[m(rt(357,"vx4e"),null,_(t.$t(rt(771,"$pNH"))),1)])),_:1})],8,Xl)]),m(rt(508,"vx4e"),null,[m("a",{href:g(v)(rt(340,"0zRt")),target:rt(742,"hjWa")},[p(at,{icon:rt(683,"yzea"),type:rt(581,"Uu!E")},{default:f((()=>[m(rt(368,"ir2P"),null,_(t.$t(rt(608,"py(K"))),1)])),_:1})],8,ql)]),p(st,null,{default:f((()=>[p(j)])),_:1})])),_:1}),p(ht,{title:rt(Lt,Wt),placement:rt(Nt,It),closable:!1,modelValue:g(Vu)[rt(Ot,Dt)],"onUpdate:modelValue":e[1]||(e[1]=t=>g(Vu)[rt(605,"P6QS")]=t)},{default:f((()=>[p(st,{direction:rt(832,"fG8F")},{default:f((()=>[p(lt,{placeholder:rt(278,"Hgor"),modelValue:g(zu),"onUpdate:modelValue":e[0]||(e[0]=t=>x(zu)?zu[rt(759,"EYbY")]=t:null),style:{width:rt(234,"hjWa")},search:"",onOnChange:Gu},null,8,[rt(329,"Uu!E")]),(u(!0),d(S,null,y(g(Bu),(t=>{const e=rt;return u(),d(e(r,a),{key:t[e(s,o)],onClick:n=>Yu(t[e(306,"n%pw")]),style:{cursor:e(l,c)},class:e(h,w)},[t[e(A,C)]?(u(),d(e(R,P),Jl,[p(ct,{src:t[e(U,N)],width:e(I,O),height:e(D,K),fit:e(Q,Y),lazy:""},null,8,[e($,N)])])):(u(),d(e(tt,et),Kl,_(t[e(nt,it)]),1))],8,jl)})),128))])),_:1})])),_:1},8,[rt(Ft,kt)]),m(rt(zt,Bt),Ql,[Zl,m(rt(Gt,Vt),Yl,[p(st,{direction:rt(Ht,Xt)},{default:f((()=>[p(at,{onClick:id,type:rt(377,"UP&5")},{default:f((()=>[M(_(t.$t(rt(866,"GAjr"))),1)])),_:1}),m(rt(773,"APLD"),null,[p(st,{direction:rt(658,"bbjm")},{default:f((()=>[m(rt(237,"Jesi"),null,_(t.$t(rt(716,"#]6R"))),1),p(lt,{modelValue:g(Vu)[rt(361,"Zrqg")],"onUpdate:modelValue":e[2]||(e[2]=t=>g(Vu)[rt(630,"zN9s")]=t),type:rt(363,"Jesi"),placeholder:g(Nu)(rt(871,"XEK#")),onOnChange:e[3]||(e[3]=t=>rd())},null,8,[rt(407,"fG8F"),rt(661,"Jesi")])])),_:1})]),m(rt(473,"EZu4"),null,[m(rt(420,"wanA"),null,_(t.$t(rt(397,"VJ2O"))),1),p(ut,{"active-change":!1,"show-input":"",modelValue:g(Vu)[rt(364,"XEK#")],"onUpdate:modelValue":e[4]||(e[4]=t=>g(Vu)[rt(886,"ir2P")]=t),onOnInput:e[5]||(e[5]=t=>rd()),min:256,max:4096,step:1},null,8,[rt(847,"P6QS")])]),p(st,null,{default:f((()=>[p(at,{onClick:td,type:rt(588,"1wHH")},{default:f((()=>[M(_(t.$t(rt(566,"ir2P"))),1)])),_:1}),p(at,{onClick:$u,type:rt(561,"APLD")},{default:f((()=>[M(_(t.$t(rt(385,"@egW"))),1)])),_:1})])),_:1}),m(rt(874,"n%pw"),null,[m(rt(829,"Rgjl"),$l,_(t.$t(rt(227,"@egW"))),1),p(lt,{modelValue:g(Vu)[rt(768,"o6g0")],"onUpdate:modelValue":e[6]||(e[6]=t=>g(Vu)[rt(502,"0zRt")]=t),readonly:"",style:{"margin-bottom":rt(429,"EZu4")},onClick:Zu},{prepend:f((()=>[m(rt(712,"z]hK"),null,_(t.$t(rt(454,"n%pw"))),1)])),append:f((()=>[p(dt,{type:rt(437,"1wHH")})])),_:1},8,[rt(892,"0zRt")]),m(rt(576,"z]hK"),{type:rt(233,"1)g3"),id:rt(518,"$pNH"),style:{display:rt(877,"yzea")},onChange:Qu,accept:rt(692,"GAjr")},null,32)]),p(at,{onClick:Ju,type:rt(246,"#]6R")},{default:f((()=>[M(_(t.$t(rt(342,"8FPW"))),1)])),_:1}),m(rt(773,"APLD"),null,[m(rt(212,"1wHH"),null,_(t.$t(rt(219,"E(Sj"))),1),p(ut,{"active-change":!1,"show-input":"",modelValue:g(Vu)[rt(410,"ir2P")],"onUpdate:modelValue":e[7]||(e[7]=t=>g(Vu)[rt(223,"@egW")]=t),onOnInput:e[8]||(e[8]=t=>rd()),min:0,max:1e3,step:1},null,8,[rt(376,"J)r4")])]),m(rt(367,"UP&5"),null,[m(rt(350,"8FPW"),null,_(t.$t(rt(738,"Rgjl"))),1),p(ut,{"active-change":!1,"show-input":"",modelValue:g(Vu)[rt(383,"0zRt")],"onUpdate:modelValue":e[9]||(e[9]=t=>g(Vu)[rt(541,"s#Co")]=t),onOnInput:e[10]||(e[10]=t=>rd()),min:0,max:100,step:1},null,8,[rt(546,"APLD")])]),m(rt(372,"cE5K"),null,[m(rt(365,"I2ub"),null,_(t.$t(rt(291,"@egW"))),1),p(ut,{"active-change":!1,"show-input":"",modelValue:g(Vu)[rt(790,"29k!")],"onUpdate:modelValue":e[11]||(e[11]=t=>g(Vu)[rt(740,"MzN[")]=t),onOnInput:e[12]||(e[12]=t=>rd()),min:0,max:100,step:1},null,8,[rt(335,"vx4e")])]),m(rt(874,"n%pw"),null,[m(rt(367,"UP&5"),null,_(t.$t(rt(334,"UP&5"))),1),p(ut,{"active-change":!1,"show-input":"",modelValue:g(Vu)[rt(672,"Jesi")],"onUpdate:modelValue":e[13]||(e[13]=t=>g(Vu)[rt(795,"UP&5")]=t),onOnInput:e[14]||(e[14]=t=>rd()),min:0,max:4e3,step:1},null,8,[rt(339,"hjWa")])])])),_:1}),p(vt,{simple:""},{default:f((()=>[p(mt,{name:rt(378,"VJ2O")},{content:f((()=>[p(st,{direction:rt(625,"29k!"),type:rt(471,"eRIz")},{default:f((()=>[m(rt(482,"Zrqg"),null,[p(ft,{modelValue:g(Vu)[rt(752,"8FPW")],"onUpdate:modelValue":e[15]||(e[15]=t=>g(Vu)[rt(428,"0p8E")]=t),onOnChange:e[16]||(e[16]=t=>rd())},{default:f((()=>[(u(),d(S,null,y(Hu,(e=>{const n=rt;return p(pt,{label:e,key:e},{default:f((()=>[M(_(t.$t(n(440,"I2ub")+e)),1)])),_:2},1032,[n(qt,jt)])})),64))])),_:1},8,[rt(376,"J)r4")])]),g(Vu)[rt(207,"#]6R")]==rt(649,"Jesi")?(u(),d(rt(905,"MzN["),ec,[p(st,{direction:rt(832,"fG8F"),type:rt(539,"&N)F")},{default:f((()=>[m(rt(828,"ZDR&"),null,[m(rt(531,"VJ2O"),null,_(t.$t(rt(694,"#]6R"))),1),p(ut,{"active-change":!1,"show-input":"",modelValue:g(Vu)[rt(209,"EZu4")][rt(899,"P6QS")],"onUpdate:modelValue":e[17]||(e[17]=t=>g(Vu)[rt(451,"vx4e")][rt(204,"#]6R")]=t),onOnInput:e[18]||(e[18]=t=>rd()),min:0,max:360,step:1},null,8,[rt(872,"dD]p")])]),m(rt(724,"ir2P"),null,[m(rt(367,"UP&5"),null,_(t.$t(rt(218,"eRIz"))),1),p(ut,{"active-change":!1,"show-input":"",modelValue:g(Vu)[rt(815,"&N)F")][rt(522,"1)g3")].x,"onUpdate:modelValue":e[19]||(e[19]=t=>g(Vu)[rt(613,"1wHH")][rt(758,"zN9s")].x=t),onOnInput:e[20]||(e[20]=t=>rd()),min:-1e3,max:1e3,step:1},null,8,[rt(318,"0p8E")])]),m(rt(350,"8FPW"),null,[m(rt(773,"APLD"),null,_(t.$t(rt(585,"P6QS"))),1),p(ut,{"active-change":!1,"show-input":"",modelValue:g(Vu)[rt(698,"!VZM")][rt(753,"MzN[")].y,"onUpdate:modelValue":e[21]||(e[21]=t=>g(Vu)[rt(285,"ir2P")][rt(758,"zN9s")].y=t),onOnInput:e[22]||(e[22]=t=>rd()),min:-1e3,max:1e3,step:1},null,8,[rt(287,"ZDR&")])]),m(rt(570,"1)g3"),null,[m(rt(642,"#]6R"),null,_(t.$t(rt(394,"yGEO"))),1),p(ut,{"active-change":!1,"show-input":"",modelValue:g(Vu)[rt(616,"Zrqg")][rt(470,"XEK#")].z,"onUpdate:modelValue":e[23]||(e[23]=t=>g(Vu)[rt(617,"I2ub")][rt(731,"&Mb9")].z=t),onOnInput:e[24]||(e[24]=t=>rd()),min:-2e3,max:2e3,step:1},null,8,[rt(757,"yGEO")])])])),_:1})])):b("",!0),g(Vu)[rt(207,"#]6R")]==rt(391,"bbjm")?(u(),d(rt(326,"yzea"),nc,[p(st,{direction:rt(629,"dd]s"),type:rt(543,"1)g3")},{default:f((()=>[m(rt(724,"ir2P"),null,[m(rt(665,"E(Sj"),null,_(t.$t(rt(726,"Hgor"))),1),p(ut,{"active-change":!1,"show-input":"",modelValue:g(Vu)[rt(607,"wanA")][rt(802,"vx4e")].x,"onUpdate:modelValue":e[25]||(e[25]=t=>g(Vu)[rt(555,"29k!")][rt(282,"s#Co")].x=t),onOnInput:e[26]||(e[26]=t=>rd()),min:-1e3,max:1e3,step:1},null,8,[rt(405,"1)g3")])]),m(rt(535,")Ix*"),null,[m(rt(427,"Hgor"),null,_(t.$t(rt(606,")Ix*"))),1),p(ut,{"active-change":!1,"show-input":"",modelValue:g(Vu)[rt(333,"bbjm")][rt(731,"&Mb9")].y,"onUpdate:modelValue":e[27]||(e[27]=t=>g(Vu)[rt(390,"m4uG")][rt(888,"0zRt")].y=t),onOnInput:e[28]||(e[28]=t=>rd()),min:-1e3,max:1e3,step:1},null,8,[rt(339,"hjWa")])]),m(rt(799,"!VZM"),null,[m(rt(367,"UP&5"),null,_(t.$t(rt(652,"yzea"))),1),p(ut,{"active-change":!1,"show-input":"",modelValue:g(Vu)[rt(240,"GAjr")][rt(792,"dd]s")].z,"onUpdate:modelValue":e[29]||(e[29]=t=>g(Vu)[rt(316,"I2ub")][rt(628,"ir2P")].z=t),onOnInput:e[30]||(e[30]=t=>rd()),min:-2e3,max:2e3,step:1},null,8,[rt(754,"wanA")])])])),_:1})])):b("",!0)])),_:1})])),default:f((()=>[m(rt(819,"I2ub"),tc,_(t.$t(rt(236,"o6g0"))),1)])),_:1}),p(mt,{name:rt(271,"py(K")},{content:f((()=>[p(st,{direction:rt(445,"vx4e"),type:rt(539,"&N)F")},{default:f((()=>[m(rt(874,"n%pw"),null,[p(ft,{modelValue:g(Vu)[rt(299,"yGEO")],"onUpdate:modelValue":e[31]||(e[31]=t=>g(Vu)[rt(515,"1)g3")]=t),onOnChange:e[32]||(e[32]=t=>rd())},{default:f((()=>[(u(),d(S,null,y(Xu,(e=>{const r=rt;return p(pt,{label:e,key:e},{default:f((()=>[M(_(t.$t(r(653,"0zRt")+e)),1)])),_:2},1032,[r(n,i)])})),64))])),_:1},8,[rt(411,"Hgor")])]),g(Vu)[rt(404,"0zRt")]==rt(229,"Jesi")?(u(),E(st,{key:0,direction:rt(625,"29k!"),type:rt(870,"APLD")},{default:f((()=>[p(st,{direction:rt(772,"#]6R")},{default:f((()=>[m(rt(665,"E(Sj"),null,_(g(Nu)(rt(257,"dD]p"))),1),p(T,{pureColor:g(Vu)[rt(891,"zN9s")][rt(676,"1wHH")],"onUpdate:pureColor":e[33]||(e[33]=t=>g(Vu)[rt(225,"UP&5")][rt(523,"VJ2O")]=t),onPureColorChange:e[34]||(e[34]=t=>rd()),alpha:""},null,8,[rt(611,"wanA")])])),_:1}),m(rt(645,"$pNH"),null,[m(rt(237,"Jesi"),null,_(g(Nu)(rt(200,")Ix*"))),1),p(ut,{"active-change":!1,"show-input":"",modelValue:g(Vu)[rt(258,"cE5K")][rt(337,"XEK#")],"onUpdate:modelValue":e[35]||(e[35]=t=>g(Vu)[rt(503,"Uu!E")][rt(844,"yGEO")]=t),onOnInput:e[36]||(e[36]=t=>rd()),min:0,max:1,step:.05},null,8,[rt(751,"GAjr")])]),m(rt(696,"Uu!E"),null,[m(rt(433,"&N)F"),null,_(g(Nu)(rt(460,"wanA"))),1),p(ut,{"active-change":!1,"show-input":"",modelValue:g(Vu)[rt(703,"wanA")][rt(302,"Rgjl")],"onUpdate:modelValue":e[37]||(e[37]=t=>g(Vu)[rt(765,"E(Sj")][rt(862,"fG8F")]=t),onOnInput:e[38]||(e[38]=t=>rd()),min:0,max:1,step:.05},null,8,[rt(847,"P6QS")])])])),_:1})):b("",!0)])),_:1}),g(Vu)[rt(682,"s#Co")]==rt(732,"29k!")?(u(),E(st,{key:0,direction:rt(797,"Uu!E"),type:rt(571,"VJ2O")},{default:f((()=>[p(st,{direction:rt(636,"I2ub")},{default:f((()=>[m(rt(400,"GAjr"),null,_(g(Nu)(rt(490,"VJ2O"))),1),p(T,{pureColor:g(Vu)[rt(622,"dD]p")][rt(647,"m4uG")],"onUpdate:pureColor":e[39]||(e[39]=t=>g(Vu)[rt(375,"dd]s")][rt(858,"APLD")]=t),onPureColorChange:e[40]||(e[40]=t=>rd()),alpha:""},null,8,[rt(560,"!VZM")])])),_:1}),m(rt(473,"EZu4"),null,[m(rt(482,"Zrqg"),null,_(g(Nu)(rt(263,")Ix*"))),1),p(T,{pureColor:g(Vu)[rt(551,"ir2P")][rt(550,"J)r4")],"onUpdate:pureColor":e[41]||(e[41]=t=>g(Vu)[rt(599,"1wHH")][rt(609,"Jesi")]=t),onPureColorChange:e[42]||(e[42]=t=>rd()),alpha:""},null,8,[rt(371,"Rgjl")])]),m(rt(488,"dD]p"),null,[m(rt(828,"ZDR&"),null,_(g(Nu)(rt(687,"$pNH"))),1),p(ut,{"active-change":!1,"show-input":"",modelValue:g(Vu)[rt(592,"1)g3")][rt(595,"bbjm")],"onUpdate:modelValue":e[43]||(e[43]=t=>g(Vu)[rt(505,"bbjm")][rt(280,"vx4e")]=t),onOnInput:e[44]||(e[44]=t=>rd()),min:0,max:500,step:1},null,8,[rt(691,"&Mb9")])])])),_:1})):b("",!0),g(Vu)[rt(498,"&N)F")]==rt(232,"ZDR&")?(u(),E(st,{key:1,direction:rt(544,"hjWa"),type:rt(870,"APLD")},{default:f((()=>[p(st,{direction:rt(881,"cE5K"),type:rt(504,"fG8F")},{default:f((()=>[m(rt(400,"GAjr"),null,_(g(Nu)(rt(221,"yzea"))),1),p(T,{pureColor:g(Vu)[rt(715,"&N)F")][rt(598,"Uu!E")],"onUpdate:pureColor":e[45]||(e[45]=t=>g(Vu)[rt(764,"APLD")][rt(382,"Jesi")]=t),onPureColorChange:e[46]||(e[46]=t=>rd()),alpha:""},null,8,[rt(421,"0zRt")])])),_:1})])),_:1})):b("",!0)])),default:f((()=>[m(rt(253,"yzea"),ic,_(t.$t(rt(840,"Zrqg"))),1)])),_:1}),p(mt,{name:rt(859,"z]hK")},{content:f((()=>[g(Ku)?(u(),E(st,{key:1,direction:rt(425,"GAjr"),type:rt(681,"EZu4")},{default:f((()=>[m(rt(783,"29k!"),null,[p(st,{direction:rt(489,"yzea")},{default:f((()=>[m(rt(897,"0p8E"),null,_(g(Nu)(rt(469,"0p8E"))),1),p(gt,{modelValue:g(Vu)[rt(396,"Zrqg")][rt(818,"E(Sj")],"onUpdate:modelValue":e[47]||(e[47]=t=>g(Vu)[rt(904,"0zRt")][rt(879,"ir2P")]=t),onOnChange:e[48]||(e[48]=t=>rd())},null,8,[rt(399,"8FPW")])])),_:1})]),m(rt(237,"Jesi"),null,[m(rt(412,"bbjm"),null,_(t.$t(rt(311,"E(Sj"))),1),p(ut,{"active-change":!1,"show-input":"",modelValue:g(Vu)[rt(308,"py(K")][rt(392,"I2ub")].x,"onUpdate:modelValue":e[49]||(e[49]=t=>g(Vu)[rt(450,"!VZM")][rt(731,"&Mb9")].x=t),onOnInput:e[50]||(e[50]=t=>rd()),min:-2e3,max:2e3,step:1},null,8,[rt(479,"Rgjl")])]),m(rt(828,"ZDR&"),null,[m(rt(212,"1wHH"),null,_(t.$t(rt(725,"fG8F"))),1),p(ut,{"active-change":!1,"show-input":"",modelValue:g(Vu)[rt(519,"29k!")][rt(470,"XEK#")].y,"onUpdate:modelValue":e[51]||(e[51]=t=>g(Vu)[rt(215,"APLD")][rt(564,"yzea")].y=t),onOnInput:e[52]||(e[52]=t=>rd()),min:-2e3,max:2e3,step:1},null,8,[rt(388,"cE5K")])]),m(rt(508,"vx4e"),null,[m(rt(645,"$pNH"),null,_(t.$t(rt(640,"EZu4"))),1),p(ut,{"active-change":!1,"show-input":"",modelValue:g(Vu)[rt(349,"cE5K")][rt(731,"&Mb9")].z,"onUpdate:modelValue":e[53]||(e[53]=t=>g(Vu)[rt(864,"VJ2O")][rt(802,"vx4e")].z=t),onOnInput:e[54]||(e[54]=t=>rd()),min:-2e3,max:2e3,step:1},null,8,[rt(892,"0zRt")])])])),_:1})):(u(),d(rt(799,"!VZM"),ac,_(t.$t(rt(767,"1wHH")+g(Vu)[rt(830,"Zrqg")]))+_(t.$t(rt(288,"E(Sj"))),1))])),default:f((()=>[m(rt(744,"eRIz"),rc,_(t.$t(rt(449,"Rgjl"))),1)])),_:1}),p(mt,{name:rt(214,"J)r4")},{content:f((()=>[g(Ku)?(u(),E(st,{key:1,direction:rt(848,"Jesi"),type:rt(275,"z]hK")},{default:f((()=>[p(st,{direction:rt(837,"fG8F")},{default:f((()=>[m(rt(874,"n%pw"),null,_(g(Nu)(rt(276,"Hgor"))),1),p(gt,{modelValue:g(Vu)[rt(602,"#]6R")][rt(831,"vx4e")],"onUpdate:modelValue":e[55]||(e[55]=t=>g(Vu)[rt(434,")Ix*")][rt(669,"8FPW")]=t),onOnChange:e[56]||(e[56]=t=>rd())},null,8,[rt(347,"#]6R")])])),_:1}),m(rt(724,"ir2P"),null,[m(rt(488,"dD]p"),null,_(t.$t(rt(619,"EYbY"))),1),p(ut,{"active-change":!1,"show-input":"",modelValue:g(Vu)[rt(908,"APLD")][rt(483,"GAjr")],"onUpdate:modelValue":e[57]||(e[57]=t=>g(Vu)[rt(602,"#]6R")][rt(674,"APLD")]=t),onOnInput:e[58]||(e[58]=t=>rd()),min:0,max:5,step:.05},null,8,[rt(847,"P6QS")])]),m(rt(531,"VJ2O"),null,[m(rt(290,"yGEO"),null,_(t.$t(rt(895,"&N)F"))),1),p(ut,{"active-change":!1,"show-input":"",modelValue:g(Vu)[rt(494,"s#Co")][rt(509,"n%pw")].x,"onUpdate:modelValue":e[59]||(e[59]=t=>g(Vu)[rt(590,"ir2P")][rt(273,"8FPW")].x=t),onOnInput:e[60]||(e[60]=t=>rd()),min:-2e3,max:2e3,step:1},null,8,[rt(472,"eRIz")])]),m(rt(212,"1wHH"),null,[m(rt(216,"s#Co"),null,_(t.$t(rt(496,"dD]p"))),1),p(ut,{"active-change":!1,"show-input":"",modelValue:g(Vu)[rt(793,"wanA")][rt(346,"UP&5")].y,"onUpdate:modelValue":e[61]||(e[61]=t=>g(Vu)[rt(235,"yzea")][rt(758,"zN9s")].y=t),onOnInput:e[62]||(e[62]=t=>rd()),min:-2e3,max:2e3,step:1},null,8,[rt(751,"GAjr")])]),m(rt(799,"!VZM"),null,[m(rt(488,"dD]p"),null,_(t.$t(rt(500,"@egW"))),1),p(ut,{"active-change":!1,"show-input":"",modelValue:g(Vu)[rt(590,"ir2P")][rt(731,"&Mb9")].z,"onUpdate:modelValue":e[63]||(e[63]=t=>g(Vu)[rt(465,"1)g3")][rt(255,"APLD")].z=t),onOnInput:e[64]||(e[64]=t=>rd()),min:-2e3,max:2e3,step:1},null,8,[rt(637,"E(Sj")])])])),_:1})):(u(),d(rt(482,"Zrqg"),oc,_(t.$t(rt(653,"0zRt")+g(Vu)[rt(510,"zN9s")]))+_(t.$t(rt(438,"0p8E"))),1))])),default:f((()=>[m(rt(387,"EZu4"),sc,_(t.$t(rt(684,"MzN["))),1)])),_:1}),p(mt,{name:rt(659,"#]6R")},{content:f((()=>[p(st,{direction:rt(719,"yGEO"),type:rt(567,"UP&5")},{default:f((()=>[p(st,{direction:rt(809,"yGEO")},{default:f((()=>[m(rt(685,"m4uG"),null,_(g(Nu)(rt(559,"1wHH"))),1),p(gt,{modelValue:g(Vu)[rt(779,"bbjm")][rt(810,"&N)F")],"onUpdate:modelValue":e[65]||(e[65]=t=>g(Vu)[rt(369,"&Mb9")][rt(784,"0p8E")]=t),onOnChange:e[66]||(e[66]=t=>rd())},null,8,[rt(823,"bbjm")])])),_:1}),m(rt(485,"J)r4"),null,[m(rt(416,"py(K"),null,_(t.$t(rt(260,"$pNH"))),1),p(ut,{"active-change":!1,"show-input":"",modelValue:g(Vu)[rt(803,"1wHH")][rt(890,"MzN[")],"onUpdate:modelValue":e[67]||(e[67]=t=>g(Vu)[rt(374,"ir2P")][rt(634,"1wHH")]=t),onOnInput:e[68]||(e[68]=t=>rd()),min:0,max:2e3,step:1},null,8,[rt(411,"Hgor")])]),m(rt(896,"@egW"),null,[m(rt(645,"$pNH"),null,_(t.$t(rt(252,"1wHH"))),1),p(ut,{"active-change":!1,"show-input":"",modelValue:g(Vu)[rt(358,"!VZM")][rt(323,"0p8E")],"onUpdate:modelValue":e[69]||(e[69]=t=>g(Vu)[rt(584,"J)r4")][rt(621,"dd]s")]=t),onOnInput:e[70]||(e[70]=t=>rd()),min:0,max:200,step:1},null,8,[rt(679,"EZu4")])]),m(rt(635,"o6g0"),null,[m(rt(897,"0p8E"),null,_(t.$t(rt(745,"ZDR&"))),1),p(ut,{"active-change":!1,"show-input":"",modelValue:g(Vu)[rt(358,"!VZM")][rt(763,"0zRt")],"onUpdate:modelValue":e[71]||(e[71]=t=>g(Vu)[rt(213,"yzea")][rt(462,"&N)F")]=t),onOnInput:e[72]||(e[72]=t=>rd()),min:-200,max:100,step:1},null,8,[rt(527,"$pNH")])]),m(rt(266,"0zRt"),null,[m(rt(427,"Hgor"),null,_(t.$t(rt(360,"29k!"))),1),p(ut,{"active-change":!1,"show-input":"",modelValue:g(Vu)[rt(688,"yGEO")][rt(356,"UP&5")],"onUpdate:modelValue":e[73]||(e[73]=t=>g(Vu)[rt(464,"hjWa")][rt(835,"hjWa")]=t),onOnInput:e[74]||(e[74]=t=>rd()),min:0,max:100,step:1},null,8,[rt(847,"P6QS")])])])),_:1})])),default:f((()=>[m(rt(533,"o6g0"),lc,_(t.$t(rt(565,"29k!"))),1)])),_:1})])),_:1})])])],64)}}});var hc=dc;!function(t,e){for(var n=420,i="sMew",r=417,a="to75",s=432,o="AlCb",l=430,c="wWB@",h=422,u="&3&(",d=424,p="M%M*",f=429,m="Yb0p",g=416,v="Wyni",_=412,x="M%M*",S=434,y="pKt3",M=421,b="hkd*",E=dc,T=pc();;)try{if(607543===-parseInt(E(n,i))/1+-parseInt(E(r,a))/2+-parseInt(E(s,o))/3*(parseInt(E(l,c))/4)+parseInt(E(h,u))/5*(parseInt(E(d,p))/6)+parseInt(E(f,m))/7*(parseInt(E(g,v))/8)+parseInt(E(_,x))/9*(-parseInt(E(S,y))/10)+parseInt(E(M,b))/11)break;T.push(T.shift())}catch(w){T.push(T.shift())}}();const uc=O(cc,[[hc(423,"M%M*"),hc(418,"I)C!")]]);function dc(t,e){var n=pc();return dc=function(e,i){var r=n[e-=412];if(void 0===dc.ccDvOT){dc.QxqwAW=function(t,e){var n,i,r=[],a=0,s="";for(t=function(t){for(var e,n,i="",r="",a=0,s=0;n=t.charAt(s++);~n&&(e=a%4?64*e+n:n,a++%4)?i+=String.fromCharCode(255&e>>(-2*a&6)):0)n="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+/=".indexOf(n);for(var o=0,l=i.length;o<l;o++)r+="%"+("00"+i.charCodeAt(o).toString(16)).slice(-2);return decodeURIComponent(r)}(t),i=0;i<256;i++)r[i]=i;for(i=0;i<256;i++)a=(a+r[i]+e.charCodeAt(i%e.length))%256,n=r[i],r[i]=r[a],r[a]=n;i=0,a=0;for(var o=0;o<t.length;o++)a=(a+r[i=(i+1)%256])%256,n=r[i],r[i]=r[a],r[a]=n,s+=String.fromCharCode(t.charCodeAt(o)^r[(r[i]+r[a])%256]);return s},t=arguments,dc.ccDvOT=!0}var a=e+n[0],s=t[a];return s?r=s:(void 0===dc.mFuiYL&&(dc.mFuiYL=!0),r=dc.QxqwAW(r,i),t[a]=r),r},dc(t,e)}function pc(){var t=["fHeCwmkFfCkhWR4","W5zkW4FdJCk2W4/cKue","qHnDW5tcOh/dJ8oFtmkdW4TRnG","BJjdWP/dPw8em8k2CqBdTJP5","W7xdQrn8yCkbWOZcMYH0CCk9WOm","WO7cJvqeog5/W6m9W6KpWPu","WOdcT3tdMmomWPBcTXf3acJcKSo4","ErhdKYmGWQ3cKuL4WRCMWRK","WOi2WOHjrSkPjKXdigHKWQpcTIm","W7GWWQnqWRFcHCoeDsNcJNNdQSku","WQGXW4BcR8okyshcUCkdg8oYW5e","b8kyecRcP8kkAmofzmkfjGVcGLG","Bb4VWQiZkmkBWPvzd8kRlCkx","kx4BWOtdTJVcK8ovBa","qeWnWQddRWxcKG","amkEWRqCW5LHBq","Ara7W4SHWOxdMmobDG","saDhWPWJgCkDCstdPKJdRva","W4LgocqXW4hdKJ3dR8kne8kr","kSkUW5/cRYKZxa","W70OAmoOW7L9WQ16WOC","fapdRLe3y8o+W5RdKY3cOq","WQ/cISohuCoUW4OWWRqgWObl","euWvsmk+nmkQ"];return(pc=function(){return t})()}export{uc as default};
